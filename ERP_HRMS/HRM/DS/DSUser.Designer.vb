'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DSUser"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DSUser
    Inherits Global.System.Data.DataSet
    
    Private tabletbl_MIS_User_Dept As tbl_MIS_User_DeptDataTable
    
    Private tabletbl_MIS_User As tbl_MIS_UserDataTable
    
    Private tabletbl_HRM_App_Authority As tbl_HRM_App_AuthorityDataTable
    
    Private tabletbl_Comp_Info As tbl_Comp_InfoDataTable
    
    Private tabletbl_Log_Shift As tbl_Log_ShiftDataTable
    
    Private tableView_HRM_Section As View_HRM_SectionDataTable
    
    Private tabletbl_MIS_User_Log As tbl_MIS_User_LogDataTable
    
    Private tabletbl_Acc_FinancialPeriod As tbl_Acc_FinancialPeriodDataTable
    
    Private tableUsers As UsersDataTable
    
    Private tableTbl_Lock_Users As Tbl_Lock_UsersDataTable
    
    Private tabletbl_MIS_User_NEW As tbl_MIS_User_NEWDataTable
    
    Private relationtbl_MIS_User_Dept_tbl_MIS_User As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("tbl_MIS_User_Dept")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_MIS_User_DeptDataTable(ds.Tables("tbl_MIS_User_Dept")))
            End If
            If (Not (ds.Tables("tbl_MIS_User")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_MIS_UserDataTable(ds.Tables("tbl_MIS_User")))
            End If
            If (Not (ds.Tables("tbl_HRM_App_Authority")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_HRM_App_AuthorityDataTable(ds.Tables("tbl_HRM_App_Authority")))
            End If
            If (Not (ds.Tables("tbl_Comp_Info")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Comp_InfoDataTable(ds.Tables("tbl_Comp_Info")))
            End If
            If (Not (ds.Tables("tbl_Log_Shift")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Log_ShiftDataTable(ds.Tables("tbl_Log_Shift")))
            End If
            If (Not (ds.Tables("View_HRM_Section")) Is Nothing) Then
                MyBase.Tables.Add(New View_HRM_SectionDataTable(ds.Tables("View_HRM_Section")))
            End If
            If (Not (ds.Tables("tbl_MIS_User_Log")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_MIS_User_LogDataTable(ds.Tables("tbl_MIS_User_Log")))
            End If
            If (Not (ds.Tables("tbl_Acc_FinancialPeriod")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Acc_FinancialPeriodDataTable(ds.Tables("tbl_Acc_FinancialPeriod")))
            End If
            If (Not (ds.Tables("Users")) Is Nothing) Then
                MyBase.Tables.Add(New UsersDataTable(ds.Tables("Users")))
            End If
            If (Not (ds.Tables("Tbl_Lock_Users")) Is Nothing) Then
                MyBase.Tables.Add(New Tbl_Lock_UsersDataTable(ds.Tables("Tbl_Lock_Users")))
            End If
            If (Not (ds.Tables("tbl_MIS_User_NEW")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_MIS_User_NEWDataTable(ds.Tables("tbl_MIS_User_NEW")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_MIS_User_Dept() As tbl_MIS_User_DeptDataTable
        Get
            Return Me.tabletbl_MIS_User_Dept
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_MIS_User() As tbl_MIS_UserDataTable
        Get
            Return Me.tabletbl_MIS_User
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_HRM_App_Authority() As tbl_HRM_App_AuthorityDataTable
        Get
            Return Me.tabletbl_HRM_App_Authority
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Comp_Info() As tbl_Comp_InfoDataTable
        Get
            Return Me.tabletbl_Comp_Info
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Log_Shift() As tbl_Log_ShiftDataTable
        Get
            Return Me.tabletbl_Log_Shift
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_HRM_Section() As View_HRM_SectionDataTable
        Get
            Return Me.tableView_HRM_Section
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_MIS_User_Log() As tbl_MIS_User_LogDataTable
        Get
            Return Me.tabletbl_MIS_User_Log
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_Acc_FinancialPeriod() As tbl_Acc_FinancialPeriodDataTable
        Get
            Return Me.tabletbl_Acc_FinancialPeriod
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Users() As UsersDataTable
        Get
            Return Me.tableUsers
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Tbl_Lock_Users() As Tbl_Lock_UsersDataTable
        Get
            Return Me.tableTbl_Lock_Users
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tbl_MIS_User_NEW() As tbl_MIS_User_NEWDataTable
        Get
            Return Me.tabletbl_MIS_User_NEW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DSUser = CType(MyBase.Clone,DSUser)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("tbl_MIS_User_Dept")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_MIS_User_DeptDataTable(ds.Tables("tbl_MIS_User_Dept")))
            End If
            If (Not (ds.Tables("tbl_MIS_User")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_MIS_UserDataTable(ds.Tables("tbl_MIS_User")))
            End If
            If (Not (ds.Tables("tbl_HRM_App_Authority")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_HRM_App_AuthorityDataTable(ds.Tables("tbl_HRM_App_Authority")))
            End If
            If (Not (ds.Tables("tbl_Comp_Info")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Comp_InfoDataTable(ds.Tables("tbl_Comp_Info")))
            End If
            If (Not (ds.Tables("tbl_Log_Shift")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Log_ShiftDataTable(ds.Tables("tbl_Log_Shift")))
            End If
            If (Not (ds.Tables("View_HRM_Section")) Is Nothing) Then
                MyBase.Tables.Add(New View_HRM_SectionDataTable(ds.Tables("View_HRM_Section")))
            End If
            If (Not (ds.Tables("tbl_MIS_User_Log")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_MIS_User_LogDataTable(ds.Tables("tbl_MIS_User_Log")))
            End If
            If (Not (ds.Tables("tbl_Acc_FinancialPeriod")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_Acc_FinancialPeriodDataTable(ds.Tables("tbl_Acc_FinancialPeriod")))
            End If
            If (Not (ds.Tables("Users")) Is Nothing) Then
                MyBase.Tables.Add(New UsersDataTable(ds.Tables("Users")))
            End If
            If (Not (ds.Tables("Tbl_Lock_Users")) Is Nothing) Then
                MyBase.Tables.Add(New Tbl_Lock_UsersDataTable(ds.Tables("Tbl_Lock_Users")))
            End If
            If (Not (ds.Tables("tbl_MIS_User_NEW")) Is Nothing) Then
                MyBase.Tables.Add(New tbl_MIS_User_NEWDataTable(ds.Tables("tbl_MIS_User_NEW")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabletbl_MIS_User_Dept = CType(MyBase.Tables("tbl_MIS_User_Dept"),tbl_MIS_User_DeptDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_MIS_User_Dept) Is Nothing) Then
                Me.tabletbl_MIS_User_Dept.InitVars
            End If
        End If
        Me.tabletbl_MIS_User = CType(MyBase.Tables("tbl_MIS_User"),tbl_MIS_UserDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_MIS_User) Is Nothing) Then
                Me.tabletbl_MIS_User.InitVars
            End If
        End If
        Me.tabletbl_HRM_App_Authority = CType(MyBase.Tables("tbl_HRM_App_Authority"),tbl_HRM_App_AuthorityDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_HRM_App_Authority) Is Nothing) Then
                Me.tabletbl_HRM_App_Authority.InitVars
            End If
        End If
        Me.tabletbl_Comp_Info = CType(MyBase.Tables("tbl_Comp_Info"),tbl_Comp_InfoDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Comp_Info) Is Nothing) Then
                Me.tabletbl_Comp_Info.InitVars
            End If
        End If
        Me.tabletbl_Log_Shift = CType(MyBase.Tables("tbl_Log_Shift"),tbl_Log_ShiftDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Log_Shift) Is Nothing) Then
                Me.tabletbl_Log_Shift.InitVars
            End If
        End If
        Me.tableView_HRM_Section = CType(MyBase.Tables("View_HRM_Section"),View_HRM_SectionDataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_HRM_Section) Is Nothing) Then
                Me.tableView_HRM_Section.InitVars
            End If
        End If
        Me.tabletbl_MIS_User_Log = CType(MyBase.Tables("tbl_MIS_User_Log"),tbl_MIS_User_LogDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_MIS_User_Log) Is Nothing) Then
                Me.tabletbl_MIS_User_Log.InitVars
            End If
        End If
        Me.tabletbl_Acc_FinancialPeriod = CType(MyBase.Tables("tbl_Acc_FinancialPeriod"),tbl_Acc_FinancialPeriodDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_Acc_FinancialPeriod) Is Nothing) Then
                Me.tabletbl_Acc_FinancialPeriod.InitVars
            End If
        End If
        Me.tableUsers = CType(MyBase.Tables("Users"),UsersDataTable)
        If (initTable = true) Then
            If (Not (Me.tableUsers) Is Nothing) Then
                Me.tableUsers.InitVars
            End If
        End If
        Me.tableTbl_Lock_Users = CType(MyBase.Tables("Tbl_Lock_Users"),Tbl_Lock_UsersDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTbl_Lock_Users) Is Nothing) Then
                Me.tableTbl_Lock_Users.InitVars
            End If
        End If
        Me.tabletbl_MIS_User_NEW = CType(MyBase.Tables("tbl_MIS_User_NEW"),tbl_MIS_User_NEWDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletbl_MIS_User_NEW) Is Nothing) Then
                Me.tabletbl_MIS_User_NEW.InitVars
            End If
        End If
        Me.relationtbl_MIS_User_Dept_tbl_MIS_User = Me.Relations("tbl_MIS_User_Dept_tbl_MIS_User")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DSUser"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DSUser.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabletbl_MIS_User_Dept = New tbl_MIS_User_DeptDataTable()
        MyBase.Tables.Add(Me.tabletbl_MIS_User_Dept)
        Me.tabletbl_MIS_User = New tbl_MIS_UserDataTable()
        MyBase.Tables.Add(Me.tabletbl_MIS_User)
        Me.tabletbl_HRM_App_Authority = New tbl_HRM_App_AuthorityDataTable()
        MyBase.Tables.Add(Me.tabletbl_HRM_App_Authority)
        Me.tabletbl_Comp_Info = New tbl_Comp_InfoDataTable()
        MyBase.Tables.Add(Me.tabletbl_Comp_Info)
        Me.tabletbl_Log_Shift = New tbl_Log_ShiftDataTable()
        MyBase.Tables.Add(Me.tabletbl_Log_Shift)
        Me.tableView_HRM_Section = New View_HRM_SectionDataTable()
        MyBase.Tables.Add(Me.tableView_HRM_Section)
        Me.tabletbl_MIS_User_Log = New tbl_MIS_User_LogDataTable()
        MyBase.Tables.Add(Me.tabletbl_MIS_User_Log)
        Me.tabletbl_Acc_FinancialPeriod = New tbl_Acc_FinancialPeriodDataTable()
        MyBase.Tables.Add(Me.tabletbl_Acc_FinancialPeriod)
        Me.tableUsers = New UsersDataTable()
        MyBase.Tables.Add(Me.tableUsers)
        Me.tableTbl_Lock_Users = New Tbl_Lock_UsersDataTable()
        MyBase.Tables.Add(Me.tableTbl_Lock_Users)
        Me.tabletbl_MIS_User_NEW = New tbl_MIS_User_NEWDataTable()
        MyBase.Tables.Add(Me.tabletbl_MIS_User_NEW)
        Me.relationtbl_MIS_User_Dept_tbl_MIS_User = New Global.System.Data.DataRelation("tbl_MIS_User_Dept_tbl_MIS_User", New Global.System.Data.DataColumn() {Me.tabletbl_MIS_User_Dept.LoginDeptIDColumn}, New Global.System.Data.DataColumn() {Me.tabletbl_MIS_User.LoginDeptIDColumn}, false)
        Me.Relations.Add(Me.relationtbl_MIS_User_Dept_tbl_MIS_User)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetbl_MIS_User_Dept() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetbl_MIS_User() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetbl_HRM_App_Authority() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetbl_Comp_Info() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetbl_Log_Shift() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeView_HRM_Section() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetbl_MIS_User_Log() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetbl_Acc_FinancialPeriod() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeUsers() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeTbl_Lock_Users() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializetbl_MIS_User_NEW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DSUser = New DSUser()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tbl_MIS_User_DeptRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_MIS_User_DeptRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tbl_MIS_UserRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_MIS_UserRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tbl_HRM_App_AuthorityRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_HRM_App_AuthorityRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tbl_Comp_InfoRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_Comp_InfoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tbl_Log_ShiftRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_Log_ShiftRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub View_HRM_SectionRowChangeEventHandler(ByVal sender As Object, ByVal e As View_HRM_SectionRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tbl_MIS_User_LogRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_MIS_User_LogRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tbl_Acc_FinancialPeriodRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_Acc_FinancialPeriodRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub UsersRowChangeEventHandler(ByVal sender As Object, ByVal e As UsersRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub Tbl_Lock_UsersRowChangeEventHandler(ByVal sender As Object, ByVal e As Tbl_Lock_UsersRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub tbl_MIS_User_NEWRowChangeEventHandler(ByVal sender As Object, ByVal e As tbl_MIS_User_NEWRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_MIS_User_DeptDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_MIS_User_DeptRow)
        
        Private columnLoginDeptID As Global.System.Data.DataColumn
        
        Private columnDeptName As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_MIS_User_Dept"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LoginDeptIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLoginDeptID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DeptNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeptName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_MIS_User_DeptRow
            Get
                Return CType(Me.Rows(index),tbl_MIS_User_DeptRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_MIS_User_DeptRowChanging As tbl_MIS_User_DeptRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_MIS_User_DeptRowChanged As tbl_MIS_User_DeptRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_MIS_User_DeptRowDeleting As tbl_MIS_User_DeptRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_MIS_User_DeptRowDeleted As tbl_MIS_User_DeptRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtbl_MIS_User_DeptRow(ByVal row As tbl_MIS_User_DeptRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtbl_MIS_User_DeptRow(ByVal DeptName As String, ByVal Status As Boolean) As tbl_MIS_User_DeptRow
            Dim rowtbl_MIS_User_DeptRow As tbl_MIS_User_DeptRow = CType(Me.NewRow,tbl_MIS_User_DeptRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, DeptName, Status}
            rowtbl_MIS_User_DeptRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_MIS_User_DeptRow)
            Return rowtbl_MIS_User_DeptRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByLoginDeptID(ByVal LoginDeptID As Integer) As tbl_MIS_User_DeptRow
            Return CType(Me.Rows.Find(New Object() {LoginDeptID}),tbl_MIS_User_DeptRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_MIS_User_DeptDataTable = CType(MyBase.Clone,tbl_MIS_User_DeptDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_MIS_User_DeptDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnLoginDeptID = MyBase.Columns("LoginDeptID")
            Me.columnDeptName = MyBase.Columns("DeptName")
            Me.columnStatus = MyBase.Columns("Status")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnLoginDeptID = New Global.System.Data.DataColumn("LoginDeptID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLoginDeptID)
            Me.columnDeptName = New Global.System.Data.DataColumn("DeptName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeptName)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnLoginDeptID}, true))
            Me.columnLoginDeptID.AutoIncrement = true
            Me.columnLoginDeptID.AutoIncrementSeed = -1
            Me.columnLoginDeptID.AutoIncrementStep = -1
            Me.columnLoginDeptID.AllowDBNull = false
            Me.columnLoginDeptID.ReadOnly = true
            Me.columnLoginDeptID.Unique = true
            Me.columnDeptName.AllowDBNull = false
            Me.columnDeptName.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtbl_MIS_User_DeptRow() As tbl_MIS_User_DeptRow
            Return CType(Me.NewRow,tbl_MIS_User_DeptRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_MIS_User_DeptRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_MIS_User_DeptRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_MIS_User_DeptRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_MIS_User_DeptRowChanged(Me, New tbl_MIS_User_DeptRowChangeEvent(CType(e.Row,tbl_MIS_User_DeptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_MIS_User_DeptRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_MIS_User_DeptRowChanging(Me, New tbl_MIS_User_DeptRowChangeEvent(CType(e.Row,tbl_MIS_User_DeptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_MIS_User_DeptRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_MIS_User_DeptRowDeleted(Me, New tbl_MIS_User_DeptRowChangeEvent(CType(e.Row,tbl_MIS_User_DeptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_MIS_User_DeptRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_MIS_User_DeptRowDeleting(Me, New tbl_MIS_User_DeptRowChangeEvent(CType(e.Row,tbl_MIS_User_DeptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetbl_MIS_User_DeptRow(ByVal row As tbl_MIS_User_DeptRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSUser = New DSUser()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_MIS_User_DeptDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_MIS_UserDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_MIS_UserRow)
        
        Private columnUserID As Global.System.Data.DataColumn
        
        Private columnLoginName As Global.System.Data.DataColumn
        
        Private columnpasswd As Global.System.Data.DataColumn
        
        Private columnLoginDeptID As Global.System.Data.DataColumn
        
        Private columnUserSataus As Global.System.Data.DataColumn
        
        Private columnIpAddress As Global.System.Data.DataColumn
        
        Private columnSPStatus As Global.System.Data.DataColumn
        
        Private columnPSWDDate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_MIS_User"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property UserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LoginNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLoginName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property passwdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpasswd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LoginDeptIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLoginDeptID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property UserSatausColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserSataus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IpAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIpAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SPStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PSWDDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPSWDDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_MIS_UserRow
            Get
                Return CType(Me.Rows(index),tbl_MIS_UserRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_MIS_UserRowChanging As tbl_MIS_UserRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_MIS_UserRowChanged As tbl_MIS_UserRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_MIS_UserRowDeleting As tbl_MIS_UserRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_MIS_UserRowDeleted As tbl_MIS_UserRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtbl_MIS_UserRow(ByVal row As tbl_MIS_UserRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtbl_MIS_UserRow(ByVal LoginName As String, ByVal passwd As String, ByVal parenttbl_MIS_User_DeptRowBytbl_MIS_User_Dept_tbl_MIS_User As tbl_MIS_User_DeptRow, ByVal UserSataus As Boolean, ByVal IpAddress As String, ByVal SPStatus As Boolean, ByVal PSWDDate As Date) As tbl_MIS_UserRow
            Dim rowtbl_MIS_UserRow As tbl_MIS_UserRow = CType(Me.NewRow,tbl_MIS_UserRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, LoginName, passwd, Nothing, UserSataus, IpAddress, SPStatus, PSWDDate}
            If (Not (parenttbl_MIS_User_DeptRowBytbl_MIS_User_Dept_tbl_MIS_User) Is Nothing) Then
                columnValuesArray(3) = parenttbl_MIS_User_DeptRowBytbl_MIS_User_Dept_tbl_MIS_User(0)
            End If
            rowtbl_MIS_UserRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_MIS_UserRow)
            Return rowtbl_MIS_UserRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByUserID(ByVal UserID As Integer) As tbl_MIS_UserRow
            Return CType(Me.Rows.Find(New Object() {UserID}),tbl_MIS_UserRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_MIS_UserDataTable = CType(MyBase.Clone,tbl_MIS_UserDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_MIS_UserDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnUserID = MyBase.Columns("UserID")
            Me.columnLoginName = MyBase.Columns("LoginName")
            Me.columnpasswd = MyBase.Columns("passwd")
            Me.columnLoginDeptID = MyBase.Columns("LoginDeptID")
            Me.columnUserSataus = MyBase.Columns("UserSataus")
            Me.columnIpAddress = MyBase.Columns("IpAddress")
            Me.columnSPStatus = MyBase.Columns("SPStatus")
            Me.columnPSWDDate = MyBase.Columns("PSWDDate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnUserID = New Global.System.Data.DataColumn("UserID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserID)
            Me.columnLoginName = New Global.System.Data.DataColumn("LoginName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLoginName)
            Me.columnpasswd = New Global.System.Data.DataColumn("passwd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpasswd)
            Me.columnLoginDeptID = New Global.System.Data.DataColumn("LoginDeptID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLoginDeptID)
            Me.columnUserSataus = New Global.System.Data.DataColumn("UserSataus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserSataus)
            Me.columnIpAddress = New Global.System.Data.DataColumn("IpAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIpAddress)
            Me.columnSPStatus = New Global.System.Data.DataColumn("SPStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPStatus)
            Me.columnPSWDDate = New Global.System.Data.DataColumn("PSWDDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPSWDDate)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnUserID}, true))
            Me.columnUserID.AutoIncrement = true
            Me.columnUserID.AutoIncrementSeed = -1
            Me.columnUserID.AutoIncrementStep = -1
            Me.columnUserID.AllowDBNull = false
            Me.columnUserID.ReadOnly = true
            Me.columnUserID.Unique = true
            Me.columnLoginName.AllowDBNull = false
            Me.columnLoginName.MaxLength = 50
            Me.columnpasswd.AllowDBNull = false
            Me.columnpasswd.MaxLength = 50
            Me.columnLoginDeptID.AllowDBNull = false
            Me.columnIpAddress.MaxLength = 15
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtbl_MIS_UserRow() As tbl_MIS_UserRow
            Return CType(Me.NewRow,tbl_MIS_UserRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_MIS_UserRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_MIS_UserRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_MIS_UserRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_MIS_UserRowChanged(Me, New tbl_MIS_UserRowChangeEvent(CType(e.Row,tbl_MIS_UserRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_MIS_UserRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_MIS_UserRowChanging(Me, New tbl_MIS_UserRowChangeEvent(CType(e.Row,tbl_MIS_UserRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_MIS_UserRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_MIS_UserRowDeleted(Me, New tbl_MIS_UserRowChangeEvent(CType(e.Row,tbl_MIS_UserRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_MIS_UserRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_MIS_UserRowDeleting(Me, New tbl_MIS_UserRowChangeEvent(CType(e.Row,tbl_MIS_UserRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetbl_MIS_UserRow(ByVal row As tbl_MIS_UserRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSUser = New DSUser()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_MIS_UserDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_HRM_App_AuthorityDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_HRM_App_AuthorityRow)
        
        Private columnAppID As Global.System.Data.DataColumn
        
        Private columnName As Global.System.Data.DataColumn
        
        Private columnDesigID As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_HRM_App_Authority"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AppIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAppID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DesigIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesigID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_HRM_App_AuthorityRow
            Get
                Return CType(Me.Rows(index),tbl_HRM_App_AuthorityRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_HRM_App_AuthorityRowChanging As tbl_HRM_App_AuthorityRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_HRM_App_AuthorityRowChanged As tbl_HRM_App_AuthorityRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_HRM_App_AuthorityRowDeleting As tbl_HRM_App_AuthorityRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_HRM_App_AuthorityRowDeleted As tbl_HRM_App_AuthorityRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtbl_HRM_App_AuthorityRow(ByVal row As tbl_HRM_App_AuthorityRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtbl_HRM_App_AuthorityRow(ByVal Name As String, ByVal DesigID As Integer, ByVal Status As Boolean) As tbl_HRM_App_AuthorityRow
            Dim rowtbl_HRM_App_AuthorityRow As tbl_HRM_App_AuthorityRow = CType(Me.NewRow,tbl_HRM_App_AuthorityRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Name, DesigID, Status}
            rowtbl_HRM_App_AuthorityRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_HRM_App_AuthorityRow)
            Return rowtbl_HRM_App_AuthorityRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByAppID(ByVal AppID As Integer) As tbl_HRM_App_AuthorityRow
            Return CType(Me.Rows.Find(New Object() {AppID}),tbl_HRM_App_AuthorityRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_HRM_App_AuthorityDataTable = CType(MyBase.Clone,tbl_HRM_App_AuthorityDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_HRM_App_AuthorityDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAppID = MyBase.Columns("AppID")
            Me.columnName = MyBase.Columns("Name")
            Me.columnDesigID = MyBase.Columns("DesigID")
            Me.columnStatus = MyBase.Columns("Status")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAppID = New Global.System.Data.DataColumn("AppID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAppID)
            Me.columnName = New Global.System.Data.DataColumn("Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName)
            Me.columnDesigID = New Global.System.Data.DataColumn("DesigID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesigID)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnAppID}, true))
            Me.columnAppID.AutoIncrement = true
            Me.columnAppID.AutoIncrementSeed = -1
            Me.columnAppID.AutoIncrementStep = -1
            Me.columnAppID.AllowDBNull = false
            Me.columnAppID.ReadOnly = true
            Me.columnAppID.Unique = true
            Me.columnName.AllowDBNull = false
            Me.columnName.MaxLength = 1050
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtbl_HRM_App_AuthorityRow() As tbl_HRM_App_AuthorityRow
            Return CType(Me.NewRow,tbl_HRM_App_AuthorityRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_HRM_App_AuthorityRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_HRM_App_AuthorityRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_HRM_App_AuthorityRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_HRM_App_AuthorityRowChanged(Me, New tbl_HRM_App_AuthorityRowChangeEvent(CType(e.Row,tbl_HRM_App_AuthorityRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_HRM_App_AuthorityRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_HRM_App_AuthorityRowChanging(Me, New tbl_HRM_App_AuthorityRowChangeEvent(CType(e.Row,tbl_HRM_App_AuthorityRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_HRM_App_AuthorityRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_HRM_App_AuthorityRowDeleted(Me, New tbl_HRM_App_AuthorityRowChangeEvent(CType(e.Row,tbl_HRM_App_AuthorityRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_HRM_App_AuthorityRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_HRM_App_AuthorityRowDeleting(Me, New tbl_HRM_App_AuthorityRowChangeEvent(CType(e.Row,tbl_HRM_App_AuthorityRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetbl_HRM_App_AuthorityRow(ByVal row As tbl_HRM_App_AuthorityRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSUser = New DSUser()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_HRM_App_AuthorityDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_Comp_InfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_Comp_InfoRow)
        
        Private columnCmpID As Global.System.Data.DataColumn
        
        Private columnCompanyName As Global.System.Data.DataColumn
        
        Private columnAddress As Global.System.Data.DataColumn
        
        Private columnLogo As Global.System.Data.DataColumn
        
        Private columnSalayType As Global.System.Data.DataColumn
        
        Private columnOverTimeType As Global.System.Data.DataColumn
        
        Private columnCompanyStartYear As Global.System.Data.DataColumn
        
        Private columnEmailAddress As Global.System.Data.DataColumn
        
        Private columnPhoneNo As Global.System.Data.DataColumn
        
        Private columnSign As Global.System.Data.DataColumn
        
        Private columnPEESIFIX As Global.System.Data.DataColumn
        
        Private columnEOBIFix As Global.System.Data.DataColumn
        
        Private columnBuffetMealDed As Global.System.Data.DataColumn
        
        Private columnLabourMealDed As Global.System.Data.DataColumn
        
        Private columnBUSOT As Global.System.Data.DataColumn
        
        Private columnMedicalLeaves As Global.System.Data.DataColumn
        
        Private columnCasualLeaves As Global.System.Data.DataColumn
        
        Private columnAnnualLeaves As Global.System.Data.DataColumn
        
        Private columnAuditStatus As Global.System.Data.DataColumn
        
        Private columnReportsPath As Global.System.Data.DataColumn
        
        Private columnDailyTravelAllowance As Global.System.Data.DataColumn
        
        Private columnBStatus As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Comp_Info"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CmpIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCmpID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CompanyNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompanyName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LogoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SalayTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalayType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OverTimeTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverTimeType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CompanyStartYearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompanyStartYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EmailAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmailAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PhoneNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPhoneNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SignColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSign
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PEESIFIXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPEESIFIX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EOBIFixColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEOBIFix
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BuffetMealDedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBuffetMealDed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LabourMealDedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLabourMealDed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BUSOTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUSOT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MedicalLeavesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMedicalLeaves
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CasualLeavesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCasualLeaves
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AnnualLeavesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnnualLeaves
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AuditStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAuditStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ReportsPathColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReportsPath
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DailyTravelAllowanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDailyTravelAllowance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property BStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_Comp_InfoRow
            Get
                Return CType(Me.Rows(index),tbl_Comp_InfoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Comp_InfoRowChanging As tbl_Comp_InfoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Comp_InfoRowChanged As tbl_Comp_InfoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Comp_InfoRowDeleting As tbl_Comp_InfoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Comp_InfoRowDeleted As tbl_Comp_InfoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtbl_Comp_InfoRow(ByVal row As tbl_Comp_InfoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtbl_Comp_InfoRow( _
                    ByVal CompanyName As String,  _
                    ByVal Address As String,  _
                    ByVal Logo() As Byte,  _
                    ByVal SalayType As String,  _
                    ByVal OverTimeType As String,  _
                    ByVal CompanyStartYear As Integer,  _
                    ByVal EmailAddress As String,  _
                    ByVal PhoneNo As String,  _
                    ByVal Sign As String,  _
                    ByVal PEESIFIX As Integer,  _
                    ByVal EOBIFix As Integer,  _
                    ByVal BuffetMealDed As Integer,  _
                    ByVal LabourMealDed As Integer,  _
                    ByVal BUSOT As Integer,  _
                    ByVal MedicalLeaves As Boolean,  _
                    ByVal CasualLeaves As Boolean,  _
                    ByVal AnnualLeaves As Boolean,  _
                    ByVal AuditStatus As Boolean,  _
                    ByVal ReportsPath As String,  _
                    ByVal DailyTravelAllowance As Integer,  _
                    ByVal BStatus As Boolean) As tbl_Comp_InfoRow
            Dim rowtbl_Comp_InfoRow As tbl_Comp_InfoRow = CType(Me.NewRow,tbl_Comp_InfoRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CompanyName, Address, Logo, SalayType, OverTimeType, CompanyStartYear, EmailAddress, PhoneNo, Sign, PEESIFIX, EOBIFix, BuffetMealDed, LabourMealDed, BUSOT, MedicalLeaves, CasualLeaves, AnnualLeaves, AuditStatus, ReportsPath, DailyTravelAllowance, BStatus}
            rowtbl_Comp_InfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_Comp_InfoRow)
            Return rowtbl_Comp_InfoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByCmpID(ByVal CmpID As Integer) As tbl_Comp_InfoRow
            Return CType(Me.Rows.Find(New Object() {CmpID}),tbl_Comp_InfoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_Comp_InfoDataTable = CType(MyBase.Clone,tbl_Comp_InfoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_Comp_InfoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCmpID = MyBase.Columns("CmpID")
            Me.columnCompanyName = MyBase.Columns("CompanyName")
            Me.columnAddress = MyBase.Columns("Address")
            Me.columnLogo = MyBase.Columns("Logo")
            Me.columnSalayType = MyBase.Columns("SalayType")
            Me.columnOverTimeType = MyBase.Columns("OverTimeType")
            Me.columnCompanyStartYear = MyBase.Columns("CompanyStartYear")
            Me.columnEmailAddress = MyBase.Columns("EmailAddress")
            Me.columnPhoneNo = MyBase.Columns("PhoneNo")
            Me.columnSign = MyBase.Columns("Sign")
            Me.columnPEESIFIX = MyBase.Columns("PEESIFIX")
            Me.columnEOBIFix = MyBase.Columns("EOBIFix")
            Me.columnBuffetMealDed = MyBase.Columns("BuffetMealDed")
            Me.columnLabourMealDed = MyBase.Columns("LabourMealDed")
            Me.columnBUSOT = MyBase.Columns("BUSOT")
            Me.columnMedicalLeaves = MyBase.Columns("MedicalLeaves")
            Me.columnCasualLeaves = MyBase.Columns("CasualLeaves")
            Me.columnAnnualLeaves = MyBase.Columns("AnnualLeaves")
            Me.columnAuditStatus = MyBase.Columns("AuditStatus")
            Me.columnReportsPath = MyBase.Columns("ReportsPath")
            Me.columnDailyTravelAllowance = MyBase.Columns("DailyTravelAllowance")
            Me.columnBStatus = MyBase.Columns("BStatus")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCmpID = New Global.System.Data.DataColumn("CmpID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCmpID)
            Me.columnCompanyName = New Global.System.Data.DataColumn("CompanyName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompanyName)
            Me.columnAddress = New Global.System.Data.DataColumn("Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress)
            Me.columnLogo = New Global.System.Data.DataColumn("Logo", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogo)
            Me.columnSalayType = New Global.System.Data.DataColumn("SalayType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalayType)
            Me.columnOverTimeType = New Global.System.Data.DataColumn("OverTimeType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOverTimeType)
            Me.columnCompanyStartYear = New Global.System.Data.DataColumn("CompanyStartYear", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompanyStartYear)
            Me.columnEmailAddress = New Global.System.Data.DataColumn("EmailAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmailAddress)
            Me.columnPhoneNo = New Global.System.Data.DataColumn("PhoneNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPhoneNo)
            Me.columnSign = New Global.System.Data.DataColumn("Sign", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSign)
            Me.columnPEESIFIX = New Global.System.Data.DataColumn("PEESIFIX", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPEESIFIX)
            Me.columnEOBIFix = New Global.System.Data.DataColumn("EOBIFix", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEOBIFix)
            Me.columnBuffetMealDed = New Global.System.Data.DataColumn("BuffetMealDed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBuffetMealDed)
            Me.columnLabourMealDed = New Global.System.Data.DataColumn("LabourMealDed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLabourMealDed)
            Me.columnBUSOT = New Global.System.Data.DataColumn("BUSOT", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUSOT)
            Me.columnMedicalLeaves = New Global.System.Data.DataColumn("MedicalLeaves", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMedicalLeaves)
            Me.columnCasualLeaves = New Global.System.Data.DataColumn("CasualLeaves", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCasualLeaves)
            Me.columnAnnualLeaves = New Global.System.Data.DataColumn("AnnualLeaves", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnnualLeaves)
            Me.columnAuditStatus = New Global.System.Data.DataColumn("AuditStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAuditStatus)
            Me.columnReportsPath = New Global.System.Data.DataColumn("ReportsPath", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReportsPath)
            Me.columnDailyTravelAllowance = New Global.System.Data.DataColumn("DailyTravelAllowance", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDailyTravelAllowance)
            Me.columnBStatus = New Global.System.Data.DataColumn("BStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBStatus)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCmpID}, true))
            Me.columnCmpID.AutoIncrement = true
            Me.columnCmpID.AutoIncrementSeed = -1
            Me.columnCmpID.AutoIncrementStep = -1
            Me.columnCmpID.AllowDBNull = false
            Me.columnCmpID.ReadOnly = true
            Me.columnCmpID.Unique = true
            Me.columnCompanyName.AllowDBNull = false
            Me.columnCompanyName.MaxLength = 2050
            Me.columnAddress.AllowDBNull = false
            Me.columnAddress.MaxLength = 1050
            Me.columnSalayType.AllowDBNull = false
            Me.columnSalayType.MaxLength = 850
            Me.columnOverTimeType.AllowDBNull = false
            Me.columnOverTimeType.MaxLength = 850
            Me.columnEmailAddress.MaxLength = 50
            Me.columnPhoneNo.MaxLength = 50
            Me.columnSign.MaxLength = 50
            Me.columnReportsPath.MaxLength = 850
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtbl_Comp_InfoRow() As tbl_Comp_InfoRow
            Return CType(Me.NewRow,tbl_Comp_InfoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_Comp_InfoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_Comp_InfoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_Comp_InfoRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_Comp_InfoRowChanged(Me, New tbl_Comp_InfoRowChangeEvent(CType(e.Row,tbl_Comp_InfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_Comp_InfoRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_Comp_InfoRowChanging(Me, New tbl_Comp_InfoRowChangeEvent(CType(e.Row,tbl_Comp_InfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_Comp_InfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_Comp_InfoRowDeleted(Me, New tbl_Comp_InfoRowChangeEvent(CType(e.Row,tbl_Comp_InfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_Comp_InfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_Comp_InfoRowDeleting(Me, New tbl_Comp_InfoRowChangeEvent(CType(e.Row,tbl_Comp_InfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetbl_Comp_InfoRow(ByVal row As tbl_Comp_InfoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSUser = New DSUser()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_Comp_InfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_Log_ShiftDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_Log_ShiftRow)
        
        Private columnShiftLogID As Global.System.Data.DataColumn
        
        Private columnEmpID As Global.System.Data.DataColumn
        
        Private columnShiftID As Global.System.Data.DataColumn
        
        Private columnFromDate As Global.System.Data.DataColumn
        
        Private columnEndDate As Global.System.Data.DataColumn
        
        Private columnIPAddress As Global.System.Data.DataColumn
        
        Private columnCreationTime As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Log_Shift"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ShiftLogIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShiftLogID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EmpIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ShiftIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShiftID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FromDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFromDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EndDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEndDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IPAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIPAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CreationTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreationTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_Log_ShiftRow
            Get
                Return CType(Me.Rows(index),tbl_Log_ShiftRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Log_ShiftRowChanging As tbl_Log_ShiftRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Log_ShiftRowChanged As tbl_Log_ShiftRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Log_ShiftRowDeleting As tbl_Log_ShiftRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Log_ShiftRowDeleted As tbl_Log_ShiftRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtbl_Log_ShiftRow(ByVal row As tbl_Log_ShiftRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtbl_Log_ShiftRow(ByVal EmpID As Integer, ByVal ShiftID As Integer, ByVal FromDate As Date, ByVal EndDate As Date, ByVal IPAddress As String, ByVal CreationTime As Date) As tbl_Log_ShiftRow
            Dim rowtbl_Log_ShiftRow As tbl_Log_ShiftRow = CType(Me.NewRow,tbl_Log_ShiftRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, EmpID, ShiftID, FromDate, EndDate, IPAddress, CreationTime}
            rowtbl_Log_ShiftRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_Log_ShiftRow)
            Return rowtbl_Log_ShiftRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByShiftLogID(ByVal ShiftLogID As Integer) As tbl_Log_ShiftRow
            Return CType(Me.Rows.Find(New Object() {ShiftLogID}),tbl_Log_ShiftRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_Log_ShiftDataTable = CType(MyBase.Clone,tbl_Log_ShiftDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_Log_ShiftDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnShiftLogID = MyBase.Columns("ShiftLogID")
            Me.columnEmpID = MyBase.Columns("EmpID")
            Me.columnShiftID = MyBase.Columns("ShiftID")
            Me.columnFromDate = MyBase.Columns("FromDate")
            Me.columnEndDate = MyBase.Columns("EndDate")
            Me.columnIPAddress = MyBase.Columns("IPAddress")
            Me.columnCreationTime = MyBase.Columns("CreationTime")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnShiftLogID = New Global.System.Data.DataColumn("ShiftLogID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShiftLogID)
            Me.columnEmpID = New Global.System.Data.DataColumn("EmpID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpID)
            Me.columnShiftID = New Global.System.Data.DataColumn("ShiftID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShiftID)
            Me.columnFromDate = New Global.System.Data.DataColumn("FromDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFromDate)
            Me.columnEndDate = New Global.System.Data.DataColumn("EndDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEndDate)
            Me.columnIPAddress = New Global.System.Data.DataColumn("IPAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIPAddress)
            Me.columnCreationTime = New Global.System.Data.DataColumn("CreationTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreationTime)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnShiftLogID}, true))
            Me.columnShiftLogID.AutoIncrement = true
            Me.columnShiftLogID.AutoIncrementSeed = -1
            Me.columnShiftLogID.AutoIncrementStep = -1
            Me.columnShiftLogID.AllowDBNull = false
            Me.columnShiftLogID.ReadOnly = true
            Me.columnShiftLogID.Unique = true
            Me.columnEmpID.AllowDBNull = false
            Me.columnShiftID.AllowDBNull = false
            Me.columnIPAddress.MaxLength = 150
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtbl_Log_ShiftRow() As tbl_Log_ShiftRow
            Return CType(Me.NewRow,tbl_Log_ShiftRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_Log_ShiftRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_Log_ShiftRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_Log_ShiftRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_Log_ShiftRowChanged(Me, New tbl_Log_ShiftRowChangeEvent(CType(e.Row,tbl_Log_ShiftRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_Log_ShiftRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_Log_ShiftRowChanging(Me, New tbl_Log_ShiftRowChangeEvent(CType(e.Row,tbl_Log_ShiftRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_Log_ShiftRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_Log_ShiftRowDeleted(Me, New tbl_Log_ShiftRowChangeEvent(CType(e.Row,tbl_Log_ShiftRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_Log_ShiftRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_Log_ShiftRowDeleting(Me, New tbl_Log_ShiftRowChangeEvent(CType(e.Row,tbl_Log_ShiftRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetbl_Log_ShiftRow(ByVal row As tbl_Log_ShiftRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSUser = New DSUser()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_Log_ShiftDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_HRM_SectionDataTable
        Inherits Global.System.Data.TypedTableBase(Of View_HRM_SectionRow)
        
        Private columnSectionCode As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_HRM_Section"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SectionCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSectionCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_HRM_SectionRow
            Get
                Return CType(Me.Rows(index),View_HRM_SectionRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event View_HRM_SectionRowChanging As View_HRM_SectionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event View_HRM_SectionRowChanged As View_HRM_SectionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event View_HRM_SectionRowDeleting As View_HRM_SectionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event View_HRM_SectionRowDeleted As View_HRM_SectionRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddView_HRM_SectionRow(ByVal row As View_HRM_SectionRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddView_HRM_SectionRow(ByVal SectionCode As String) As View_HRM_SectionRow
            Dim rowView_HRM_SectionRow As View_HRM_SectionRow = CType(Me.NewRow,View_HRM_SectionRow)
            Dim columnValuesArray() As Object = New Object() {SectionCode}
            rowView_HRM_SectionRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_HRM_SectionRow)
            Return rowView_HRM_SectionRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_HRM_SectionDataTable = CType(MyBase.Clone,View_HRM_SectionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_HRM_SectionDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSectionCode = MyBase.Columns("SectionCode")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSectionCode = New Global.System.Data.DataColumn("SectionCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSectionCode)
            Me.columnSectionCode.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewView_HRM_SectionRow() As View_HRM_SectionRow
            Return CType(Me.NewRow,View_HRM_SectionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_HRM_SectionRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_HRM_SectionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_HRM_SectionRowChangedEvent) Is Nothing) Then
                RaiseEvent View_HRM_SectionRowChanged(Me, New View_HRM_SectionRowChangeEvent(CType(e.Row,View_HRM_SectionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_HRM_SectionRowChangingEvent) Is Nothing) Then
                RaiseEvent View_HRM_SectionRowChanging(Me, New View_HRM_SectionRowChangeEvent(CType(e.Row,View_HRM_SectionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_HRM_SectionRowDeletedEvent) Is Nothing) Then
                RaiseEvent View_HRM_SectionRowDeleted(Me, New View_HRM_SectionRowChangeEvent(CType(e.Row,View_HRM_SectionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_HRM_SectionRowDeletingEvent) Is Nothing) Then
                RaiseEvent View_HRM_SectionRowDeleting(Me, New View_HRM_SectionRowChangeEvent(CType(e.Row,View_HRM_SectionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveView_HRM_SectionRow(ByVal row As View_HRM_SectionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSUser = New DSUser()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_HRM_SectionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_MIS_User_LogDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_MIS_User_LogRow)
        
        Private columnLID As Global.System.Data.DataColumn
        
        Private columnUserID As Global.System.Data.DataColumn
        
        Private columnLogIntime As Global.System.Data.DataColumn
        
        Private columnLogOutTime As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_MIS_User_Log"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property UserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LogIntimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogIntime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LogOutTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogOutTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_MIS_User_LogRow
            Get
                Return CType(Me.Rows(index),tbl_MIS_User_LogRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_MIS_User_LogRowChanging As tbl_MIS_User_LogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_MIS_User_LogRowChanged As tbl_MIS_User_LogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_MIS_User_LogRowDeleting As tbl_MIS_User_LogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_MIS_User_LogRowDeleted As tbl_MIS_User_LogRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtbl_MIS_User_LogRow(ByVal row As tbl_MIS_User_LogRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtbl_MIS_User_LogRow(ByVal UserID As Integer, ByVal LogIntime As Date, ByVal LogOutTime As Date) As tbl_MIS_User_LogRow
            Dim rowtbl_MIS_User_LogRow As tbl_MIS_User_LogRow = CType(Me.NewRow,tbl_MIS_User_LogRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, UserID, LogIntime, LogOutTime}
            rowtbl_MIS_User_LogRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_MIS_User_LogRow)
            Return rowtbl_MIS_User_LogRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByLID(ByVal LID As Integer) As tbl_MIS_User_LogRow
            Return CType(Me.Rows.Find(New Object() {LID}),tbl_MIS_User_LogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_MIS_User_LogDataTable = CType(MyBase.Clone,tbl_MIS_User_LogDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_MIS_User_LogDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnLID = MyBase.Columns("LID")
            Me.columnUserID = MyBase.Columns("UserID")
            Me.columnLogIntime = MyBase.Columns("LogIntime")
            Me.columnLogOutTime = MyBase.Columns("LogOutTime")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnLID = New Global.System.Data.DataColumn("LID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLID)
            Me.columnUserID = New Global.System.Data.DataColumn("UserID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserID)
            Me.columnLogIntime = New Global.System.Data.DataColumn("LogIntime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogIntime)
            Me.columnLogOutTime = New Global.System.Data.DataColumn("LogOutTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogOutTime)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnLID}, true))
            Me.columnLID.AutoIncrement = true
            Me.columnLID.AutoIncrementSeed = -1
            Me.columnLID.AutoIncrementStep = -1
            Me.columnLID.AllowDBNull = false
            Me.columnLID.ReadOnly = true
            Me.columnLID.Unique = true
            Me.columnUserID.AllowDBNull = false
            Me.columnLogIntime.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtbl_MIS_User_LogRow() As tbl_MIS_User_LogRow
            Return CType(Me.NewRow,tbl_MIS_User_LogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_MIS_User_LogRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_MIS_User_LogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_MIS_User_LogRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_MIS_User_LogRowChanged(Me, New tbl_MIS_User_LogRowChangeEvent(CType(e.Row,tbl_MIS_User_LogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_MIS_User_LogRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_MIS_User_LogRowChanging(Me, New tbl_MIS_User_LogRowChangeEvent(CType(e.Row,tbl_MIS_User_LogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_MIS_User_LogRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_MIS_User_LogRowDeleted(Me, New tbl_MIS_User_LogRowChangeEvent(CType(e.Row,tbl_MIS_User_LogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_MIS_User_LogRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_MIS_User_LogRowDeleting(Me, New tbl_MIS_User_LogRowChangeEvent(CType(e.Row,tbl_MIS_User_LogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetbl_MIS_User_LogRow(ByVal row As tbl_MIS_User_LogRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSUser = New DSUser()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_MIS_User_LogDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_Acc_FinancialPeriodDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_Acc_FinancialPeriodRow)
        
        Private columnFinancialPeriod As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_Acc_FinancialPeriod"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property FinancialPeriodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFinancialPeriod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_Acc_FinancialPeriodRow
            Get
                Return CType(Me.Rows(index),tbl_Acc_FinancialPeriodRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Acc_FinancialPeriodRowChanging As tbl_Acc_FinancialPeriodRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Acc_FinancialPeriodRowChanged As tbl_Acc_FinancialPeriodRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Acc_FinancialPeriodRowDeleting As tbl_Acc_FinancialPeriodRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_Acc_FinancialPeriodRowDeleted As tbl_Acc_FinancialPeriodRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtbl_Acc_FinancialPeriodRow(ByVal row As tbl_Acc_FinancialPeriodRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtbl_Acc_FinancialPeriodRow(ByVal FinancialPeriod As String, ByVal Status As Boolean) As tbl_Acc_FinancialPeriodRow
            Dim rowtbl_Acc_FinancialPeriodRow As tbl_Acc_FinancialPeriodRow = CType(Me.NewRow,tbl_Acc_FinancialPeriodRow)
            Dim columnValuesArray() As Object = New Object() {FinancialPeriod, Status}
            rowtbl_Acc_FinancialPeriodRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_Acc_FinancialPeriodRow)
            Return rowtbl_Acc_FinancialPeriodRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByFinancialPeriod(ByVal FinancialPeriod As String) As tbl_Acc_FinancialPeriodRow
            Return CType(Me.Rows.Find(New Object() {FinancialPeriod}),tbl_Acc_FinancialPeriodRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_Acc_FinancialPeriodDataTable = CType(MyBase.Clone,tbl_Acc_FinancialPeriodDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_Acc_FinancialPeriodDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFinancialPeriod = MyBase.Columns("FinancialPeriod")
            Me.columnStatus = MyBase.Columns("Status")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFinancialPeriod = New Global.System.Data.DataColumn("FinancialPeriod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFinancialPeriod)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFinancialPeriod}, true))
            Me.columnFinancialPeriod.AllowDBNull = false
            Me.columnFinancialPeriod.Unique = true
            Me.columnFinancialPeriod.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtbl_Acc_FinancialPeriodRow() As tbl_Acc_FinancialPeriodRow
            Return CType(Me.NewRow,tbl_Acc_FinancialPeriodRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_Acc_FinancialPeriodRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_Acc_FinancialPeriodRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_Acc_FinancialPeriodRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_Acc_FinancialPeriodRowChanged(Me, New tbl_Acc_FinancialPeriodRowChangeEvent(CType(e.Row,tbl_Acc_FinancialPeriodRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_Acc_FinancialPeriodRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_Acc_FinancialPeriodRowChanging(Me, New tbl_Acc_FinancialPeriodRowChangeEvent(CType(e.Row,tbl_Acc_FinancialPeriodRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_Acc_FinancialPeriodRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_Acc_FinancialPeriodRowDeleted(Me, New tbl_Acc_FinancialPeriodRowChangeEvent(CType(e.Row,tbl_Acc_FinancialPeriodRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_Acc_FinancialPeriodRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_Acc_FinancialPeriodRowDeleting(Me, New tbl_Acc_FinancialPeriodRowChangeEvent(CType(e.Row,tbl_Acc_FinancialPeriodRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetbl_Acc_FinancialPeriodRow(ByVal row As tbl_Acc_FinancialPeriodRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSUser = New DSUser()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_Acc_FinancialPeriodDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class UsersDataTable
        Inherits Global.System.Data.TypedTableBase(Of UsersRow)
        
        Private columnUserID As Global.System.Data.DataColumn
        
        Private columnLoginName As Global.System.Data.DataColumn
        
        Private columnpasswd As Global.System.Data.DataColumn
        
        Private columnLoginDeptID As Global.System.Data.DataColumn
        
        Private columnUserSataus As Global.System.Data.DataColumn
        
        Private columnIpAddress As Global.System.Data.DataColumn
        
        Private columnSPStatus As Global.System.Data.DataColumn
        
        Private columnPSWDDate As Global.System.Data.DataColumn
        
        Private columnEmployee As Global.System.Data.DataColumn
        
        Private columnHRSett As Global.System.Data.DataColumn
        
        Private columnHRRpt As Global.System.Data.DataColumn
        
        Private columnPayRoll As Global.System.Data.DataColumn
        
        Private columnPayRollsett As Global.System.Data.DataColumn
        
        Private columnPayRollRpt As Global.System.Data.DataColumn
        
        Private columnAccount As Global.System.Data.DataColumn
        
        Private columnAccSett As Global.System.Data.DataColumn
        
        Private columnAccRpt As Global.System.Data.DataColumn
        
        Private columnCanteen As Global.System.Data.DataColumn
        
        Private columnVisitors As Global.System.Data.DataColumn
        
        Private columnCOntt As Global.System.Data.DataColumn
        
        Private columnUserMgt As Global.System.Data.DataColumn
        
        Private columnResetStatus As Global.System.Data.DataColumn
        
        Private columnPasswordEncrypt As Global.System.Data.DataColumn
        
        Private columnTravel As Global.System.Data.DataColumn
        
        Private columnTransport As Global.System.Data.DataColumn
        
        Private columnvehicles As Global.System.Data.DataColumn
        
        Private columnGrievance As Global.System.Data.DataColumn
        
        Private columnShop As Global.System.Data.DataColumn
        
        Private columnMedication As Global.System.Data.DataColumn
        
        Private columnComplaint As Global.System.Data.DataColumn
        
        Private columnEvo As Global.System.Data.DataColumn
        
        Private columnKaizen As Global.System.Data.DataColumn
        
        Private columnTraning As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Users"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property UserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LoginNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLoginName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property passwdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpasswd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LoginDeptIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLoginDeptID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property UserSatausColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserSataus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IpAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIpAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SPStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PSWDDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPSWDDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EmployeeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmployee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property HRSettColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRSett
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property HRRptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRRpt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PayRollColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayRoll
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PayRollsettColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayRollsett
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PayRollRptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayRollRpt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AccountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AccSettColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccSett
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AccRptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccRpt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CanteenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCanteen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VisitorsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVisitors
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property COnttColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOntt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property UserMgtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserMgt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ResetStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResetStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PasswordEncryptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPasswordEncrypt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TravelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTravel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TransportColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransport
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property vehiclesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvehicles
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property GrievanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrievance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ShopColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShop
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MedicationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMedication
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ComplaintColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComplaint
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EvoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEvo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property KaizenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKaizen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TraningColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTraning
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As UsersRow
            Get
                Return CType(Me.Rows(index),UsersRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event UsersRowChanging As UsersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event UsersRowChanged As UsersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event UsersRowDeleting As UsersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event UsersRowDeleted As UsersRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddUsersRow(ByVal row As UsersRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddUsersRow( _
                    ByVal LoginName As String,  _
                    ByVal passwd As String,  _
                    ByVal LoginDeptID As Integer,  _
                    ByVal UserSataus As Boolean,  _
                    ByVal IpAddress As String,  _
                    ByVal SPStatus As Boolean,  _
                    ByVal PSWDDate As Date,  _
                    ByVal Employee As Boolean,  _
                    ByVal HRSett As Boolean,  _
                    ByVal HRRpt As Boolean,  _
                    ByVal PayRoll As Boolean,  _
                    ByVal PayRollsett As Boolean,  _
                    ByVal PayRollRpt As Boolean,  _
                    ByVal Account As Boolean,  _
                    ByVal AccSett As Boolean,  _
                    ByVal AccRpt As Boolean,  _
                    ByVal Canteen As Boolean,  _
                    ByVal Visitors As Boolean,  _
                    ByVal COntt As Boolean,  _
                    ByVal UserMgt As Boolean,  _
                    ByVal ResetStatus As Boolean,  _
                    ByVal PasswordEncrypt As String,  _
                    ByVal Travel As Boolean,  _
                    ByVal Transport As Boolean,  _
                    ByVal vehicles As Boolean,  _
                    ByVal Grievance As Boolean,  _
                    ByVal Shop As Boolean,  _
                    ByVal Medication As Boolean,  _
                    ByVal Complaint As Boolean,  _
                    ByVal Evo As Boolean,  _
                    ByVal Kaizen As Boolean,  _
                    ByVal Traning As Boolean) As UsersRow
            Dim rowUsersRow As UsersRow = CType(Me.NewRow,UsersRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, LoginName, passwd, LoginDeptID, UserSataus, IpAddress, SPStatus, PSWDDate, Employee, HRSett, HRRpt, PayRoll, PayRollsett, PayRollRpt, Account, AccSett, AccRpt, Canteen, Visitors, COntt, UserMgt, ResetStatus, PasswordEncrypt, Travel, Transport, vehicles, Grievance, Shop, Medication, Complaint, Evo, Kaizen, Traning}
            rowUsersRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowUsersRow)
            Return rowUsersRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByUserID(ByVal UserID As Integer) As UsersRow
            Return CType(Me.Rows.Find(New Object() {UserID}),UsersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As UsersDataTable = CType(MyBase.Clone,UsersDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New UsersDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnUserID = MyBase.Columns("UserID")
            Me.columnLoginName = MyBase.Columns("LoginName")
            Me.columnpasswd = MyBase.Columns("passwd")
            Me.columnLoginDeptID = MyBase.Columns("LoginDeptID")
            Me.columnUserSataus = MyBase.Columns("UserSataus")
            Me.columnIpAddress = MyBase.Columns("IpAddress")
            Me.columnSPStatus = MyBase.Columns("SPStatus")
            Me.columnPSWDDate = MyBase.Columns("PSWDDate")
            Me.columnEmployee = MyBase.Columns("Employee")
            Me.columnHRSett = MyBase.Columns("HRSett")
            Me.columnHRRpt = MyBase.Columns("HRRpt")
            Me.columnPayRoll = MyBase.Columns("PayRoll")
            Me.columnPayRollsett = MyBase.Columns("PayRollsett")
            Me.columnPayRollRpt = MyBase.Columns("PayRollRpt")
            Me.columnAccount = MyBase.Columns("Account")
            Me.columnAccSett = MyBase.Columns("AccSett")
            Me.columnAccRpt = MyBase.Columns("AccRpt")
            Me.columnCanteen = MyBase.Columns("Canteen")
            Me.columnVisitors = MyBase.Columns("Visitors")
            Me.columnCOntt = MyBase.Columns("COntt")
            Me.columnUserMgt = MyBase.Columns("UserMgt")
            Me.columnResetStatus = MyBase.Columns("ResetStatus")
            Me.columnPasswordEncrypt = MyBase.Columns("PasswordEncrypt")
            Me.columnTravel = MyBase.Columns("Travel")
            Me.columnTransport = MyBase.Columns("Transport")
            Me.columnvehicles = MyBase.Columns("vehicles")
            Me.columnGrievance = MyBase.Columns("Grievance")
            Me.columnShop = MyBase.Columns("Shop")
            Me.columnMedication = MyBase.Columns("Medication")
            Me.columnComplaint = MyBase.Columns("Complaint")
            Me.columnEvo = MyBase.Columns("Evo")
            Me.columnKaizen = MyBase.Columns("Kaizen")
            Me.columnTraning = MyBase.Columns("Traning")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnUserID = New Global.System.Data.DataColumn("UserID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserID)
            Me.columnLoginName = New Global.System.Data.DataColumn("LoginName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLoginName)
            Me.columnpasswd = New Global.System.Data.DataColumn("passwd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpasswd)
            Me.columnLoginDeptID = New Global.System.Data.DataColumn("LoginDeptID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLoginDeptID)
            Me.columnUserSataus = New Global.System.Data.DataColumn("UserSataus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserSataus)
            Me.columnIpAddress = New Global.System.Data.DataColumn("IpAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIpAddress)
            Me.columnSPStatus = New Global.System.Data.DataColumn("SPStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPStatus)
            Me.columnPSWDDate = New Global.System.Data.DataColumn("PSWDDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPSWDDate)
            Me.columnEmployee = New Global.System.Data.DataColumn("Employee", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmployee)
            Me.columnHRSett = New Global.System.Data.DataColumn("HRSett", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRSett)
            Me.columnHRRpt = New Global.System.Data.DataColumn("HRRpt", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRRpt)
            Me.columnPayRoll = New Global.System.Data.DataColumn("PayRoll", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayRoll)
            Me.columnPayRollsett = New Global.System.Data.DataColumn("PayRollsett", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayRollsett)
            Me.columnPayRollRpt = New Global.System.Data.DataColumn("PayRollRpt", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayRollRpt)
            Me.columnAccount = New Global.System.Data.DataColumn("Account", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccount)
            Me.columnAccSett = New Global.System.Data.DataColumn("AccSett", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccSett)
            Me.columnAccRpt = New Global.System.Data.DataColumn("AccRpt", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccRpt)
            Me.columnCanteen = New Global.System.Data.DataColumn("Canteen", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCanteen)
            Me.columnVisitors = New Global.System.Data.DataColumn("Visitors", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVisitors)
            Me.columnCOntt = New Global.System.Data.DataColumn("COntt", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOntt)
            Me.columnUserMgt = New Global.System.Data.DataColumn("UserMgt", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserMgt)
            Me.columnResetStatus = New Global.System.Data.DataColumn("ResetStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResetStatus)
            Me.columnPasswordEncrypt = New Global.System.Data.DataColumn("PasswordEncrypt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPasswordEncrypt)
            Me.columnTravel = New Global.System.Data.DataColumn("Travel", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTravel)
            Me.columnTransport = New Global.System.Data.DataColumn("Transport", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransport)
            Me.columnvehicles = New Global.System.Data.DataColumn("vehicles", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvehicles)
            Me.columnGrievance = New Global.System.Data.DataColumn("Grievance", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrievance)
            Me.columnShop = New Global.System.Data.DataColumn("Shop", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShop)
            Me.columnMedication = New Global.System.Data.DataColumn("Medication", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMedication)
            Me.columnComplaint = New Global.System.Data.DataColumn("Complaint", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComplaint)
            Me.columnEvo = New Global.System.Data.DataColumn("Evo", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEvo)
            Me.columnKaizen = New Global.System.Data.DataColumn("Kaizen", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKaizen)
            Me.columnTraning = New Global.System.Data.DataColumn("Traning", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTraning)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnUserID}, true))
            Me.columnUserID.AutoIncrement = true
            Me.columnUserID.AutoIncrementSeed = -1
            Me.columnUserID.AutoIncrementStep = -1
            Me.columnUserID.AllowDBNull = false
            Me.columnUserID.ReadOnly = true
            Me.columnUserID.Unique = true
            Me.columnLoginName.AllowDBNull = false
            Me.columnLoginName.MaxLength = 50
            Me.columnpasswd.MaxLength = 50
            Me.columnUserSataus.DefaultValue = CType(false,Boolean)
            Me.columnIpAddress.MaxLength = 15
            Me.columnSPStatus.DefaultValue = CType(false,Boolean)
            Me.columnEmployee.DefaultValue = CType(false,Boolean)
            Me.columnHRSett.DefaultValue = CType(false,Boolean)
            Me.columnHRRpt.DefaultValue = CType(false,Boolean)
            Me.columnPayRoll.DefaultValue = CType(false,Boolean)
            Me.columnPayRollsett.DefaultValue = CType(false,Boolean)
            Me.columnPayRollRpt.DefaultValue = CType(false,Boolean)
            Me.columnAccount.DefaultValue = CType(false,Boolean)
            Me.columnAccSett.DefaultValue = CType(false,Boolean)
            Me.columnAccRpt.DefaultValue = CType(false,Boolean)
            Me.columnCanteen.DefaultValue = CType(false,Boolean)
            Me.columnVisitors.DefaultValue = CType(false,Boolean)
            Me.columnCOntt.DefaultValue = CType(false,Boolean)
            Me.columnUserMgt.DefaultValue = CType(false,Boolean)
            Me.columnResetStatus.DefaultValue = CType(false,Boolean)
            Me.columnPasswordEncrypt.MaxLength = 1050
            Me.columnTravel.DefaultValue = CType(false,Boolean)
            Me.columnTransport.DefaultValue = CType(false,Boolean)
            Me.columnvehicles.DefaultValue = CType(false,Boolean)
            Me.columnGrievance.DefaultValue = CType(false,Boolean)
            Me.columnShop.DefaultValue = CType(false,Boolean)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewUsersRow() As UsersRow
            Return CType(Me.NewRow,UsersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New UsersRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(UsersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.UsersRowChangedEvent) Is Nothing) Then
                RaiseEvent UsersRowChanged(Me, New UsersRowChangeEvent(CType(e.Row,UsersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.UsersRowChangingEvent) Is Nothing) Then
                RaiseEvent UsersRowChanging(Me, New UsersRowChangeEvent(CType(e.Row,UsersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.UsersRowDeletedEvent) Is Nothing) Then
                RaiseEvent UsersRowDeleted(Me, New UsersRowChangeEvent(CType(e.Row,UsersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.UsersRowDeletingEvent) Is Nothing) Then
                RaiseEvent UsersRowDeleting(Me, New UsersRowChangeEvent(CType(e.Row,UsersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveUsersRow(ByVal row As UsersRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSUser = New DSUser()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "UsersDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Tbl_Lock_UsersDataTable
        Inherits Global.System.Data.TypedTableBase(Of Tbl_Lock_UsersRow)
        
        Private columnLoginName As Global.System.Data.DataColumn
        
        Private columnUserID As Global.System.Data.DataColumn
        
        Private columnDate As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnIp As Global.System.Data.DataColumn
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnIp1 As Global.System.Data.DataColumn
        
        Private columnNarration As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Tbl_Lock_Users"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LoginNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLoginName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property UserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Ip1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIp1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NarrationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNarration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Tbl_Lock_UsersRow
            Get
                Return CType(Me.Rows(index),Tbl_Lock_UsersRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event Tbl_Lock_UsersRowChanging As Tbl_Lock_UsersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event Tbl_Lock_UsersRowChanged As Tbl_Lock_UsersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event Tbl_Lock_UsersRowDeleting As Tbl_Lock_UsersRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event Tbl_Lock_UsersRowDeleted As Tbl_Lock_UsersRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddTbl_Lock_UsersRow(ByVal row As Tbl_Lock_UsersRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddTbl_Lock_UsersRow(ByVal LoginName As String, ByVal UserID As Integer, ByVal _Date As Date, ByVal Status As Boolean, ByVal Ip() As Byte, ByVal Ip1 As String, ByVal Narration As String) As Tbl_Lock_UsersRow
            Dim rowTbl_Lock_UsersRow As Tbl_Lock_UsersRow = CType(Me.NewRow,Tbl_Lock_UsersRow)
            Dim columnValuesArray() As Object = New Object() {LoginName, UserID, _Date, Status, Ip, Nothing, Ip1, Narration}
            rowTbl_Lock_UsersRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTbl_Lock_UsersRow)
            Return rowTbl_Lock_UsersRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Tbl_Lock_UsersDataTable = CType(MyBase.Clone,Tbl_Lock_UsersDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Tbl_Lock_UsersDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnLoginName = MyBase.Columns("LoginName")
            Me.columnUserID = MyBase.Columns("UserID")
            Me.columnDate = MyBase.Columns("Date")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnIp = MyBase.Columns("Ip")
            Me.columnID = MyBase.Columns("ID")
            Me.columnIp1 = MyBase.Columns("Ip1")
            Me.columnNarration = MyBase.Columns("Narration")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnLoginName = New Global.System.Data.DataColumn("LoginName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLoginName)
            Me.columnUserID = New Global.System.Data.DataColumn("UserID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserID)
            Me.columnDate = New Global.System.Data.DataColumn("Date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            Me.columnDate.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "DateColumn")
            Me.columnDate.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnDate")
            Me.columnDate.ExtendedProperties.Add("Generator_UserColumnName", "Date")
            MyBase.Columns.Add(Me.columnDate)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnIp = New Global.System.Data.DataColumn("Ip", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIp)
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnIp1 = New Global.System.Data.DataColumn("Ip1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIp1)
            Me.columnNarration = New Global.System.Data.DataColumn("Narration", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNarration)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnUserID}, false))
            Me.columnLoginName.AllowDBNull = false
            Me.columnLoginName.MaxLength = 50
            Me.columnUserID.Unique = true
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnIp1.Caption = "Ip"
            Me.columnIp1.MaxLength = 50
            Me.columnNarration.MaxLength = 1050
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewTbl_Lock_UsersRow() As Tbl_Lock_UsersRow
            Return CType(Me.NewRow,Tbl_Lock_UsersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Tbl_Lock_UsersRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Tbl_Lock_UsersRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Tbl_Lock_UsersRowChangedEvent) Is Nothing) Then
                RaiseEvent Tbl_Lock_UsersRowChanged(Me, New Tbl_Lock_UsersRowChangeEvent(CType(e.Row,Tbl_Lock_UsersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Tbl_Lock_UsersRowChangingEvent) Is Nothing) Then
                RaiseEvent Tbl_Lock_UsersRowChanging(Me, New Tbl_Lock_UsersRowChangeEvent(CType(e.Row,Tbl_Lock_UsersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Tbl_Lock_UsersRowDeletedEvent) Is Nothing) Then
                RaiseEvent Tbl_Lock_UsersRowDeleted(Me, New Tbl_Lock_UsersRowChangeEvent(CType(e.Row,Tbl_Lock_UsersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Tbl_Lock_UsersRowDeletingEvent) Is Nothing) Then
                RaiseEvent Tbl_Lock_UsersRowDeleting(Me, New Tbl_Lock_UsersRowChangeEvent(CType(e.Row,Tbl_Lock_UsersRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveTbl_Lock_UsersRow(ByVal row As Tbl_Lock_UsersRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSUser = New DSUser()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Tbl_Lock_UsersDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tbl_MIS_User_NEWDataTable
        Inherits Global.System.Data.TypedTableBase(Of tbl_MIS_User_NEWRow)
        
        Private columnUserID As Global.System.Data.DataColumn
        
        Private columnLoginName As Global.System.Data.DataColumn
        
        Private columnpasswd As Global.System.Data.DataColumn
        
        Private columnLoginDeptID As Global.System.Data.DataColumn
        
        Private columnUserSataus As Global.System.Data.DataColumn
        
        Private columnIpAddress As Global.System.Data.DataColumn
        
        Private columnSPStatus As Global.System.Data.DataColumn
        
        Private columnPSWDDate As Global.System.Data.DataColumn
        
        Private columnEmployee As Global.System.Data.DataColumn
        
        Private columnHRSett As Global.System.Data.DataColumn
        
        Private columnHRRpt As Global.System.Data.DataColumn
        
        Private columnPayRoll As Global.System.Data.DataColumn
        
        Private columnPayRollsett As Global.System.Data.DataColumn
        
        Private columnPayRollRpt As Global.System.Data.DataColumn
        
        Private columnAccount As Global.System.Data.DataColumn
        
        Private columnAccSett As Global.System.Data.DataColumn
        
        Private columnAccRpt As Global.System.Data.DataColumn
        
        Private columnCanteen As Global.System.Data.DataColumn
        
        Private columnVisitors As Global.System.Data.DataColumn
        
        Private columnCOntt As Global.System.Data.DataColumn
        
        Private columnUserMgt As Global.System.Data.DataColumn
        
        Private columnResetStatus As Global.System.Data.DataColumn
        
        Private columnTravel As Global.System.Data.DataColumn
        
        Private columnTransport As Global.System.Data.DataColumn
        
        Private columnGrievance As Global.System.Data.DataColumn
        
        Private columnvehicles As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tbl_MIS_User_NEW"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property UserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LoginNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLoginName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property passwdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpasswd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LoginDeptIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLoginDeptID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property UserSatausColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserSataus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property IpAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIpAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property SPStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PSWDDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPSWDDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EmployeeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmployee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property HRSettColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRSett
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property HRRptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRRpt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PayRollColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayRoll
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PayRollsettColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayRollsett
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PayRollRptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPayRollRpt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AccountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AccSettColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccSett
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property AccRptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccRpt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CanteenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCanteen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property VisitorsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVisitors
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property COnttColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOntt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property UserMgtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserMgt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ResetStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResetStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TravelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTravel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TransportColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransport
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property GrievanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrievance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property vehiclesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvehicles
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tbl_MIS_User_NEWRow
            Get
                Return CType(Me.Rows(index),tbl_MIS_User_NEWRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_MIS_User_NEWRowChanging As tbl_MIS_User_NEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_MIS_User_NEWRowChanged As tbl_MIS_User_NEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_MIS_User_NEWRowDeleting As tbl_MIS_User_NEWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event tbl_MIS_User_NEWRowDeleted As tbl_MIS_User_NEWRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub Addtbl_MIS_User_NEWRow(ByVal row As tbl_MIS_User_NEWRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function Addtbl_MIS_User_NEWRow( _
                    ByVal LoginName As String,  _
                    ByVal passwd As String,  _
                    ByVal LoginDeptID As Integer,  _
                    ByVal UserSataus As Boolean,  _
                    ByVal IpAddress As String,  _
                    ByVal SPStatus As Boolean,  _
                    ByVal PSWDDate As Date,  _
                    ByVal Employee As Boolean,  _
                    ByVal HRSett As Boolean,  _
                    ByVal HRRpt As Boolean,  _
                    ByVal PayRoll As Boolean,  _
                    ByVal PayRollsett As Boolean,  _
                    ByVal PayRollRpt As Boolean,  _
                    ByVal Account As Boolean,  _
                    ByVal AccSett As Boolean,  _
                    ByVal AccRpt As Boolean,  _
                    ByVal Canteen As Boolean,  _
                    ByVal Visitors As Boolean,  _
                    ByVal COntt As Boolean,  _
                    ByVal UserMgt As Boolean,  _
                    ByVal ResetStatus As Boolean,  _
                    ByVal Travel As Boolean,  _
                    ByVal Transport As Boolean,  _
                    ByVal Grievance As Boolean,  _
                    ByVal vehicles As Boolean) As tbl_MIS_User_NEWRow
            Dim rowtbl_MIS_User_NEWRow As tbl_MIS_User_NEWRow = CType(Me.NewRow,tbl_MIS_User_NEWRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, LoginName, passwd, LoginDeptID, UserSataus, IpAddress, SPStatus, PSWDDate, Employee, HRSett, HRRpt, PayRoll, PayRollsett, PayRollRpt, Account, AccSett, AccRpt, Canteen, Visitors, COntt, UserMgt, ResetStatus, Travel, Transport, Grievance, vehicles}
            rowtbl_MIS_User_NEWRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtbl_MIS_User_NEWRow)
            Return rowtbl_MIS_User_NEWRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByUserID(ByVal UserID As Integer) As tbl_MIS_User_NEWRow
            Return CType(Me.Rows.Find(New Object() {UserID}),tbl_MIS_User_NEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tbl_MIS_User_NEWDataTable = CType(MyBase.Clone,tbl_MIS_User_NEWDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tbl_MIS_User_NEWDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnUserID = MyBase.Columns("UserID")
            Me.columnLoginName = MyBase.Columns("LoginName")
            Me.columnpasswd = MyBase.Columns("passwd")
            Me.columnLoginDeptID = MyBase.Columns("LoginDeptID")
            Me.columnUserSataus = MyBase.Columns("UserSataus")
            Me.columnIpAddress = MyBase.Columns("IpAddress")
            Me.columnSPStatus = MyBase.Columns("SPStatus")
            Me.columnPSWDDate = MyBase.Columns("PSWDDate")
            Me.columnEmployee = MyBase.Columns("Employee")
            Me.columnHRSett = MyBase.Columns("HRSett")
            Me.columnHRRpt = MyBase.Columns("HRRpt")
            Me.columnPayRoll = MyBase.Columns("PayRoll")
            Me.columnPayRollsett = MyBase.Columns("PayRollsett")
            Me.columnPayRollRpt = MyBase.Columns("PayRollRpt")
            Me.columnAccount = MyBase.Columns("Account")
            Me.columnAccSett = MyBase.Columns("AccSett")
            Me.columnAccRpt = MyBase.Columns("AccRpt")
            Me.columnCanteen = MyBase.Columns("Canteen")
            Me.columnVisitors = MyBase.Columns("Visitors")
            Me.columnCOntt = MyBase.Columns("COntt")
            Me.columnUserMgt = MyBase.Columns("UserMgt")
            Me.columnResetStatus = MyBase.Columns("ResetStatus")
            Me.columnTravel = MyBase.Columns("Travel")
            Me.columnTransport = MyBase.Columns("Transport")
            Me.columnGrievance = MyBase.Columns("Grievance")
            Me.columnvehicles = MyBase.Columns("vehicles")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnUserID = New Global.System.Data.DataColumn("UserID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserID)
            Me.columnLoginName = New Global.System.Data.DataColumn("LoginName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLoginName)
            Me.columnpasswd = New Global.System.Data.DataColumn("passwd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpasswd)
            Me.columnLoginDeptID = New Global.System.Data.DataColumn("LoginDeptID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLoginDeptID)
            Me.columnUserSataus = New Global.System.Data.DataColumn("UserSataus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserSataus)
            Me.columnIpAddress = New Global.System.Data.DataColumn("IpAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIpAddress)
            Me.columnSPStatus = New Global.System.Data.DataColumn("SPStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPStatus)
            Me.columnPSWDDate = New Global.System.Data.DataColumn("PSWDDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPSWDDate)
            Me.columnEmployee = New Global.System.Data.DataColumn("Employee", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmployee)
            Me.columnHRSett = New Global.System.Data.DataColumn("HRSett", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRSett)
            Me.columnHRRpt = New Global.System.Data.DataColumn("HRRpt", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRRpt)
            Me.columnPayRoll = New Global.System.Data.DataColumn("PayRoll", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayRoll)
            Me.columnPayRollsett = New Global.System.Data.DataColumn("PayRollsett", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayRollsett)
            Me.columnPayRollRpt = New Global.System.Data.DataColumn("PayRollRpt", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPayRollRpt)
            Me.columnAccount = New Global.System.Data.DataColumn("Account", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccount)
            Me.columnAccSett = New Global.System.Data.DataColumn("AccSett", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccSett)
            Me.columnAccRpt = New Global.System.Data.DataColumn("AccRpt", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccRpt)
            Me.columnCanteen = New Global.System.Data.DataColumn("Canteen", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCanteen)
            Me.columnVisitors = New Global.System.Data.DataColumn("Visitors", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVisitors)
            Me.columnCOntt = New Global.System.Data.DataColumn("COntt", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOntt)
            Me.columnUserMgt = New Global.System.Data.DataColumn("UserMgt", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserMgt)
            Me.columnResetStatus = New Global.System.Data.DataColumn("ResetStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResetStatus)
            Me.columnTravel = New Global.System.Data.DataColumn("Travel", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTravel)
            Me.columnTransport = New Global.System.Data.DataColumn("Transport", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransport)
            Me.columnGrievance = New Global.System.Data.DataColumn("Grievance", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrievance)
            Me.columnvehicles = New Global.System.Data.DataColumn("vehicles", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvehicles)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnUserID}, true))
            Me.columnUserID.AutoIncrement = true
            Me.columnUserID.AutoIncrementSeed = -1
            Me.columnUserID.AutoIncrementStep = -1
            Me.columnUserID.AllowDBNull = false
            Me.columnUserID.ReadOnly = true
            Me.columnUserID.Unique = true
            Me.columnLoginName.AllowDBNull = false
            Me.columnLoginName.MaxLength = 50
            Me.columnpasswd.MaxLength = 50
            Me.columnIpAddress.MaxLength = 15
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Newtbl_MIS_User_NEWRow() As tbl_MIS_User_NEWRow
            Return CType(Me.NewRow,tbl_MIS_User_NEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tbl_MIS_User_NEWRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tbl_MIS_User_NEWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tbl_MIS_User_NEWRowChangedEvent) Is Nothing) Then
                RaiseEvent tbl_MIS_User_NEWRowChanged(Me, New tbl_MIS_User_NEWRowChangeEvent(CType(e.Row,tbl_MIS_User_NEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tbl_MIS_User_NEWRowChangingEvent) Is Nothing) Then
                RaiseEvent tbl_MIS_User_NEWRowChanging(Me, New tbl_MIS_User_NEWRowChangeEvent(CType(e.Row,tbl_MIS_User_NEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tbl_MIS_User_NEWRowDeletedEvent) Is Nothing) Then
                RaiseEvent tbl_MIS_User_NEWRowDeleted(Me, New tbl_MIS_User_NEWRowChangeEvent(CType(e.Row,tbl_MIS_User_NEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tbl_MIS_User_NEWRowDeletingEvent) Is Nothing) Then
                RaiseEvent tbl_MIS_User_NEWRowDeleting(Me, New tbl_MIS_User_NEWRowChangeEvent(CType(e.Row,tbl_MIS_User_NEWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Removetbl_MIS_User_NEWRow(ByVal row As tbl_MIS_User_NEWRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSUser = New DSUser()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tbl_MIS_User_NEWDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_MIS_User_DeptRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_MIS_User_Dept As tbl_MIS_User_DeptDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_MIS_User_Dept = CType(Me.Table,tbl_MIS_User_DeptDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LoginDeptID() As Integer
            Get
                Return CType(Me(Me.tabletbl_MIS_User_Dept.LoginDeptIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_MIS_User_Dept.LoginDeptIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DeptName() As String
            Get
                Return CType(Me(Me.tabletbl_MIS_User_Dept.DeptNameColumn),String)
            End Get
            Set
                Me(Me.tabletbl_MIS_User_Dept.DeptNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Status() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_Dept.StatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'tbl_MIS_User_Dept' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_Dept.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_Dept.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStatusNull()
            Me(Me.tabletbl_MIS_User_Dept.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Gettbl_MIS_UserRows() As tbl_MIS_UserRow()
            If (Me.Table.ChildRelations("tbl_MIS_User_Dept_tbl_MIS_User") Is Nothing) Then
                Return New tbl_MIS_UserRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("tbl_MIS_User_Dept_tbl_MIS_User")),tbl_MIS_UserRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_MIS_UserRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_MIS_User As tbl_MIS_UserDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_MIS_User = CType(Me.Table,tbl_MIS_UserDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UserID() As Integer
            Get
                Return CType(Me(Me.tabletbl_MIS_User.UserIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_MIS_User.UserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LoginName() As String
            Get
                Return CType(Me(Me.tabletbl_MIS_User.LoginNameColumn),String)
            End Get
            Set
                Me(Me.tabletbl_MIS_User.LoginNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property passwd() As String
            Get
                Return CType(Me(Me.tabletbl_MIS_User.passwdColumn),String)
            End Get
            Set
                Me(Me.tabletbl_MIS_User.passwdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LoginDeptID() As Integer
            Get
                Return CType(Me(Me.tabletbl_MIS_User.LoginDeptIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_MIS_User.LoginDeptIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UserSataus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User.UserSatausColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UserSataus' in table 'tbl_MIS_User' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User.UserSatausColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IpAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User.IpAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IpAddress' in table 'tbl_MIS_User' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User.IpAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SPStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User.SPStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPStatus' in table 'tbl_MIS_User' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User.SPStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PSWDDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User.PSWDDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PSWDDate' in table 'tbl_MIS_User' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User.PSWDDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property tbl_MIS_User_DeptRow() As tbl_MIS_User_DeptRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("tbl_MIS_User_Dept_tbl_MIS_User")),tbl_MIS_User_DeptRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("tbl_MIS_User_Dept_tbl_MIS_User"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsUserSatausNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User.UserSatausColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetUserSatausNull()
            Me(Me.tabletbl_MIS_User.UserSatausColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIpAddressNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User.IpAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIpAddressNull()
            Me(Me.tabletbl_MIS_User.IpAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSPStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User.SPStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSPStatusNull()
            Me(Me.tabletbl_MIS_User.SPStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPSWDDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User.PSWDDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPSWDDateNull()
            Me(Me.tabletbl_MIS_User.PSWDDateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_HRM_App_AuthorityRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_HRM_App_Authority As tbl_HRM_App_AuthorityDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_HRM_App_Authority = CType(Me.Table,tbl_HRM_App_AuthorityDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AppID() As Integer
            Get
                Return CType(Me(Me.tabletbl_HRM_App_Authority.AppIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_HRM_App_Authority.AppIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Name() As String
            Get
                Return CType(Me(Me.tabletbl_HRM_App_Authority.NameColumn),String)
            End Get
            Set
                Me(Me.tabletbl_HRM_App_Authority.NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DesigID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_HRM_App_Authority.DesigIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DesigID' in table 'tbl_HRM_App_Authority' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_HRM_App_Authority.DesigIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Status() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_HRM_App_Authority.StatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'tbl_HRM_App_Authority' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_HRM_App_Authority.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDesigIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_HRM_App_Authority.DesigIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDesigIDNull()
            Me(Me.tabletbl_HRM_App_Authority.DesigIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_HRM_App_Authority.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStatusNull()
            Me(Me.tabletbl_HRM_App_Authority.StatusColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_Comp_InfoRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Comp_Info As tbl_Comp_InfoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Comp_Info = CType(Me.Table,tbl_Comp_InfoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CmpID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Comp_Info.CmpIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Comp_Info.CmpIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CompanyName() As String
            Get
                Return CType(Me(Me.tabletbl_Comp_Info.CompanyNameColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Comp_Info.CompanyNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Address() As String
            Get
                Return CType(Me(Me.tabletbl_Comp_Info.AddressColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Comp_Info.AddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Logo() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Comp_Info.LogoColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Logo' in table 'tbl_Comp_Info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Comp_Info.LogoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SalayType() As String
            Get
                Return CType(Me(Me.tabletbl_Comp_Info.SalayTypeColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Comp_Info.SalayTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OverTimeType() As String
            Get
                Return CType(Me(Me.tabletbl_Comp_Info.OverTimeTypeColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Comp_Info.OverTimeTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CompanyStartYear() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Comp_Info.CompanyStartYearColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompanyStartYear' in table 'tbl_Comp_Info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Comp_Info.CompanyStartYearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EmailAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Comp_Info.EmailAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EmailAddress' in table 'tbl_Comp_Info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Comp_Info.EmailAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PhoneNo() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Comp_Info.PhoneNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PhoneNo' in table 'tbl_Comp_Info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Comp_Info.PhoneNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Sign() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Comp_Info.SignColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sign' in table 'tbl_Comp_Info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Comp_Info.SignColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PEESIFIX() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Comp_Info.PEESIFIXColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PEESIFIX' in table 'tbl_Comp_Info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Comp_Info.PEESIFIXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EOBIFix() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Comp_Info.EOBIFixColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EOBIFix' in table 'tbl_Comp_Info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Comp_Info.EOBIFixColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BuffetMealDed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Comp_Info.BuffetMealDedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BuffetMealDed' in table 'tbl_Comp_Info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Comp_Info.BuffetMealDedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LabourMealDed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Comp_Info.LabourMealDedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LabourMealDed' in table 'tbl_Comp_Info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Comp_Info.LabourMealDedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BUSOT() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Comp_Info.BUSOTColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUSOT' in table 'tbl_Comp_Info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Comp_Info.BUSOTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MedicalLeaves() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Comp_Info.MedicalLeavesColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MedicalLeaves' in table 'tbl_Comp_Info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Comp_Info.MedicalLeavesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CasualLeaves() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Comp_Info.CasualLeavesColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CasualLeaves' in table 'tbl_Comp_Info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Comp_Info.CasualLeavesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AnnualLeaves() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Comp_Info.AnnualLeavesColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnnualLeaves' in table 'tbl_Comp_Info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Comp_Info.AnnualLeavesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AuditStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Comp_Info.AuditStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AuditStatus' in table 'tbl_Comp_Info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Comp_Info.AuditStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ReportsPath() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Comp_Info.ReportsPathColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReportsPath' in table 'tbl_Comp_Info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Comp_Info.ReportsPathColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DailyTravelAllowance() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Comp_Info.DailyTravelAllowanceColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DailyTravelAllowance' in table 'tbl_Comp_Info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Comp_Info.DailyTravelAllowanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Comp_Info.BStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BStatus' in table 'tbl_Comp_Info' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Comp_Info.BStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLogoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Comp_Info.LogoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLogoNull()
            Me(Me.tabletbl_Comp_Info.LogoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCompanyStartYearNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Comp_Info.CompanyStartYearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCompanyStartYearNull()
            Me(Me.tabletbl_Comp_Info.CompanyStartYearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEmailAddressNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Comp_Info.EmailAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEmailAddressNull()
            Me(Me.tabletbl_Comp_Info.EmailAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPhoneNoNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Comp_Info.PhoneNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPhoneNoNull()
            Me(Me.tabletbl_Comp_Info.PhoneNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSignNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Comp_Info.SignColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSignNull()
            Me(Me.tabletbl_Comp_Info.SignColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPEESIFIXNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Comp_Info.PEESIFIXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPEESIFIXNull()
            Me(Me.tabletbl_Comp_Info.PEESIFIXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEOBIFixNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Comp_Info.EOBIFixColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEOBIFixNull()
            Me(Me.tabletbl_Comp_Info.EOBIFixColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBuffetMealDedNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Comp_Info.BuffetMealDedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBuffetMealDedNull()
            Me(Me.tabletbl_Comp_Info.BuffetMealDedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLabourMealDedNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Comp_Info.LabourMealDedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLabourMealDedNull()
            Me(Me.tabletbl_Comp_Info.LabourMealDedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBUSOTNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Comp_Info.BUSOTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBUSOTNull()
            Me(Me.tabletbl_Comp_Info.BUSOTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMedicalLeavesNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Comp_Info.MedicalLeavesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMedicalLeavesNull()
            Me(Me.tabletbl_Comp_Info.MedicalLeavesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCasualLeavesNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Comp_Info.CasualLeavesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCasualLeavesNull()
            Me(Me.tabletbl_Comp_Info.CasualLeavesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAnnualLeavesNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Comp_Info.AnnualLeavesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAnnualLeavesNull()
            Me(Me.tabletbl_Comp_Info.AnnualLeavesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAuditStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Comp_Info.AuditStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAuditStatusNull()
            Me(Me.tabletbl_Comp_Info.AuditStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsReportsPathNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Comp_Info.ReportsPathColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetReportsPathNull()
            Me(Me.tabletbl_Comp_Info.ReportsPathColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDailyTravelAllowanceNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Comp_Info.DailyTravelAllowanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDailyTravelAllowanceNull()
            Me(Me.tabletbl_Comp_Info.DailyTravelAllowanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsBStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Comp_Info.BStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetBStatusNull()
            Me(Me.tabletbl_Comp_Info.BStatusColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_Log_ShiftRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Log_Shift As tbl_Log_ShiftDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Log_Shift = CType(Me.Table,tbl_Log_ShiftDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ShiftLogID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Log_Shift.ShiftLogIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Log_Shift.ShiftLogIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EmpID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Log_Shift.EmpIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Log_Shift.EmpIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ShiftID() As Integer
            Get
                Return CType(Me(Me.tabletbl_Log_Shift.ShiftIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_Log_Shift.ShiftIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FromDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Log_Shift.FromDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FromDate' in table 'tbl_Log_Shift' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Log_Shift.FromDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property EndDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Log_Shift.EndDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EndDate' in table 'tbl_Log_Shift' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Log_Shift.EndDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IPAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Log_Shift.IPAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IPAddress' in table 'tbl_Log_Shift' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Log_Shift.IPAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CreationTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Log_Shift.CreationTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CreationTime' in table 'tbl_Log_Shift' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Log_Shift.CreationTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsFromDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Log_Shift.FromDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetFromDateNull()
            Me(Me.tabletbl_Log_Shift.FromDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEndDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Log_Shift.EndDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEndDateNull()
            Me(Me.tabletbl_Log_Shift.EndDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIPAddressNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Log_Shift.IPAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIPAddressNull()
            Me(Me.tabletbl_Log_Shift.IPAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCreationTimeNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Log_Shift.CreationTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCreationTimeNull()
            Me(Me.tabletbl_Log_Shift.CreationTimeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class View_HRM_SectionRow
        Inherits Global.System.Data.DataRow
        
        Private tableView_HRM_Section As View_HRM_SectionDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_HRM_Section = CType(Me.Table,View_HRM_SectionDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SectionCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_HRM_Section.SectionCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SectionCode' in table 'View_HRM_Section' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_HRM_Section.SectionCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSectionCodeNull() As Boolean
            Return Me.IsNull(Me.tableView_HRM_Section.SectionCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSectionCodeNull()
            Me(Me.tableView_HRM_Section.SectionCodeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_MIS_User_LogRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_MIS_User_Log As tbl_MIS_User_LogDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_MIS_User_Log = CType(Me.Table,tbl_MIS_User_LogDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LID() As Integer
            Get
                Return CType(Me(Me.tabletbl_MIS_User_Log.LIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_MIS_User_Log.LIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UserID() As Integer
            Get
                Return CType(Me(Me.tabletbl_MIS_User_Log.UserIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_MIS_User_Log.UserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LogIntime() As Date
            Get
                Return CType(Me(Me.tabletbl_MIS_User_Log.LogIntimeColumn),Date)
            End Get
            Set
                Me(Me.tabletbl_MIS_User_Log.LogIntimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LogOutTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_Log.LogOutTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogOutTime' in table 'tbl_MIS_User_Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_Log.LogOutTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLogOutTimeNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_Log.LogOutTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLogOutTimeNull()
            Me(Me.tabletbl_MIS_User_Log.LogOutTimeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_Acc_FinancialPeriodRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_Acc_FinancialPeriod As tbl_Acc_FinancialPeriodDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_Acc_FinancialPeriod = CType(Me.Table,tbl_Acc_FinancialPeriodDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property FinancialPeriod() As String
            Get
                Return CType(Me(Me.tabletbl_Acc_FinancialPeriod.FinancialPeriodColumn),String)
            End Get
            Set
                Me(Me.tabletbl_Acc_FinancialPeriod.FinancialPeriodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Status() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_Acc_FinancialPeriod.StatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'tbl_Acc_FinancialPeriod' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_Acc_FinancialPeriod.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_Acc_FinancialPeriod.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStatusNull()
            Me(Me.tabletbl_Acc_FinancialPeriod.StatusColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class UsersRow
        Inherits Global.System.Data.DataRow
        
        Private tableUsers As UsersDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableUsers = CType(Me.Table,UsersDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UserID() As Integer
            Get
                Return CType(Me(Me.tableUsers.UserIDColumn),Integer)
            End Get
            Set
                Me(Me.tableUsers.UserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LoginName() As String
            Get
                Return CType(Me(Me.tableUsers.LoginNameColumn),String)
            End Get
            Set
                Me(Me.tableUsers.LoginNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property passwd() As String
            Get
                Try 
                    Return CType(Me(Me.tableUsers.passwdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'passwd' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.passwdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LoginDeptID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableUsers.LoginDeptIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LoginDeptID' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.LoginDeptIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UserSataus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.UserSatausColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UserSataus' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.UserSatausColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IpAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableUsers.IpAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IpAddress' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.IpAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SPStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.SPStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPStatus' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.SPStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PSWDDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableUsers.PSWDDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PSWDDate' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.PSWDDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Employee() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.EmployeeColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Employee' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.EmployeeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property HRSett() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.HRSettColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRSett' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.HRSettColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property HRRpt() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.HRRptColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRRpt' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.HRRptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PayRoll() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.PayRollColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PayRoll' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.PayRollColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PayRollsett() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.PayRollsettColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PayRollsett' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.PayRollsettColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PayRollRpt() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.PayRollRptColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PayRollRpt' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.PayRollRptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Account() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.AccountColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Account' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.AccountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AccSett() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.AccSettColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccSett' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.AccSettColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AccRpt() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.AccRptColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccRpt' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.AccRptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Canteen() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.CanteenColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Canteen' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.CanteenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Visitors() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.VisitorsColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Visitors' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.VisitorsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property COntt() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.COnttColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COntt' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.COnttColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UserMgt() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.UserMgtColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UserMgt' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.UserMgtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ResetStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.ResetStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResetStatus' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.ResetStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PasswordEncrypt() As String
            Get
                Try 
                    Return CType(Me(Me.tableUsers.PasswordEncryptColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PasswordEncrypt' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.PasswordEncryptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Travel() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.TravelColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Travel' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.TravelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Transport() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.TransportColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Transport' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.TransportColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property vehicles() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.vehiclesColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vehicles' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.vehiclesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Grievance() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.GrievanceColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Grievance' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.GrievanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Shop() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.ShopColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shop' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.ShopColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Medication() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.MedicationColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Medication' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.MedicationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Complaint() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.ComplaintColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Complaint' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.ComplaintColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Evo() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.EvoColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Evo' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.EvoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Kaizen() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.KaizenColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Kaizen' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.KaizenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Traning() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableUsers.TraningColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Traning' in table 'Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUsers.TraningColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IspasswdNull() As Boolean
            Return Me.IsNull(Me.tableUsers.passwdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetpasswdNull()
            Me(Me.tableUsers.passwdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLoginDeptIDNull() As Boolean
            Return Me.IsNull(Me.tableUsers.LoginDeptIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLoginDeptIDNull()
            Me(Me.tableUsers.LoginDeptIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsUserSatausNull() As Boolean
            Return Me.IsNull(Me.tableUsers.UserSatausColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetUserSatausNull()
            Me(Me.tableUsers.UserSatausColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIpAddressNull() As Boolean
            Return Me.IsNull(Me.tableUsers.IpAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIpAddressNull()
            Me(Me.tableUsers.IpAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSPStatusNull() As Boolean
            Return Me.IsNull(Me.tableUsers.SPStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSPStatusNull()
            Me(Me.tableUsers.SPStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPSWDDateNull() As Boolean
            Return Me.IsNull(Me.tableUsers.PSWDDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPSWDDateNull()
            Me(Me.tableUsers.PSWDDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEmployeeNull() As Boolean
            Return Me.IsNull(Me.tableUsers.EmployeeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEmployeeNull()
            Me(Me.tableUsers.EmployeeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHRSettNull() As Boolean
            Return Me.IsNull(Me.tableUsers.HRSettColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHRSettNull()
            Me(Me.tableUsers.HRSettColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHRRptNull() As Boolean
            Return Me.IsNull(Me.tableUsers.HRRptColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHRRptNull()
            Me(Me.tableUsers.HRRptColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPayRollNull() As Boolean
            Return Me.IsNull(Me.tableUsers.PayRollColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPayRollNull()
            Me(Me.tableUsers.PayRollColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPayRollsettNull() As Boolean
            Return Me.IsNull(Me.tableUsers.PayRollsettColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPayRollsettNull()
            Me(Me.tableUsers.PayRollsettColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPayRollRptNull() As Boolean
            Return Me.IsNull(Me.tableUsers.PayRollRptColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPayRollRptNull()
            Me(Me.tableUsers.PayRollRptColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAccountNull() As Boolean
            Return Me.IsNull(Me.tableUsers.AccountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAccountNull()
            Me(Me.tableUsers.AccountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAccSettNull() As Boolean
            Return Me.IsNull(Me.tableUsers.AccSettColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAccSettNull()
            Me(Me.tableUsers.AccSettColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAccRptNull() As Boolean
            Return Me.IsNull(Me.tableUsers.AccRptColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAccRptNull()
            Me(Me.tableUsers.AccRptColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCanteenNull() As Boolean
            Return Me.IsNull(Me.tableUsers.CanteenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCanteenNull()
            Me(Me.tableUsers.CanteenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVisitorsNull() As Boolean
            Return Me.IsNull(Me.tableUsers.VisitorsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVisitorsNull()
            Me(Me.tableUsers.VisitorsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCOnttNull() As Boolean
            Return Me.IsNull(Me.tableUsers.COnttColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCOnttNull()
            Me(Me.tableUsers.COnttColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsUserMgtNull() As Boolean
            Return Me.IsNull(Me.tableUsers.UserMgtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetUserMgtNull()
            Me(Me.tableUsers.UserMgtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsResetStatusNull() As Boolean
            Return Me.IsNull(Me.tableUsers.ResetStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetResetStatusNull()
            Me(Me.tableUsers.ResetStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPasswordEncryptNull() As Boolean
            Return Me.IsNull(Me.tableUsers.PasswordEncryptColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPasswordEncryptNull()
            Me(Me.tableUsers.PasswordEncryptColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTravelNull() As Boolean
            Return Me.IsNull(Me.tableUsers.TravelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTravelNull()
            Me(Me.tableUsers.TravelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTransportNull() As Boolean
            Return Me.IsNull(Me.tableUsers.TransportColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTransportNull()
            Me(Me.tableUsers.TransportColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsvehiclesNull() As Boolean
            Return Me.IsNull(Me.tableUsers.vehiclesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetvehiclesNull()
            Me(Me.tableUsers.vehiclesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsGrievanceNull() As Boolean
            Return Me.IsNull(Me.tableUsers.GrievanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetGrievanceNull()
            Me(Me.tableUsers.GrievanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsShopNull() As Boolean
            Return Me.IsNull(Me.tableUsers.ShopColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetShopNull()
            Me(Me.tableUsers.ShopColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMedicationNull() As Boolean
            Return Me.IsNull(Me.tableUsers.MedicationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMedicationNull()
            Me(Me.tableUsers.MedicationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsComplaintNull() As Boolean
            Return Me.IsNull(Me.tableUsers.ComplaintColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetComplaintNull()
            Me(Me.tableUsers.ComplaintColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEvoNull() As Boolean
            Return Me.IsNull(Me.tableUsers.EvoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEvoNull()
            Me(Me.tableUsers.EvoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsKaizenNull() As Boolean
            Return Me.IsNull(Me.tableUsers.KaizenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetKaizenNull()
            Me(Me.tableUsers.KaizenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTraningNull() As Boolean
            Return Me.IsNull(Me.tableUsers.TraningColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTraningNull()
            Me(Me.tableUsers.TraningColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Tbl_Lock_UsersRow
        Inherits Global.System.Data.DataRow
        
        Private tableTbl_Lock_Users As Tbl_Lock_UsersDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTbl_Lock_Users = CType(Me.Table,Tbl_Lock_UsersDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LoginName() As String
            Get
                Return CType(Me(Me.tableTbl_Lock_Users.LoginNameColumn),String)
            End Get
            Set
                Me(Me.tableTbl_Lock_Users.LoginNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UserID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Lock_Users.UserIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UserID' in table 'Tbl_Lock_Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Lock_Users.UserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property _Date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Lock_Users.DateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Date' in table 'Tbl_Lock_Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Lock_Users.DateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Status() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Lock_Users.StatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'Tbl_Lock_Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Lock_Users.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Ip() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Lock_Users.IpColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ip' in table 'Tbl_Lock_Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Lock_Users.IpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableTbl_Lock_Users.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableTbl_Lock_Users.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Ip1() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Lock_Users.Ip1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ip1' in table 'Tbl_Lock_Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Lock_Users.Ip1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Narration() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Lock_Users.NarrationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Narration' in table 'Tbl_Lock_Users' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Lock_Users.NarrationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsUserIDNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Lock_Users.UserIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetUserIDNull()
            Me(Me.tableTbl_Lock_Users.UserIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Is_DateNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Lock_Users.DateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Set_DateNull()
            Me(Me.tableTbl_Lock_Users.DateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Lock_Users.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetStatusNull()
            Me(Me.tableTbl_Lock_Users.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIpNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Lock_Users.IpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIpNull()
            Me(Me.tableTbl_Lock_Users.IpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIp1Null() As Boolean
            Return Me.IsNull(Me.tableTbl_Lock_Users.Ip1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIp1Null()
            Me(Me.tableTbl_Lock_Users.Ip1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNarrationNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Lock_Users.NarrationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNarrationNull()
            Me(Me.tableTbl_Lock_Users.NarrationColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tbl_MIS_User_NEWRow
        Inherits Global.System.Data.DataRow
        
        Private tabletbl_MIS_User_NEW As tbl_MIS_User_NEWDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletbl_MIS_User_NEW = CType(Me.Table,tbl_MIS_User_NEWDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UserID() As Integer
            Get
                Return CType(Me(Me.tabletbl_MIS_User_NEW.UserIDColumn),Integer)
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.UserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LoginName() As String
            Get
                Return CType(Me(Me.tabletbl_MIS_User_NEW.LoginNameColumn),String)
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.LoginNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property passwd() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.passwdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'passwd' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.passwdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LoginDeptID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.LoginDeptIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LoginDeptID' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.LoginDeptIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UserSataus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.UserSatausColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UserSataus' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.UserSatausColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property IpAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.IpAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IpAddress' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.IpAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property SPStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.SPStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPStatus' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.SPStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PSWDDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.PSWDDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PSWDDate' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.PSWDDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Employee() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.EmployeeColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Employee' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.EmployeeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property HRSett() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.HRSettColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRSett' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.HRSettColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property HRRpt() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.HRRptColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HRRpt' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.HRRptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PayRoll() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.PayRollColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PayRoll' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.PayRollColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PayRollsett() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.PayRollsettColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PayRollsett' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.PayRollsettColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PayRollRpt() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.PayRollRptColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PayRollRpt' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.PayRollRptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Account() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.AccountColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Account' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.AccountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AccSett() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.AccSettColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccSett' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.AccSettColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property AccRpt() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.AccRptColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccRpt' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.AccRptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Canteen() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.CanteenColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Canteen' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.CanteenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Visitors() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.VisitorsColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Visitors' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.VisitorsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property COntt() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.COnttColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COntt' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.COnttColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UserMgt() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.UserMgtColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UserMgt' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.UserMgtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ResetStatus() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.ResetStatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResetStatus' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.ResetStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Travel() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.TravelColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Travel' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.TravelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Transport() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.TransportColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Transport' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.TransportColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Grievance() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.GrievanceColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Grievance' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.GrievanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property vehicles() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletbl_MIS_User_NEW.vehiclesColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'vehicles' in table 'tbl_MIS_User_NEW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletbl_MIS_User_NEW.vehiclesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IspasswdNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.passwdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetpasswdNull()
            Me(Me.tabletbl_MIS_User_NEW.passwdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLoginDeptIDNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.LoginDeptIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLoginDeptIDNull()
            Me(Me.tabletbl_MIS_User_NEW.LoginDeptIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsUserSatausNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.UserSatausColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetUserSatausNull()
            Me(Me.tabletbl_MIS_User_NEW.UserSatausColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsIpAddressNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.IpAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetIpAddressNull()
            Me(Me.tabletbl_MIS_User_NEW.IpAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSPStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.SPStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSPStatusNull()
            Me(Me.tabletbl_MIS_User_NEW.SPStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPSWDDateNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.PSWDDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPSWDDateNull()
            Me(Me.tabletbl_MIS_User_NEW.PSWDDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEmployeeNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.EmployeeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEmployeeNull()
            Me(Me.tabletbl_MIS_User_NEW.EmployeeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHRSettNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.HRSettColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHRSettNull()
            Me(Me.tabletbl_MIS_User_NEW.HRSettColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsHRRptNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.HRRptColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetHRRptNull()
            Me(Me.tabletbl_MIS_User_NEW.HRRptColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPayRollNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.PayRollColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPayRollNull()
            Me(Me.tabletbl_MIS_User_NEW.PayRollColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPayRollsettNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.PayRollsettColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPayRollsettNull()
            Me(Me.tabletbl_MIS_User_NEW.PayRollsettColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsPayRollRptNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.PayRollRptColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetPayRollRptNull()
            Me(Me.tabletbl_MIS_User_NEW.PayRollRptColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAccountNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.AccountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAccountNull()
            Me(Me.tabletbl_MIS_User_NEW.AccountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAccSettNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.AccSettColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAccSettNull()
            Me(Me.tabletbl_MIS_User_NEW.AccSettColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAccRptNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.AccRptColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAccRptNull()
            Me(Me.tabletbl_MIS_User_NEW.AccRptColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCanteenNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.CanteenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCanteenNull()
            Me(Me.tabletbl_MIS_User_NEW.CanteenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsVisitorsNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.VisitorsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetVisitorsNull()
            Me(Me.tabletbl_MIS_User_NEW.VisitorsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCOnttNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.COnttColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCOnttNull()
            Me(Me.tabletbl_MIS_User_NEW.COnttColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsUserMgtNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.UserMgtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetUserMgtNull()
            Me(Me.tabletbl_MIS_User_NEW.UserMgtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsResetStatusNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.ResetStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetResetStatusNull()
            Me(Me.tabletbl_MIS_User_NEW.ResetStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTravelNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.TravelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTravelNull()
            Me(Me.tabletbl_MIS_User_NEW.TravelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTransportNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.TransportColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTransportNull()
            Me(Me.tabletbl_MIS_User_NEW.TransportColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsGrievanceNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.GrievanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetGrievanceNull()
            Me(Me.tabletbl_MIS_User_NEW.GrievanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsvehiclesNull() As Boolean
            Return Me.IsNull(Me.tabletbl_MIS_User_NEW.vehiclesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetvehiclesNull()
            Me(Me.tabletbl_MIS_User_NEW.vehiclesColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tbl_MIS_User_DeptRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_MIS_User_DeptRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tbl_MIS_User_DeptRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_MIS_User_DeptRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tbl_MIS_UserRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_MIS_UserRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tbl_MIS_UserRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_MIS_UserRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tbl_HRM_App_AuthorityRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_HRM_App_AuthorityRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tbl_HRM_App_AuthorityRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_HRM_App_AuthorityRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tbl_Comp_InfoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_Comp_InfoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tbl_Comp_InfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_Comp_InfoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tbl_Log_ShiftRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_Log_ShiftRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tbl_Log_ShiftRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_Log_ShiftRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class View_HRM_SectionRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_HRM_SectionRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As View_HRM_SectionRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As View_HRM_SectionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tbl_MIS_User_LogRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_MIS_User_LogRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tbl_MIS_User_LogRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_MIS_User_LogRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tbl_Acc_FinancialPeriodRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_Acc_FinancialPeriodRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tbl_Acc_FinancialPeriodRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_Acc_FinancialPeriodRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class UsersRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As UsersRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As UsersRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As UsersRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class Tbl_Lock_UsersRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Tbl_Lock_UsersRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As Tbl_Lock_UsersRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As Tbl_Lock_UsersRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class tbl_MIS_User_NEWRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tbl_MIS_User_NEWRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As tbl_MIS_User_NEWRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As tbl_MIS_User_NEWRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DSUserTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_MIS_User_DeptTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_MIS_User_Dept"
            tableMapping.ColumnMappings.Add("LoginDeptID", "LoginDeptID")
            tableMapping.ColumnMappings.Add("DeptName", "DeptName")
            tableMapping.ColumnMappings.Add("Status", "Status")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tbl_MIS_User_Dept] WHERE (([LoginDeptID] = ?) AND ([DeptName] = ?) A"& _ 
                "ND ((? = 1 AND [Status] IS NULL) OR ([Status] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LoginDeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginDeptID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DeptName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Status", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tbl_MIS_User_Dept] ([DeptName], [Status]) VALUES (?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DeptName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tbl_MIS_User_Dept] SET [DeptName] = ?, [Status] = ? WHERE (([LoginDeptID]"& _ 
                " = ?) AND ([DeptName] = ?) AND ((? = 1 AND [Status] IS NULL) OR ([Status] = ?)))"& _ 
                ""
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DeptName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LoginDeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginDeptID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DeptName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DeptName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Status", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.ERP_HRMS.My.MySettings.Default.HRMSCon
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        LoginDeptID, DeptName, Status"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User_Dept"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"W"& _ 
                "HERE        (Status = 1)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        DeptName, LoginDeptID, Status"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User_Dept"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        LoginDeptID, DeptName, Status"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User_Dept"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"W"& _ 
                "HERE        (Status = 1) AND (LoginDeptID = ?)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LoginDeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginDeptID", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSUser.tbl_MIS_User_DeptDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSUser.tbl_MIS_User_DeptDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSUser.tbl_MIS_User_DeptDataTable = New DSUser.tbl_MIS_User_DeptDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSUser.tbl_MIS_User_DeptDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy() As DSUser.tbl_MIS_User_DeptDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As DSUser.tbl_MIS_User_DeptDataTable = New DSUser.tbl_MIS_User_DeptDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy1(ByVal dataTable As DSUser.tbl_MIS_User_DeptDataTable, ByVal LoginDeptID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LoginDeptID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy1(ByVal LoginDeptID As Integer) As DSUser.tbl_MIS_User_DeptDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(LoginDeptID,Integer)
            Dim dataTable As DSUser.tbl_MIS_User_DeptDataTable = New DSUser.tbl_MIS_User_DeptDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSUser.tbl_MIS_User_DeptDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSUser) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_MIS_User_Dept")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_LoginDeptID As Integer, ByVal Original_DeptName As String, ByVal Original_Status As Global.System.Nullable(Of Boolean)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_LoginDeptID,Integer)
            If (Original_DeptName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DeptName")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_DeptName,String)
            End If
            If (Original_Status.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Status.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal DeptName As String, ByVal Status As Global.System.Nullable(Of Boolean)) As Integer
            If (DeptName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DeptName")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(DeptName,String)
            End If
            If (Status.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Status.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DeptName As String, ByVal Status As Global.System.Nullable(Of Boolean), ByVal Original_LoginDeptID As Integer, ByVal Original_DeptName As String, ByVal Original_Status As Global.System.Nullable(Of Boolean)) As Integer
            If (DeptName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("DeptName")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(DeptName,String)
            End If
            If (Status.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Status.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_LoginDeptID,Integer)
            If (Original_DeptName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_DeptName")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_DeptName,String)
            End If
            If (Original_Status.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_Status.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_MIS_UserTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_MIS_User"
            tableMapping.ColumnMappings.Add("UserID", "UserID")
            tableMapping.ColumnMappings.Add("LoginName", "LoginName")
            tableMapping.ColumnMappings.Add("passwd", "passwd")
            tableMapping.ColumnMappings.Add("LoginDeptID", "LoginDeptID")
            tableMapping.ColumnMappings.Add("UserSataus", "UserSataus")
            tableMapping.ColumnMappings.Add("IpAddress", "IpAddress")
            tableMapping.ColumnMappings.Add("SPStatus", "SPStatus")
            tableMapping.ColumnMappings.Add("PSWDDate", "PSWDDate")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tbl_MIS_User] WHERE (([UserID] = ?) AND ([LoginName] = ?) AND ([pass"& _ 
                "wd] = ?) AND ([LoginDeptID] = ?) AND ((? = 1 AND [UserSataus] IS NULL) OR ([User"& _ 
                "Sataus] = ?)) AND ((? = 1 AND [IpAddress] IS NULL) OR ([IpAddress] = ?)) AND ((?"& _ 
                " = 1 AND [SPStatus] IS NULL) OR ([SPStatus] = ?)) AND ((? = 1 AND [PSWDDate] IS "& _ 
                "NULL) OR ([PSWDDate] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LoginName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passwd", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwd", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LoginDeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginDeptID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_UserSataus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserSataus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UserSataus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserSataus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IpAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IpAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IpAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IpAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SPStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SPStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PSWDDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PSWDDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PSWDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PSWDDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tbl_MIS_User] ([LoginName], [passwd], [LoginDeptID], [UserSataus], ["& _ 
                "IpAddress], [SPStatus], [PSWDDate]) VALUES (?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LoginName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passwd", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwd", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LoginDeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginDeptID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserSataus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserSataus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IpAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IpAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SPStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PSWDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PSWDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tbl_MIS_User] SET [LoginName] = ?, [passwd] = ?, [LoginDeptID] = ?, [User"& _ 
                "Sataus] = ?, [IpAddress] = ?, [SPStatus] = ?, [PSWDDate] = ? WHERE (([UserID] = "& _ 
                "?) AND ([LoginName] = ?) AND ([passwd] = ?) AND ([LoginDeptID] = ?) AND ((? = 1 "& _ 
                "AND [UserSataus] IS NULL) OR ([UserSataus] = ?)) AND ((? = 1 AND [IpAddress] IS "& _ 
                "NULL) OR ([IpAddress] = ?)) AND ((? = 1 AND [SPStatus] IS NULL) OR ([SPStatus] ="& _ 
                " ?)) AND ((? = 1 AND [PSWDDate] IS NULL) OR ([PSWDDate] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LoginName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passwd", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwd", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LoginDeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginDeptID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserSataus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserSataus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IpAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IpAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SPStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PSWDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PSWDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LoginName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passwd", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwd", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LoginDeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginDeptID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_UserSataus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserSataus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UserSataus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserSataus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IpAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IpAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IpAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IpAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SPStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SPStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PSWDDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PSWDDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PSWDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PSWDDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.ERP_HRMS.My.MySettings.Default.HRMSCon
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(12) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        UserID, LoginName, passwd, LoginDeptID, UserSataus, IpAddress, SPSt"& _ 
                "atus, PSWDDate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        UserID, passwd"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (UserID "& _ 
                "= ?) AND (passwd = ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserID", Global.System.Data.Odbc.OdbcType.BigInt, 19, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passwd", Global.System.Data.Odbc.OdbcType.NVarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwd", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        UserID, LoginName, passwd, LoginDeptID, UserSataus, IpAddress, SPSt"& _ 
                "atus, PSWDDate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (UserSataus = 1)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        UserID, LoginName, passwd, LoginDeptID, UserSataus, IpAddress, SPSt"& _ 
                "atus, PSWDDate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (passwd = ?) AND (Log"& _ 
                "inName = ?)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passwd", Global.System.Data.Odbc.OdbcType.NVarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwd", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LoginName", Global.System.Data.Odbc.OdbcType.NVarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT        isnull(SPStatus, 0) AS SPStatus"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHER"& _ 
                "E        (UserID = ?)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(5) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT        UserID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (IpAddress = ?) "& _ 
                "AND (UserSataus = 1)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IpAddress", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IpAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT        IpAddress"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (UserID = ?)"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(7) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT        passwd"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (UserID = ?)"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(8) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(8).Connection = Me.Connection
            Me._commandCollection(8).CommandText = "SELECT        isnull(UserSataus, 0) AS UserSataus"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "WHERE        (IpAddress = ?)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY isnull(UserSataus, 0)"
            Me._commandCollection(8).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IpAddress", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IpAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(9) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(9).Connection = Me.Connection
            Me._commandCollection(9).CommandText = "SELECT        LoginDeptID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (UserSataus"& _ 
                " = 1) AND (UserID = ?)"
            Me._commandCollection(9).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(10) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(10).Connection = Me.Connection
            Me._commandCollection(10).CommandText = "SELECT        UserID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (passwd = ?) AND"& _ 
                " (LoginName = ?)"
            Me._commandCollection(10).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passwd", Global.System.Data.Odbc.OdbcType.NVarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwd", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LoginName", Global.System.Data.Odbc.OdbcType.NVarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(11) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(11).Connection = Me.Connection
            Me._commandCollection(11).CommandText = "SELECT        PSWDDate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (UserID = ?) A"& _ 
                "ND (UserSataus = 1)"
            Me._commandCollection(11).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(12) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(12).Connection = Me.Connection
            Me._commandCollection(12).CommandText = "UPDATE       tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                passwd = ?, PSWDDate = ?, ResetStat"& _ 
                "us = ?"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (UserID = ?)"
            Me._commandCollection(12).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passwd", Global.System.Data.Odbc.OdbcType.NVarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwd", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PSWDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PSWDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ResetStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ResetStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UserID", Global.System.Data.Odbc.OdbcType.BigInt, 19, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSUser.tbl_MIS_UserDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSUser.tbl_MIS_UserDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSUser.tbl_MIS_UserDataTable = New DSUser.tbl_MIS_UserDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSUser.tbl_MIS_UserDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy10() As DSUser.tbl_MIS_UserDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Dim dataTable As DSUser.tbl_MIS_UserDataTable = New DSUser.tbl_MIS_UserDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy1(ByVal dataTable As DSUser.tbl_MIS_UserDataTable, ByVal passwd As String, ByVal LoginName As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (passwd Is Nothing) Then
                Throw New Global.System.ArgumentNullException("passwd")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(passwd,String)
            End If
            If (LoginName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LoginName")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(LoginName,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy11(ByVal passwd As String, ByVal LoginName As String) As DSUser.tbl_MIS_UserDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (passwd Is Nothing) Then
                Throw New Global.System.ArgumentNullException("passwd")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(passwd,String)
            End If
            If (LoginName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LoginName")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(LoginName,String)
            End If
            Dim dataTable As DSUser.tbl_MIS_UserDataTable = New DSUser.tbl_MIS_UserDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSUser.tbl_MIS_UserDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSUser) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_MIS_User")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_UserID As Integer, ByVal Original_LoginName As String, ByVal Original_passwd As String, ByVal Original_LoginDeptID As Integer, ByVal Original_UserSataus As Global.System.Nullable(Of Boolean), ByVal Original_IpAddress As String, ByVal Original_SPStatus As Global.System.Nullable(Of Boolean), ByVal Original_PSWDDate As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_UserID,Integer)
            If (Original_LoginName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LoginName")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_LoginName,String)
            End If
            If (Original_passwd Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_passwd")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_passwd,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_LoginDeptID,Integer)
            If (Original_UserSataus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_UserSataus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_IpAddress Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_IpAddress,String)
            End If
            If (Original_SPStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_SPStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_PSWDDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_PSWDDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal LoginName As String, ByVal passwd As String, ByVal LoginDeptID As Integer, ByVal UserSataus As Global.System.Nullable(Of Boolean), ByVal IpAddress As String, ByVal SPStatus As Global.System.Nullable(Of Boolean), ByVal PSWDDate As Global.System.Nullable(Of Date)) As Integer
            If (LoginName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LoginName")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(LoginName,String)
            End If
            If (passwd Is Nothing) Then
                Throw New Global.System.ArgumentNullException("passwd")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(passwd,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(LoginDeptID,Integer)
            If (UserSataus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(UserSataus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (IpAddress Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(IpAddress,String)
            End If
            If (SPStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(SPStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (PSWDDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PSWDDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal LoginName As String, ByVal passwd As String, ByVal LoginDeptID As Integer, ByVal UserSataus As Global.System.Nullable(Of Boolean), ByVal IpAddress As String, ByVal SPStatus As Global.System.Nullable(Of Boolean), ByVal PSWDDate As Global.System.Nullable(Of Date), ByVal Original_UserID As Integer, ByVal Original_LoginName As String, ByVal Original_passwd As String, ByVal Original_LoginDeptID As Integer, ByVal Original_UserSataus As Global.System.Nullable(Of Boolean), ByVal Original_IpAddress As String, ByVal Original_SPStatus As Global.System.Nullable(Of Boolean), ByVal Original_PSWDDate As Global.System.Nullable(Of Date)) As Integer
            If (LoginName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LoginName")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(LoginName,String)
            End If
            If (passwd Is Nothing) Then
                Throw New Global.System.ArgumentNullException("passwd")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(passwd,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(LoginDeptID,Integer)
            If (UserSataus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(UserSataus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (IpAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(IpAddress,String)
            End If
            If (SPStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(SPStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (PSWDDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(PSWDDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_UserID,Integer)
            If (Original_LoginName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LoginName")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_LoginName,String)
            End If
            If (Original_passwd Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_passwd")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_passwd,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_LoginDeptID,Integer)
            If (Original_UserSataus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_UserSataus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_IpAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_IpAddress,String)
            End If
            If (Original_SPStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_SPStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_PSWDDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_PSWDDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function checkoldpwdQuery(ByVal UserID As Long, ByVal passwd As String) As Object
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(UserID,Long)
            If (passwd Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(passwd,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSPSstatus(ByVal UserID As Integer) As Global.System.Nullable(Of Boolean)
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(4)
            command.Parameters(0).Value = CType(UserID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Boolean)()
            Else
                Return New Global.System.Nullable(Of Boolean)(CType(returnValue,Boolean))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetUserID(ByVal IpAddress As String) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(5)
            If (IpAddress Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(IpAddress,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetUserIP(ByVal UserID As Integer) As String
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(6)
            command.Parameters(0).Value = CType(UserID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetUserPassword(ByVal UserID As Integer) As String
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(7)
            command.Parameters(0).Value = CType(UserID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetUserStatus(ByVal IpAddress As String) As Object
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(8)
            If (IpAddress Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(IpAddress,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function LoginDeptID(ByVal UserID As Integer) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(9)
            command.Parameters(0).Value = CType(UserID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function LoginName(ByVal passwd As String, ByVal LoginName1 As String) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(10)
            If (passwd Is Nothing) Then
                Throw New Global.System.ArgumentNullException("passwd")
            Else
                command.Parameters(0).Value = CType(passwd,String)
            End If
            If (LoginName1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LoginName1")
            Else
                command.Parameters(1).Value = CType(LoginName1,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function PSWDDate(ByVal UserID As Integer) As Global.System.Nullable(Of Date)
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(11)
            command.Parameters(0).Value = CType(UserID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Date)()
            Else
                Return New Global.System.Nullable(Of Date)(CType(returnValue,Date))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateQuery(ByVal passwd As String, ByVal PSWDDate As Global.System.Nullable(Of Date), ByVal ResetStatus As Global.System.Nullable(Of Boolean), ByVal Original_UserID As Long) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(12)
            If (passwd Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(passwd,String)
            End If
            If (PSWDDate.HasValue = true) Then
                command.Parameters(1).Value = CType(PSWDDate.Value,Date)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (ResetStatus.HasValue = true) Then
                command.Parameters(2).Value = CType(ResetStatus.Value,Boolean)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            command.Parameters(3).Value = CType(Original_UserID,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_HRM_App_AuthorityTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_HRM_App_Authority"
            tableMapping.ColumnMappings.Add("AppID", "AppID")
            tableMapping.ColumnMappings.Add("Name", "Name")
            tableMapping.ColumnMappings.Add("DesigID", "DesigID")
            tableMapping.ColumnMappings.Add("Status", "Status")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tbl_HRM_App_Authority] WHERE (([AppID] = ?) AND ([Name] = ?) AND ((?"& _ 
                " = 1 AND [DesigID] IS NULL) OR ([DesigID] = ?)) AND ((? = 1 AND [Status] IS NULL"& _ 
                ") OR ([Status] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AppID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AppID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DesigID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DesigID", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DesigID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DesigID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Status", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tbl_HRM_App_Authority] ([Name], [DesigID], [Status]) VALUES (?, ?, ?"& _ 
                ")"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DesigID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DesigID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tbl_HRM_App_Authority] SET [Name] = ?, [DesigID] = ?, [Status] = ? WHERE "& _ 
                "(([AppID] = ?) AND ([Name] = ?) AND ((? = 1 AND [DesigID] IS NULL) OR ([DesigID]"& _ 
                " = ?)) AND ((? = 1 AND [Status] IS NULL) OR ([Status] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DesigID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DesigID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AppID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AppID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Name", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DesigID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DesigID", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DesigID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DesigID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Status", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.ERP_HRMS.My.MySettings.Default.HRMSCon
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tbl_HRM_App_Authority.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_HRM_App_Authority"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSUser.tbl_HRM_App_AuthorityDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSUser.tbl_HRM_App_AuthorityDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSUser.tbl_HRM_App_AuthorityDataTable = New DSUser.tbl_HRM_App_AuthorityDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSUser.tbl_HRM_App_AuthorityDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSUser) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_HRM_App_Authority")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_AppID As Integer, ByVal Original_Name As String, ByVal Original_DesigID As Global.System.Nullable(Of Integer), ByVal Original_Status As Global.System.Nullable(Of Boolean)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_AppID,Integer)
            If (Original_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Name")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Name,String)
            End If
            If (Original_DesigID.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_DesigID.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Original_Status.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_Status.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Name As String, ByVal DesigID As Global.System.Nullable(Of Integer), ByVal Status As Global.System.Nullable(Of Boolean)) As Integer
            If (Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Name")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Name,String)
            End If
            If (DesigID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DesigID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Status.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Status.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Name As String, ByVal DesigID As Global.System.Nullable(Of Integer), ByVal Status As Global.System.Nullable(Of Boolean), ByVal Original_AppID As Integer, ByVal Original_Name As String, ByVal Original_DesigID As Global.System.Nullable(Of Integer), ByVal Original_Status As Global.System.Nullable(Of Boolean)) As Integer
            If (Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Name,String)
            End If
            If (DesigID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(DesigID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Status.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Status.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_AppID,Integer)
            If (Original_Name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Name")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_Name,String)
            End If
            If (Original_DesigID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_DesigID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_Status.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_Status.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_Comp_InfoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Comp_Info"
            tableMapping.ColumnMappings.Add("CmpID", "CmpID")
            tableMapping.ColumnMappings.Add("CompanyName", "CompanyName")
            tableMapping.ColumnMappings.Add("Address", "Address")
            tableMapping.ColumnMappings.Add("Logo", "Logo")
            tableMapping.ColumnMappings.Add("SalayType", "SalayType")
            tableMapping.ColumnMappings.Add("OverTimeType", "OverTimeType")
            tableMapping.ColumnMappings.Add("CompanyStartYear", "CompanyStartYear")
            tableMapping.ColumnMappings.Add("EmailAddress", "EmailAddress")
            tableMapping.ColumnMappings.Add("PhoneNo", "PhoneNo")
            tableMapping.ColumnMappings.Add("Sign", "Sign")
            tableMapping.ColumnMappings.Add("PEESIFIX", "PEESIFIX")
            tableMapping.ColumnMappings.Add("EOBIFix", "EOBIFix")
            tableMapping.ColumnMappings.Add("BuffetMealDed", "BuffetMealDed")
            tableMapping.ColumnMappings.Add("LabourMealDed", "LabourMealDed")
            tableMapping.ColumnMappings.Add("BUSOT", "BUSOT")
            tableMapping.ColumnMappings.Add("MedicalLeaves", "MedicalLeaves")
            tableMapping.ColumnMappings.Add("CasualLeaves", "CasualLeaves")
            tableMapping.ColumnMappings.Add("AnnualLeaves", "AnnualLeaves")
            tableMapping.ColumnMappings.Add("AuditStatus", "AuditStatus")
            tableMapping.ColumnMappings.Add("ReportsPath", "ReportsPath")
            tableMapping.ColumnMappings.Add("DailyTravelAllowance", "DailyTravelAllowance")
            tableMapping.ColumnMappings.Add("BStatus", "BStatus")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tbl_Comp_Info] WHERE (([CmpID] = ?) AND ([CompanyName] = ?) AND ([Ad"& _ 
                "dress] = ?) AND ([SalayType] = ?) AND ([OverTimeType] = ?) AND ((? = 1 AND [Comp"& _ 
                "anyStartYear] IS NULL) OR ([CompanyStartYear] = ?)) AND ((? = 1 AND [EmailAddres"& _ 
                "s] IS NULL) OR ([EmailAddress] = ?)) AND ((? = 1 AND [PhoneNo] IS NULL) OR ([Pho"& _ 
                "neNo] = ?)) AND ((? = 1 AND [Sign] IS NULL) OR ([Sign] = ?)) AND ((? = 1 AND [PE"& _ 
                "ESIFIX] IS NULL) OR ([PEESIFIX] = ?)) AND ((? = 1 AND [EOBIFix] IS NULL) OR ([EO"& _ 
                "BIFix] = ?)) AND ((? = 1 AND [BuffetMealDed] IS NULL) OR ([BuffetMealDed] = ?)) "& _ 
                "AND ((? = 1 AND [LabourMealDed] IS NULL) OR ([LabourMealDed] = ?)) AND ((? = 1 A"& _ 
                "ND [BUSOT] IS NULL) OR ([BUSOT] = ?)) AND ((? = 1 AND [MedicalLeaves] IS NULL) O"& _ 
                "R ([MedicalLeaves] = ?)) AND ((? = 1 AND [CasualLeaves] IS NULL) OR ([CasualLeav"& _ 
                "es] = ?)) AND ((? = 1 AND [AnnualLeaves] IS NULL) OR ([AnnualLeaves] = ?)) AND ("& _ 
                "(? = 1 AND [AuditStatus] IS NULL) OR ([AuditStatus] = ?)) AND ((? = 1 AND [Repor"& _ 
                "tsPath] IS NULL) OR ([ReportsPath] = ?)) AND ((? = 1 AND [DailyTravelAllowance] "& _ 
                "IS NULL) OR ([DailyTravelAllowance] = ?)) AND ((? = 1 AND [BStatus] IS NULL) OR "& _ 
                "([BStatus] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CmpID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CmpID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CompanyName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompanyName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Address", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Address", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SalayType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SalayType", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OverTimeType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OverTimeType", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CompanyStartYear", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompanyStartYear", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CompanyStartYear", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompanyStartYear", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_EmailAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmailAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_EmailAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmailAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PhoneNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PhoneNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PhoneNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PhoneNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Sign", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sign", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Sign", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sign", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PEESIFIX", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PEESIFIX", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PEESIFIX", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PEESIFIX", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_EOBIFix", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EOBIFix", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_EOBIFix", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EOBIFix", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BuffetMealDed", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BuffetMealDed", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BuffetMealDed", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BuffetMealDed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LabourMealDed", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LabourMealDed", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LabourMealDed", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LabourMealDed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BUSOT", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BUSOT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BUSOT", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BUSOT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_MedicalLeaves", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MedicalLeaves", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_MedicalLeaves", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MedicalLeaves", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CasualLeaves", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CasualLeaves", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CasualLeaves", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CasualLeaves", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AnnualLeaves", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AnnualLeaves", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AnnualLeaves", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AnnualLeaves", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AuditStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AuditStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AuditStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AuditStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ReportsPath", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReportsPath", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ReportsPath", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReportsPath", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DailyTravelAllowance", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DailyTravelAllowance", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DailyTravelAllowance", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DailyTravelAllowance", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tbl_Comp_Info] ([CompanyName], [Address], [Logo], [SalayType], [Over"& _ 
                "TimeType], [CompanyStartYear], [EmailAddress], [PhoneNo], [Sign], [PEESIFIX], [E"& _ 
                "OBIFix], [BuffetMealDed], [LabourMealDed], [BUSOT], [MedicalLeaves], [CasualLeav"& _ 
                "es], [AnnualLeaves], [AuditStatus], [ReportsPath], [DailyTravelAllowance], [BSta"& _ 
                "tus]) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CompanyName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompanyName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Address", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Address", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Logo", Global.System.Data.Odbc.OdbcType.Image, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Logo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SalayType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SalayType", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OverTimeType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OverTimeType", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CompanyStartYear", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompanyStartYear", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("EmailAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmailAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PhoneNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PhoneNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Sign", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sign", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PEESIFIX", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PEESIFIX", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("EOBIFix", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EOBIFix", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BuffetMealDed", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BuffetMealDed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LabourMealDed", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LabourMealDed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BUSOT", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BUSOT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("MedicalLeaves", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MedicalLeaves", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CasualLeaves", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CasualLeaves", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AnnualLeaves", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AnnualLeaves", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AuditStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AuditStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ReportsPath", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReportsPath", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DailyTravelAllowance", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DailyTravelAllowance", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tbl_Comp_Info] SET [CompanyName] = ?, [Address] = ?, [Logo] = ?, [SalayTy"& _ 
                "pe] = ?, [OverTimeType] = ?, [CompanyStartYear] = ?, [EmailAddress] = ?, [PhoneN"& _ 
                "o] = ?, [Sign] = ?, [PEESIFIX] = ?, [EOBIFix] = ?, [BuffetMealDed] = ?, [LabourM"& _ 
                "ealDed] = ?, [BUSOT] = ?, [MedicalLeaves] = ?, [CasualLeaves] = ?, [AnnualLeaves"& _ 
                "] = ?, [AuditStatus] = ?, [ReportsPath] = ?, [DailyTravelAllowance] = ?, [BStatu"& _ 
                "s] = ? WHERE (([CmpID] = ?) AND ([CompanyName] = ?) AND ([Address] = ?) AND ([Sa"& _ 
                "layType] = ?) AND ([OverTimeType] = ?) AND ((? = 1 AND [CompanyStartYear] IS NUL"& _ 
                "L) OR ([CompanyStartYear] = ?)) AND ((? = 1 AND [EmailAddress] IS NULL) OR ([Ema"& _ 
                "ilAddress] = ?)) AND ((? = 1 AND [PhoneNo] IS NULL) OR ([PhoneNo] = ?)) AND ((? "& _ 
                "= 1 AND [Sign] IS NULL) OR ([Sign] = ?)) AND ((? = 1 AND [PEESIFIX] IS NULL) OR "& _ 
                "([PEESIFIX] = ?)) AND ((? = 1 AND [EOBIFix] IS NULL) OR ([EOBIFix] = ?)) AND ((?"& _ 
                " = 1 AND [BuffetMealDed] IS NULL) OR ([BuffetMealDed] = ?)) AND ((? = 1 AND [Lab"& _ 
                "ourMealDed] IS NULL) OR ([LabourMealDed] = ?)) AND ((? = 1 AND [BUSOT] IS NULL) "& _ 
                "OR ([BUSOT] = ?)) AND ((? = 1 AND [MedicalLeaves] IS NULL) OR ([MedicalLeaves] ="& _ 
                " ?)) AND ((? = 1 AND [CasualLeaves] IS NULL) OR ([CasualLeaves] = ?)) AND ((? = "& _ 
                "1 AND [AnnualLeaves] IS NULL) OR ([AnnualLeaves] = ?)) AND ((? = 1 AND [AuditSta"& _ 
                "tus] IS NULL) OR ([AuditStatus] = ?)) AND ((? = 1 AND [ReportsPath] IS NULL) OR "& _ 
                "([ReportsPath] = ?)) AND ((? = 1 AND [DailyTravelAllowance] IS NULL) OR ([DailyT"& _ 
                "ravelAllowance] = ?)) AND ((? = 1 AND [BStatus] IS NULL) OR ([BStatus] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CompanyName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompanyName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Address", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Address", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Logo", Global.System.Data.Odbc.OdbcType.Image, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Logo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SalayType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SalayType", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("OverTimeType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OverTimeType", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CompanyStartYear", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompanyStartYear", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("EmailAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmailAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PhoneNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PhoneNo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Sign", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sign", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PEESIFIX", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PEESIFIX", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("EOBIFix", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EOBIFix", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BuffetMealDed", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BuffetMealDed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LabourMealDed", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LabourMealDed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BUSOT", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BUSOT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("MedicalLeaves", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MedicalLeaves", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CasualLeaves", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CasualLeaves", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AnnualLeaves", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AnnualLeaves", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AuditStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AuditStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ReportsPath", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReportsPath", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("DailyTravelAllowance", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DailyTravelAllowance", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("BStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CmpID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CmpID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CompanyName", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompanyName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Address", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Address", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SalayType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SalayType", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_OverTimeType", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OverTimeType", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CompanyStartYear", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompanyStartYear", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CompanyStartYear", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CompanyStartYear", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_EmailAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmailAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_EmailAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmailAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PhoneNo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PhoneNo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PhoneNo", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PhoneNo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Sign", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sign", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Sign", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sign", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PEESIFIX", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PEESIFIX", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PEESIFIX", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PEESIFIX", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_EOBIFix", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EOBIFix", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_EOBIFix", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EOBIFix", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BuffetMealDed", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BuffetMealDed", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BuffetMealDed", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BuffetMealDed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LabourMealDed", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LabourMealDed", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LabourMealDed", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LabourMealDed", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BUSOT", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BUSOT", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BUSOT", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BUSOT", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_MedicalLeaves", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MedicalLeaves", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_MedicalLeaves", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "MedicalLeaves", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CasualLeaves", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CasualLeaves", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CasualLeaves", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CasualLeaves", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AnnualLeaves", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AnnualLeaves", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AnnualLeaves", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AnnualLeaves", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AuditStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AuditStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AuditStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AuditStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ReportsPath", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReportsPath", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ReportsPath", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ReportsPath", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_DailyTravelAllowance", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DailyTravelAllowance", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_DailyTravelAllowance", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DailyTravelAllowance", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_BStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_BStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "BStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.ERP_HRMS.My.MySettings.Default.HRMSCon
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CmpID, CompanyName, Address, Logo, SalayType, OverTimeType, Company"& _ 
                "StartYear, EmailAddress, PhoneNo, Sign, PEESIFIX, EOBIFix, BuffetMealDed, Labour"& _ 
                "MealDed, BUSOT, MedicalLeaves, CasualLeaves, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AnnualLe"& _ 
                "aves, AuditStatus, ReportsPath, DailyTravelAllowance, BStatus"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            t"& _ 
                "bl_Comp_Info"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT Address, AnnualLeaves, AuditStatus, BStatus, BUSOT, BuffetMealDed, CasualL"& _ 
                "eaves, CmpID, CompanyName, CompanyStartYear, DailyTravelAllowance, EOBIFix, Emai"& _ 
                "lAddress, LabourMealDed, Logo, MedicalLeaves, OverTimeType, PEESIFIX, PhoneNo, R"& _ 
                "eportsPath, SalayType, Sign FROM tbl_Comp_Info WHERE (AuditStatus = 1)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSUser.tbl_Comp_InfoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSUser.tbl_Comp_InfoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSUser.tbl_Comp_InfoDataTable = New DSUser.tbl_Comp_InfoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSUser.tbl_Comp_InfoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy() As DSUser.tbl_Comp_InfoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As DSUser.tbl_Comp_InfoDataTable = New DSUser.tbl_Comp_InfoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSUser.tbl_Comp_InfoDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSUser) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_Comp_Info")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_CmpID As Integer,  _
                    ByVal Original_CompanyName As String,  _
                    ByVal Original_Address As String,  _
                    ByVal Original_SalayType As String,  _
                    ByVal Original_OverTimeType As String,  _
                    ByVal Original_CompanyStartYear As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EmailAddress As String,  _
                    ByVal Original_PhoneNo As String,  _
                    ByVal Original_Sign As String,  _
                    ByVal Original_PEESIFIX As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EOBIFix As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BuffetMealDed As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LabourMealDed As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BUSOT As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MedicalLeaves As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CasualLeaves As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_AnnualLeaves As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_AuditStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ReportsPath As String,  _
                    ByVal Original_DailyTravelAllowance As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BStatus As Global.System.Nullable(Of Boolean)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CmpID,Integer)
            If (Original_CompanyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CompanyName")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CompanyName,String)
            End If
            If (Original_Address Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Address")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Address,String)
            End If
            If (Original_SalayType Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SalayType")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_SalayType,String)
            End If
            If (Original_OverTimeType Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_OverTimeType")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_OverTimeType,String)
            End If
            If (Original_CompanyStartYear.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_CompanyStartYear.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_EmailAddress Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_EmailAddress,String)
            End If
            If (Original_PhoneNo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_PhoneNo,String)
            End If
            If (Original_Sign Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Sign,String)
            End If
            If (Original_PEESIFIX.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_PEESIFIX.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_EOBIFix.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_EOBIFix.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_BuffetMealDed.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_BuffetMealDed.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_LabourMealDed.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_LabourMealDed.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_BUSOT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_BUSOT.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_MedicalLeaves.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_MedicalLeaves.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_CasualLeaves.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_CasualLeaves.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_AnnualLeaves.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_AnnualLeaves.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_AuditStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_AuditStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_ReportsPath Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_ReportsPath,String)
            End If
            If (Original_DailyTravelAllowance.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_DailyTravelAllowance.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_BStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_BStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CompanyName As String,  _
                    ByVal Address As String,  _
                    ByVal Logo() As Byte,  _
                    ByVal SalayType As String,  _
                    ByVal OverTimeType As String,  _
                    ByVal CompanyStartYear As Global.System.Nullable(Of Integer),  _
                    ByVal EmailAddress As String,  _
                    ByVal PhoneNo As String,  _
                    ByVal Sign As String,  _
                    ByVal PEESIFIX As Global.System.Nullable(Of Integer),  _
                    ByVal EOBIFix As Global.System.Nullable(Of Integer),  _
                    ByVal BuffetMealDed As Global.System.Nullable(Of Integer),  _
                    ByVal LabourMealDed As Global.System.Nullable(Of Integer),  _
                    ByVal BUSOT As Global.System.Nullable(Of Integer),  _
                    ByVal MedicalLeaves As Global.System.Nullable(Of Boolean),  _
                    ByVal CasualLeaves As Global.System.Nullable(Of Boolean),  _
                    ByVal AnnualLeaves As Global.System.Nullable(Of Boolean),  _
                    ByVal AuditStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal ReportsPath As String,  _
                    ByVal DailyTravelAllowance As Global.System.Nullable(Of Integer),  _
                    ByVal BStatus As Global.System.Nullable(Of Boolean)) As Integer
            If (CompanyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CompanyName")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CompanyName,String)
            End If
            If (Address Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Address")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Address,String)
            End If
            If (Logo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Logo,Byte())
            End If
            If (SalayType Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SalayType")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(SalayType,String)
            End If
            If (OverTimeType Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OverTimeType")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(OverTimeType,String)
            End If
            If (CompanyStartYear.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CompanyStartYear.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (EmailAddress Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(EmailAddress,String)
            End If
            If (PhoneNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(PhoneNo,String)
            End If
            If (Sign Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Sign,String)
            End If
            If (PEESIFIX.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(PEESIFIX.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (EOBIFix.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(EOBIFix.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (BuffetMealDed.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(BuffetMealDed.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (LabourMealDed.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(LabourMealDed.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (BUSOT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(BUSOT.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (MedicalLeaves.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(MedicalLeaves.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (CasualLeaves.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(CasualLeaves.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (AnnualLeaves.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(AnnualLeaves.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (AuditStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(AuditStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (ReportsPath Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(ReportsPath,String)
            End If
            If (DailyTravelAllowance.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(DailyTravelAllowance.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (BStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(BStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CompanyName As String,  _
                    ByVal Address As String,  _
                    ByVal Logo() As Byte,  _
                    ByVal SalayType As String,  _
                    ByVal OverTimeType As String,  _
                    ByVal CompanyStartYear As Global.System.Nullable(Of Integer),  _
                    ByVal EmailAddress As String,  _
                    ByVal PhoneNo As String,  _
                    ByVal Sign As String,  _
                    ByVal PEESIFIX As Global.System.Nullable(Of Integer),  _
                    ByVal EOBIFix As Global.System.Nullable(Of Integer),  _
                    ByVal BuffetMealDed As Global.System.Nullable(Of Integer),  _
                    ByVal LabourMealDed As Global.System.Nullable(Of Integer),  _
                    ByVal BUSOT As Global.System.Nullable(Of Integer),  _
                    ByVal MedicalLeaves As Global.System.Nullable(Of Boolean),  _
                    ByVal CasualLeaves As Global.System.Nullable(Of Boolean),  _
                    ByVal AnnualLeaves As Global.System.Nullable(Of Boolean),  _
                    ByVal AuditStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal ReportsPath As String,  _
                    ByVal DailyTravelAllowance As Global.System.Nullable(Of Integer),  _
                    ByVal BStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CmpID As Integer,  _
                    ByVal Original_CompanyName As String,  _
                    ByVal Original_Address As String,  _
                    ByVal Original_SalayType As String,  _
                    ByVal Original_OverTimeType As String,  _
                    ByVal Original_CompanyStartYear As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EmailAddress As String,  _
                    ByVal Original_PhoneNo As String,  _
                    ByVal Original_Sign As String,  _
                    ByVal Original_PEESIFIX As Global.System.Nullable(Of Integer),  _
                    ByVal Original_EOBIFix As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BuffetMealDed As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LabourMealDed As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BUSOT As Global.System.Nullable(Of Integer),  _
                    ByVal Original_MedicalLeaves As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CasualLeaves As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_AnnualLeaves As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_AuditStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ReportsPath As String,  _
                    ByVal Original_DailyTravelAllowance As Global.System.Nullable(Of Integer),  _
                    ByVal Original_BStatus As Global.System.Nullable(Of Boolean)) As Integer
            If (CompanyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CompanyName")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CompanyName,String)
            End If
            If (Address Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Address")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Address,String)
            End If
            If (Logo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Logo,Byte())
            End If
            If (SalayType Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SalayType")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(SalayType,String)
            End If
            If (OverTimeType Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OverTimeType")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(OverTimeType,String)
            End If
            If (CompanyStartYear.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CompanyStartYear.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (EmailAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(EmailAddress,String)
            End If
            If (PhoneNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(PhoneNo,String)
            End If
            If (Sign Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Sign,String)
            End If
            If (PEESIFIX.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(PEESIFIX.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (EOBIFix.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(EOBIFix.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (BuffetMealDed.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(BuffetMealDed.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (LabourMealDed.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(LabourMealDed.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (BUSOT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(BUSOT.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (MedicalLeaves.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(MedicalLeaves.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (CasualLeaves.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(CasualLeaves.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (AnnualLeaves.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(AnnualLeaves.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (AuditStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(AuditStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (ReportsPath Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(ReportsPath,String)
            End If
            If (DailyTravelAllowance.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(DailyTravelAllowance.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (BStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(BStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_CmpID,Integer)
            If (Original_CompanyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_CompanyName")
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_CompanyName,String)
            End If
            If (Original_Address Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Address")
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_Address,String)
            End If
            If (Original_SalayType Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SalayType")
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_SalayType,String)
            End If
            If (Original_OverTimeType Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_OverTimeType")
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_OverTimeType,String)
            End If
            If (Original_CompanyStartYear.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_CompanyStartYear.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_EmailAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_EmailAddress,String)
            End If
            If (Original_PhoneNo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_PhoneNo,String)
            End If
            If (Original_Sign Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_Sign,String)
            End If
            If (Original_PEESIFIX.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_PEESIFIX.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_EOBIFix.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_EOBIFix.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_BuffetMealDed.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_BuffetMealDed.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_LabourMealDed.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_LabourMealDed.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_BUSOT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_BUSOT.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_MedicalLeaves.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_MedicalLeaves.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_CasualLeaves.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_CasualLeaves.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_AnnualLeaves.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_AnnualLeaves.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_AuditStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_AuditStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_ReportsPath Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_ReportsPath,String)
            End If
            If (Original_DailyTravelAllowance.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_DailyTravelAllowance.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_BStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_BStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_Log_ShiftTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Log_Shift"
            tableMapping.ColumnMappings.Add("ShiftLogID", "ShiftLogID")
            tableMapping.ColumnMappings.Add("EmpID", "EmpID")
            tableMapping.ColumnMappings.Add("ShiftID", "ShiftID")
            tableMapping.ColumnMappings.Add("FromDate", "FromDate")
            tableMapping.ColumnMappings.Add("EndDate", "EndDate")
            tableMapping.ColumnMappings.Add("IPAddress", "IPAddress")
            tableMapping.ColumnMappings.Add("CreationTime", "CreationTime")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tbl_Log_Shift] WHERE (([ShiftLogID] = ?) AND ([EmpID] = ?) AND ([Shi"& _ 
                "ftID] = ?) AND ((? = 1 AND [FromDate] IS NULL) OR ([FromDate] = ?)) AND ((? = 1 "& _ 
                "AND [EndDate] IS NULL) OR ([EndDate] = ?)) AND ((? = 1 AND [IPAddress] IS NULL) "& _ 
                "OR ([IPAddress] = ?)) AND ((? = 1 AND [CreationTime] IS NULL) OR ([CreationTime]"& _ 
                " = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ShiftLogID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ShiftLogID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_EmpID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmpID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ShiftID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ShiftID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FromDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FromDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FromDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FromDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_EndDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EndDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_EndDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EndDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IPAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IPAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IPAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IPAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CreationTime", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CreationTime", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CreationTime", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CreationTime", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tbl_Log_Shift] ([EmpID], [ShiftID], [FromDate], [EndDate], [IPAddres"& _ 
                "s], [CreationTime]) VALUES (?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("EmpID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmpID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ShiftID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ShiftID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FromDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FromDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("EndDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EndDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IPAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IPAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CreationTime", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CreationTime", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tbl_Log_Shift] SET [EmpID] = ?, [ShiftID] = ?, [FromDate] = ?, [EndDate] "& _ 
                "= ?, [IPAddress] = ?, [CreationTime] = ? WHERE (([ShiftLogID] = ?) AND ([EmpID] "& _ 
                "= ?) AND ([ShiftID] = ?) AND ((? = 1 AND [FromDate] IS NULL) OR ([FromDate] = ?)"& _ 
                ") AND ((? = 1 AND [EndDate] IS NULL) OR ([EndDate] = ?)) AND ((? = 1 AND [IPAddr"& _ 
                "ess] IS NULL) OR ([IPAddress] = ?)) AND ((? = 1 AND [CreationTime] IS NULL) OR ("& _ 
                "[CreationTime] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("EmpID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmpID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ShiftID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ShiftID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FromDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FromDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("EndDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EndDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IPAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IPAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("CreationTime", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CreationTime", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ShiftLogID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ShiftLogID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_EmpID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EmpID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ShiftID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ShiftID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_FromDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FromDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FromDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FromDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_EndDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EndDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_EndDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EndDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IPAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IPAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IPAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IPAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_CreationTime", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CreationTime", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_CreationTime", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CreationTime", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.ERP_HRMS.My.MySettings.Default.HRMSCon
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tbl_Log_Shift.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_Log_Shift"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSUser.tbl_Log_ShiftDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSUser.tbl_Log_ShiftDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSUser.tbl_Log_ShiftDataTable = New DSUser.tbl_Log_ShiftDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSUser.tbl_Log_ShiftDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSUser) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_Log_Shift")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ShiftLogID As Integer, ByVal Original_EmpID As Integer, ByVal Original_ShiftID As Integer, ByVal Original_FromDate As Global.System.Nullable(Of Date), ByVal Original_EndDate As Global.System.Nullable(Of Date), ByVal Original_IPAddress As String, ByVal Original_CreationTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ShiftLogID,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_EmpID,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_ShiftID,Integer)
            If (Original_FromDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_FromDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_EndDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_EndDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_IPAddress Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_IPAddress,String)
            End If
            If (Original_CreationTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_CreationTime.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal EmpID As Integer, ByVal ShiftID As Integer, ByVal FromDate As Global.System.Nullable(Of Date), ByVal EndDate As Global.System.Nullable(Of Date), ByVal IPAddress As String, ByVal CreationTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(EmpID,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(ShiftID,Integer)
            If (FromDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(FromDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (EndDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(EndDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (IPAddress Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(IPAddress,String)
            End If
            If (CreationTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CreationTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal EmpID As Integer, ByVal ShiftID As Integer, ByVal FromDate As Global.System.Nullable(Of Date), ByVal EndDate As Global.System.Nullable(Of Date), ByVal IPAddress As String, ByVal CreationTime As Global.System.Nullable(Of Date), ByVal Original_ShiftLogID As Integer, ByVal Original_EmpID As Integer, ByVal Original_ShiftID As Integer, ByVal Original_FromDate As Global.System.Nullable(Of Date), ByVal Original_EndDate As Global.System.Nullable(Of Date), ByVal Original_IPAddress As String, ByVal Original_CreationTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(EmpID,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ShiftID,Integer)
            If (FromDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(FromDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (EndDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(EndDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (IPAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(IPAddress,String)
            End If
            If (CreationTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CreationTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_ShiftLogID,Integer)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_EmpID,Integer)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_ShiftID,Integer)
            If (Original_FromDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_FromDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_EndDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_EndDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_IPAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_IPAddress,String)
            End If
            If (Original_CreationTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_CreationTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class View_HRM_SectionTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "View_HRM_Section"
            tableMapping.ColumnMappings.Add("SectionCode", "SectionCode")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.ERP_HRMS.My.MySettings.Default.HRMSCon
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SectionCode"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_HRM_Section"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY SectionCode"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"HAVING        (SectionCode IS NOT NULL)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSUser.View_HRM_SectionDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSUser.View_HRM_SectionDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSUser.View_HRM_SectionDataTable = New DSUser.View_HRM_SectionDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_MIS_User_LogTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_MIS_User_Log"
            tableMapping.ColumnMappings.Add("LID", "LID")
            tableMapping.ColumnMappings.Add("UserID", "UserID")
            tableMapping.ColumnMappings.Add("LogIntime", "LogIntime")
            tableMapping.ColumnMappings.Add("LogOutTime", "LogOutTime")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tbl_MIS_User_Log] WHERE (([LID] = ?) AND ([UserID] = ?) AND ([LogInt"& _ 
                "ime] = ?) AND ((? = 1 AND [LogOutTime] IS NULL) OR ([LogOutTime] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LogIntime", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LogIntime", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LogOutTime", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LogOutTime", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LogOutTime", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LogOutTime", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tbl_MIS_User_Log] ([UserID], [LogIntime], [LogOutTime]) VALUES (?, ?"& _ 
                ", ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LogIntime", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LogIntime", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LogOutTime", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LogOutTime", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tbl_MIS_User_Log] SET [UserID] = ?, [LogIntime] = ?, [LogOutTime] = ? WHE"& _ 
                "RE (([LID] = ?) AND ([UserID] = ?) AND ([LogIntime] = ?) AND ((? = 1 AND [LogOut"& _ 
                "Time] IS NULL) OR ([LogOutTime] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LogIntime", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LogIntime", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LogOutTime", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LogOutTime", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LogIntime", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LogIntime", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LogOutTime", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LogOutTime", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LogOutTime", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LogOutTime", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.ERP_HRMS.My.MySettings.Default.HRMSCon
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tbl_MIS_User_Log.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User_Log"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSUser.tbl_MIS_User_LogDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSUser.tbl_MIS_User_LogDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSUser.tbl_MIS_User_LogDataTable = New DSUser.tbl_MIS_User_LogDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSUser.tbl_MIS_User_LogDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSUser) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_MIS_User_Log")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_LID As Integer, ByVal Original_UserID As Integer, ByVal Original_LogIntime As Date, ByVal Original_LogOutTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_LID,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_UserID,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_LogIntime,Date)
            If (Original_LogOutTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_LogOutTime.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal UserID As Integer, ByVal LogIntime As Date, ByVal LogOutTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(UserID,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(LogIntime,Date)
            If (LogOutTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(LogOutTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal UserID As Integer, ByVal LogIntime As Date, ByVal LogOutTime As Global.System.Nullable(Of Date), ByVal Original_LID As Integer, ByVal Original_UserID As Integer, ByVal Original_LogIntime As Date, ByVal Original_LogOutTime As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(UserID,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(LogIntime,Date)
            If (LogOutTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(LogOutTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_LID,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_UserID,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_LogIntime,Date)
            If (Original_LogOutTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_LogOutTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_Acc_FinancialPeriodTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_Acc_FinancialPeriod"
            tableMapping.ColumnMappings.Add("FinancialPeriod", "FinancialPeriod")
            tableMapping.ColumnMappings.Add("Status", "Status")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tbl_Acc_FinancialPeriod] WHERE (([FinancialPeriod] = ?) AND ((? = 1 "& _ 
                "AND [Status] IS NULL) OR ([Status] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FinancialPeriod", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FinancialPeriod", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Status", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tbl_Acc_FinancialPeriod] ([FinancialPeriod], [Status]) VALUES (?, ?)"& _ 
                ""
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FinancialPeriod", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FinancialPeriod", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tbl_Acc_FinancialPeriod] SET [FinancialPeriod] = ?, [Status] = ? WHERE (("& _ 
                "[FinancialPeriod] = ?) AND ((? = 1 AND [Status] IS NULL) OR ([Status] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("FinancialPeriod", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FinancialPeriod", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_FinancialPeriod", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FinancialPeriod", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Status", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.ERP_HRMS.My.MySettings.Default.HRMSCon
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tbl_Acc_FinancialPeriod.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_Acc_FinancialPeriod"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSUser.tbl_Acc_FinancialPeriodDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSUser.tbl_Acc_FinancialPeriodDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSUser.tbl_Acc_FinancialPeriodDataTable = New DSUser.tbl_Acc_FinancialPeriodDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSUser.tbl_Acc_FinancialPeriodDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSUser) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_Acc_FinancialPeriod")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FinancialPeriod As String, ByVal Original_Status As Global.System.Nullable(Of Boolean)) As Integer
            If (Original_FinancialPeriod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FinancialPeriod")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FinancialPeriod,String)
            End If
            If (Original_Status.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Status.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal FinancialPeriod As String, ByVal Status As Global.System.Nullable(Of Boolean)) As Integer
            If (FinancialPeriod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FinancialPeriod")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(FinancialPeriod,String)
            End If
            If (Status.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Status.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal FinancialPeriod As String, ByVal Status As Global.System.Nullable(Of Boolean), ByVal Original_FinancialPeriod As String, ByVal Original_Status As Global.System.Nullable(Of Boolean)) As Integer
            If (FinancialPeriod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("FinancialPeriod")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(FinancialPeriod,String)
            End If
            If (Status.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Status.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Original_FinancialPeriod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_FinancialPeriod")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_FinancialPeriod,String)
            End If
            If (Original_Status.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_Status.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Status As Global.System.Nullable(Of Boolean), ByVal Original_FinancialPeriod As String, ByVal Original_Status As Global.System.Nullable(Of Boolean)) As Integer
            Return Me.Update(Original_FinancialPeriod, Status, Original_FinancialPeriod, Original_Status)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class UsersTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Users"
            tableMapping.ColumnMappings.Add("UserID", "UserID")
            tableMapping.ColumnMappings.Add("LoginName", "LoginName")
            tableMapping.ColumnMappings.Add("passwd", "passwd")
            tableMapping.ColumnMappings.Add("LoginDeptID", "LoginDeptID")
            tableMapping.ColumnMappings.Add("UserSataus", "UserSataus")
            tableMapping.ColumnMappings.Add("IpAddress", "IpAddress")
            tableMapping.ColumnMappings.Add("SPStatus", "SPStatus")
            tableMapping.ColumnMappings.Add("PSWDDate", "PSWDDate")
            tableMapping.ColumnMappings.Add("Employee", "Employee")
            tableMapping.ColumnMappings.Add("HRSett", "HRSett")
            tableMapping.ColumnMappings.Add("HRRpt", "HRRpt")
            tableMapping.ColumnMappings.Add("PayRoll", "PayRoll")
            tableMapping.ColumnMappings.Add("PayRollsett", "PayRollsett")
            tableMapping.ColumnMappings.Add("PayRollRpt", "PayRollRpt")
            tableMapping.ColumnMappings.Add("Account", "Account")
            tableMapping.ColumnMappings.Add("AccSett", "AccSett")
            tableMapping.ColumnMappings.Add("AccRpt", "AccRpt")
            tableMapping.ColumnMappings.Add("Canteen", "Canteen")
            tableMapping.ColumnMappings.Add("Visitors", "Visitors")
            tableMapping.ColumnMappings.Add("COntt", "COntt")
            tableMapping.ColumnMappings.Add("UserMgt", "UserMgt")
            tableMapping.ColumnMappings.Add("ResetStatus", "ResetStatus")
            tableMapping.ColumnMappings.Add("PasswordEncrypt", "PasswordEncrypt")
            tableMapping.ColumnMappings.Add("Travel", "Travel")
            tableMapping.ColumnMappings.Add("Transport", "Transport")
            tableMapping.ColumnMappings.Add("vehicles", "vehicles")
            tableMapping.ColumnMappings.Add("Grievance", "Grievance")
            tableMapping.ColumnMappings.Add("Shop", "Shop")
            tableMapping.ColumnMappings.Add("Medication", "Medication")
            tableMapping.ColumnMappings.Add("Complaint", "Complaint")
            tableMapping.ColumnMappings.Add("Evo", "Evo")
            tableMapping.ColumnMappings.Add("Kaizen", "Kaizen")
            tableMapping.ColumnMappings.Add("Traning", "Traning")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tbl_MIS_User] WHERE (([UserID] = ?) AND ([LoginName] = ?) AND ((? = "& _ 
                "1 AND [passwd] IS NULL) OR ([passwd] = ?)) AND ((? = 1 AND [LoginDeptID] IS NULL"& _ 
                ") OR ([LoginDeptID] = ?)) AND ((? = 1 AND [UserSataus] IS NULL) OR ([UserSataus]"& _ 
                " = ?)) AND ((? = 1 AND [IpAddress] IS NULL) OR ([IpAddress] = ?)) AND ((? = 1 AN"& _ 
                "D [SPStatus] IS NULL) OR ([SPStatus] = ?)) AND ((? = 1 AND [PSWDDate] IS NULL) O"& _ 
                "R ([PSWDDate] = ?)) AND ((? = 1 AND [Status1] IS NULL) OR ([Status1] = ?)) AND ("& _ 
                "(? = 1 AND [Status2] IS NULL) OR ([Status2] = ?)) AND ((? = 1 AND [Status3] IS N"& _ 
                "ULL) OR ([Status3] = ?)) AND ((? = 1 AND [Status4] IS NULL) OR ([Status4] = ?)) "& _ 
                "AND ((? = 1 AND [Status5] IS NULL) OR ([Status5] = ?)) AND ((? = 1 AND [Status6]"& _ 
                " IS NULL) OR ([Status6] = ?)) AND ((? = 1 AND [Status7] IS NULL) OR ([Status7] ="& _ 
                " ?)) AND ((? = 1 AND [Status8] IS NULL) OR ([Status8] = ?)) AND ((? = 1 AND [Sta"& _ 
                "tus9] IS NULL) OR ([Status9] = ?)) AND ((? = 1 AND [Status10] IS NULL) OR ([Stat"& _ 
                "us10] = ?)) AND ((? = 1 AND [Status11] IS NULL) OR ([Status11] = ?)) AND ((? = 1"& _ 
                " AND [Status12] IS NULL) OR ([Status12] = ?)) AND ((? = 1 AND [Status13] IS NULL"& _ 
                ") OR ([Status13] = ?)) AND ((? = 1 AND [ResetStatus] IS NULL) OR ([ResetStatus] "& _ 
                "= ?)) AND ((? = 1 AND [PasswordEncrypt] IS NULL) OR ([PasswordEncrypt] = ?)) AND"& _ 
                " ((? = 1 AND [Status14] IS NULL) OR ([Status14] = ?)) AND ((? = 1 AND [Transport"& _ 
                "] IS NULL) OR ([Transport] = ?)) AND ((? = 1 AND [vehicles] IS NULL) OR ([vehicl"& _ 
                "es] = ?)) AND ((? = 1 AND [Grievance] IS NULL) OR ([Grievance] = ?)) AND ((? = 1"& _ 
                " AND [Shop] IS NULL) OR ([Shop] = ?)) AND ((? = 1 AND [Medication] IS NULL) OR ("& _ 
                "[Medication] = ?)) AND ((? = 1 AND [Complaint] IS NULL) OR ([Complaint] = ?)) AN"& _ 
                "D ((? = 1 AND [Evo] IS NULL) OR ([Evo] = ?)) AND ((? = 1 AND [Kaizen] IS NULL) O"& _ 
                "R ([Kaizen] = ?)) AND ((? = 1 AND [Traning] IS NULL) OR ([Traning] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LoginName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_passwd", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwd", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passwd", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwd", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LoginDeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginDeptID", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LoginDeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginDeptID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_UserSataus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserSataus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UserSataus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserSataus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IpAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IpAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IpAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IpAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SPStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SPStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PSWDDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PSWDDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PSWDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PSWDDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Employee", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Employee", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Employee", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Employee", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_HRSett", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRSett", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_HRSett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRSett", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_HRRpt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRRpt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_HRRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRRpt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PayRoll", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRoll", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PayRoll", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRoll", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PayRollsett", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollsett", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PayRollsett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollsett", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PayRollRpt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollRpt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PayRollRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollRpt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Account", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Account", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Account", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Account", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AccSett", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccSett", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AccSett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccSett", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AccRpt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccRpt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AccRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccRpt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Canteen", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Canteen", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Canteen", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Canteen", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Visitors", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Visitors", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Visitors", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Visitors", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_COntt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "COntt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_COntt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "COntt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_UserMgt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserMgt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UserMgt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserMgt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ResetStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ResetStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ResetStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ResetStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PasswordEncrypt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PasswordEncrypt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PasswordEncrypt", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PasswordEncrypt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Travel", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Travel", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Travel", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Travel", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Transport", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Transport", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Transport", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Transport", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_vehicles", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vehicles", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vehicles", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vehicles", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Grievance", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Grievance", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Grievance", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Grievance", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Shop", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Shop", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Shop", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Shop", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Medication", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Medication", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Medication", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Medication", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Complaint", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Complaint", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Complaint", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Complaint", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Evo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Evo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Evo", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Evo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Kaizen", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Kaizen", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Kaizen", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Kaizen", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Traning", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Traning", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Traning", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Traning", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tbl_MIS_User] ([LoginName], [passwd], [LoginDeptID], [UserSataus], ["& _ 
                "IpAddress], [SPStatus], [PSWDDate], [Status1], [Status2], [Status3], [Status4], "& _ 
                "[Status5], [Status6], [Status7], [Status8], [Status9], [Status10], [Status11], ["& _ 
                "Status12], [Status13], [ResetStatus], [PasswordEncrypt], [Status14], [Transport]"& _ 
                ", [vehicles], [Grievance], [Shop], [Medication], [Complaint], [Evo], [Kaizen], ["& _ 
                "Traning]) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"& _ 
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LoginName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passwd", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwd", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LoginDeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginDeptID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserSataus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserSataus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IpAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IpAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SPStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PSWDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PSWDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Employee", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Employee", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("HRSett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRSett", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("HRRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRRpt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PayRoll", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRoll", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PayRollsett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollsett", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PayRollRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollRpt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Account", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Account", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AccSett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccSett", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AccRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccRpt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Canteen", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Canteen", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Visitors", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Visitors", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("COntt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "COntt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserMgt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserMgt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ResetStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ResetStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PasswordEncrypt", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PasswordEncrypt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Travel", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Travel", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Transport", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Transport", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vehicles", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vehicles", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Grievance", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Grievance", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Shop", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Shop", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Medication", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Medication", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Complaint", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Complaint", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Evo", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Evo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Kaizen", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Kaizen", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Traning", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Traning", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tbl_MIS_User] SET [LoginName] = ?, [passwd] = ?, [LoginDeptID] = ?, [User"& _ 
                "Sataus] = ?, [IpAddress] = ?, [SPStatus] = ?, [PSWDDate] = ?, [Status1] = ?, [St"& _ 
                "atus2] = ?, [Status3] = ?, [Status4] = ?, [Status5] = ?, [Status6] = ?, [Status7"& _ 
                "] = ?, [Status8] = ?, [Status9] = ?, [Status10] = ?, [Status11] = ?, [Status12] "& _ 
                "= ?, [Status13] = ?, [ResetStatus] = ?, [PasswordEncrypt] = ?, [Status14] = ?, ["& _ 
                "Transport] = ?, [vehicles] = ?, [Grievance] = ?, [Shop] = ?, [Medication] = ?, ["& _ 
                "Complaint] = ?, [Evo] = ?, [Kaizen] = ?, [Traning] = ? WHERE (([UserID] = ?) AND"& _ 
                " ([LoginName] = ?) AND ((? = 1 AND [passwd] IS NULL) OR ([passwd] = ?)) AND ((? "& _ 
                "= 1 AND [LoginDeptID] IS NULL) OR ([LoginDeptID] = ?)) AND ((? = 1 AND [UserSata"& _ 
                "us] IS NULL) OR ([UserSataus] = ?)) AND ((? = 1 AND [IpAddress] IS NULL) OR ([Ip"& _ 
                "Address] = ?)) AND ((? = 1 AND [SPStatus] IS NULL) OR ([SPStatus] = ?)) AND ((? "& _ 
                "= 1 AND [PSWDDate] IS NULL) OR ([PSWDDate] = ?)) AND ((? = 1 AND [Status1] IS NU"& _ 
                "LL) OR ([Status1] = ?)) AND ((? = 1 AND [Status2] IS NULL) OR ([Status2] = ?)) A"& _ 
                "ND ((? = 1 AND [Status3] IS NULL) OR ([Status3] = ?)) AND ((? = 1 AND [Status4] "& _ 
                "IS NULL) OR ([Status4] = ?)) AND ((? = 1 AND [Status5] IS NULL) OR ([Status5] = "& _ 
                "?)) AND ((? = 1 AND [Status6] IS NULL) OR ([Status6] = ?)) AND ((? = 1 AND [Stat"& _ 
                "us7] IS NULL) OR ([Status7] = ?)) AND ((? = 1 AND [Status8] IS NULL) OR ([Status"& _ 
                "8] = ?)) AND ((? = 1 AND [Status9] IS NULL) OR ([Status9] = ?)) AND ((? = 1 AND "& _ 
                "[Status10] IS NULL) OR ([Status10] = ?)) AND ((? = 1 AND [Status11] IS NULL) OR "& _ 
                "([Status11] = ?)) AND ((? = 1 AND [Status12] IS NULL) OR ([Status12] = ?)) AND ("& _ 
                "(? = 1 AND [Status13] IS NULL) OR ([Status13] = ?)) AND ((? = 1 AND [ResetStatus"& _ 
                "] IS NULL) OR ([ResetStatus] = ?)) AND ((? = 1 AND [PasswordEncrypt] IS NULL) OR"& _ 
                " ([PasswordEncrypt] = ?)) AND ((? = 1 AND [Status14] IS NULL) OR ([Status14] = ?"& _ 
                ")) AND ((? = 1 AND [Transport] IS NULL) OR ([Transport] = ?)) AND ((? = 1 AND [v"& _ 
                "ehicles] IS NULL) OR ([vehicles] = ?)) AND ((? = 1 AND [Grievance] IS NULL) OR ("& _ 
                "[Grievance] = ?)) AND ((? = 1 AND [Shop] IS NULL) OR ([Shop] = ?)) AND ((? = 1 A"& _ 
                "ND [Medication] IS NULL) OR ([Medication] = ?)) AND ((? = 1 AND [Complaint] IS N"& _ 
                "ULL) OR ([Complaint] = ?)) AND ((? = 1 AND [Evo] IS NULL) OR ([Evo] = ?)) AND (("& _ 
                "? = 1 AND [Kaizen] IS NULL) OR ([Kaizen] = ?)) AND ((? = 1 AND [Traning] IS NULL"& _ 
                ") OR ([Traning] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LoginName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passwd", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwd", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LoginDeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginDeptID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserSataus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserSataus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IpAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IpAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SPStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PSWDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PSWDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Employee", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Employee", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("HRSett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRSett", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("HRRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRRpt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PayRoll", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRoll", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PayRollsett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollsett", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PayRollRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollRpt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Account", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Account", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AccSett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccSett", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AccRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccRpt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Canteen", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Canteen", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Visitors", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Visitors", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("COntt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "COntt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserMgt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserMgt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ResetStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ResetStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PasswordEncrypt", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PasswordEncrypt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Travel", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Travel", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Transport", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Transport", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vehicles", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vehicles", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Grievance", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Grievance", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Shop", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Shop", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Medication", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Medication", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Complaint", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Complaint", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Evo", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Evo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Kaizen", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Kaizen", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Traning", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Traning", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LoginName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_passwd", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwd", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passwd", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwd", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LoginDeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginDeptID", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LoginDeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginDeptID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_UserSataus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserSataus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UserSataus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserSataus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IpAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IpAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IpAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IpAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SPStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SPStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PSWDDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PSWDDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PSWDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PSWDDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Employee", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Employee", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Employee", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Employee", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_HRSett", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRSett", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_HRSett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRSett", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_HRRpt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRRpt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_HRRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRRpt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PayRoll", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRoll", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PayRoll", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRoll", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PayRollsett", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollsett", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PayRollsett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollsett", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PayRollRpt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollRpt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PayRollRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollRpt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Account", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Account", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Account", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Account", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AccSett", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccSett", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AccSett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccSett", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AccRpt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccRpt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AccRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccRpt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Canteen", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Canteen", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Canteen", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Canteen", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Visitors", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Visitors", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Visitors", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Visitors", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_COntt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "COntt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_COntt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "COntt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_UserMgt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserMgt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UserMgt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserMgt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ResetStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ResetStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ResetStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ResetStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PasswordEncrypt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PasswordEncrypt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PasswordEncrypt", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PasswordEncrypt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Travel", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Travel", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Travel", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Travel", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Transport", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Transport", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Transport", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Transport", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_vehicles", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vehicles", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vehicles", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vehicles", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Grievance", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Grievance", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Grievance", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Grievance", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Shop", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Shop", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Shop", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Shop", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Medication", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Medication", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Medication", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Medication", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Complaint", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Complaint", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Complaint", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Complaint", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Evo", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Evo", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Evo", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Evo", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Kaizen", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Kaizen", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Kaizen", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Kaizen", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Traning", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Traning", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Traning", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Traning", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.ERP_HRMS.My.MySettings.Default.HRMSCon
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(15) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        UserID, LoginName, passwd, LoginDeptID, UserSataus, IpAddress, SPSt"& _ 
                "atus, PSWDDate, Status1 AS Employee, Status2 AS HRSett, Status3 AS HRRpt, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                     Status4 AS PayRoll, Status5 AS PayRollsett, Status6 AS PayR"& _ 
                "ollRpt, Status7 AS Account, Status8 AS AccSett, Status9 AS AccRpt, Status10 AS C"& _ 
                "anteen, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Status11 AS Visitors, Status12 AS COntt, Stat"& _ 
                "us13 AS UserMgt, ResetStatus, PasswordEncrypt, Status14 AS Travel, Transport, ve"& _ 
                "hicles, Grievance, Shop, Medication, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Complaint, Evo, "& _ 
                "Kaizen, Traning"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        UserID, PasswordEncrypt"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE       "& _ 
                " (UserID = ?) AND (PasswordEncrypt = ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PasswordEncrypt", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PasswordEncrypt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT Complaint, Evo, Grievance, IpAddress, Kaizen, LoginDeptID, LoginName, Medi"& _ 
                "cation, PSWDDate, PasswordEncrypt, ResetStatus, SPStatus, Shop, Traning, Transpo"& _ 
                "rt, UserID, UserSataus, passwd, vehicles FROM tbl_MIS_User WHERE (UserSataus = 1"& _ 
                ")"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT Complaint, Evo, Grievance, IpAddress, Kaizen, LoginDeptID, LoginName, Medi"& _ 
                "cation, PSWDDate, PasswordEncrypt, ResetStatus, SPStatus, Shop, Status1 AS Emplo"& _ 
                "yee, Status10 AS Canteen, Status11 AS Visitors, Status12 AS COntt, Status13 AS U"& _ 
                "serMgt, Status2 AS HRSett, Status3 AS HRRpt, Status4 AS PayRoll, Status5 AS PayR"& _ 
                "ollsett, Status6 AS PayRollRpt, Status7 AS Account, Status8 AS AccSett, Status9 "& _ 
                "AS AccRpt, Traning, Transport, UserID, UserSataus, passwd, vehicles FROM tbl_MIS"& _ 
                "_User WHERE (LoginName = ?)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LoginName", Global.System.Data.Odbc.OdbcType.NVarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT Complaint, Evo, Grievance, IpAddress, Kaizen, LoginDeptID, LoginName, Medi"& _ 
                "cation, PSWDDate, PasswordEncrypt, ResetStatus, SPStatus, Shop, Status1 AS Emplo"& _ 
                "yee, Status10 AS Canteen, Status11 AS Visitors, Status12 AS COntt, Status13 AS U"& _ 
                "serMgt, Status2 AS HRSett, Status3 AS HRRpt, Status4 AS PayRoll, Status5 AS PayR"& _ 
                "ollsett, Status6 AS PayRollRpt, Status7 AS Account, Status8 AS AccSett, Status9 "& _ 
                "AS AccRpt, Traning, Transport, UserID, UserSataus, passwd, vehicles FROM tbl_MIS"& _ 
                "_User WHERE (UserID = ?)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(5) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT        isnull(SPStatus, 0) AS SPStatus"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHER"& _ 
                "E        (UserID = ?)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT        UserID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (IpAddress = ?) "& _ 
                "AND (UserSataus = 1)"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IpAddress", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IpAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(7) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT        IpAddress"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (UserID = ?)"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(8) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(8).Connection = Me.Connection
            Me._commandCollection(8).CommandText = "SELECT        passwd"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (UserID = ?)"
            Me._commandCollection(8).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(9) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(9).Connection = Me.Connection
            Me._commandCollection(9).CommandText = "SELECT        isnull(UserSataus, 0) AS UserSataus"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "WHERE        (IpAddress = ?)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY isnull(UserSataus, 0)"
            Me._commandCollection(9).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IpAddress", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IpAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(10) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(10).Connection = Me.Connection
            Me._commandCollection(10).CommandText = "SELECT        LoginDeptID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (UserSataus"& _ 
                " = 1) AND (UserID = ?)"
            Me._commandCollection(10).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(11) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(11).Connection = Me.Connection
            Me._commandCollection(11).CommandText = "SELECT        UserID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (passwd = ?) AND"& _ 
                " (LoginName = ?)"
            Me._commandCollection(11).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passwd", Global.System.Data.Odbc.OdbcType.NVarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwd", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(11).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LoginName", Global.System.Data.Odbc.OdbcType.NVarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(12) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(12).Connection = Me.Connection
            Me._commandCollection(12).CommandText = "SELECT        PSWDDate"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (UserID = ?) A"& _ 
                "ND (UserSataus = 1)"
            Me._commandCollection(12).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(12).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(13) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(13).Connection = Me.Connection
            Me._commandCollection(13).CommandText = "SELECT        ResetStatus, UserID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (Us"& _ 
                "erID = ?) AND (ResetStatus = 1)"
            Me._commandCollection(13).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(13).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(14) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(14).Connection = Me.Connection
            Me._commandCollection(14).CommandText = "UPDATE       tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                passwd = ?, PSWDDate = ?, ResetStat"& _ 
                "us = ?"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (UserID = ?)"
            Me._commandCollection(14).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passwd", Global.System.Data.Odbc.OdbcType.NVarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwd", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PSWDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PSWDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ResetStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ResetStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(14).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UserID", Global.System.Data.Odbc.OdbcType.BigInt, 19, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._commandCollection(15) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(15).Connection = Me.Connection
            Me._commandCollection(15).CommandText = "UPDATE       tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                 PasswordEncrypt = ?"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        "& _ 
                "(UserID = ?)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(15).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PasswordEncrypt", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PasswordEncrypt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(15).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSUser.UsersDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSUser.UsersDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSUser.UsersDataTable = New DSUser.UsersDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSUser.UsersDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy10() As DSUser.UsersDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Dim dataTable As DSUser.UsersDataTable = New DSUser.UsersDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy1(ByVal dataTable As DSUser.UsersDataTable, ByVal LoginName As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (LoginName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LoginName")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(LoginName,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy11(ByVal LoginName As String) As DSUser.UsersDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (LoginName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LoginName")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(LoginName,String)
            End If
            Dim dataTable As DSUser.UsersDataTable = New DSUser.UsersDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy2(ByVal dataTable As DSUser.UsersDataTable, ByVal UserID As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(UserID,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy13(ByVal UserID As Integer) As DSUser.UsersDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(UserID,Integer)
            Dim dataTable As DSUser.UsersDataTable = New DSUser.UsersDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSUser.UsersDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSUser) As Integer
            Return Me.Adapter.Update(dataSet, "Users")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_UserID As Integer,  _
                    ByVal Original_LoginName As String,  _
                    ByVal Original_passwd As String,  _
                    ByVal Original_LoginDeptID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_UserSataus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IpAddress As String,  _
                    ByVal Original_SPStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PSWDDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_Employee As Boolean,  _
                    ByVal Original_HRSett As Boolean,  _
                    ByVal Original_HRRpt As Boolean,  _
                    ByVal Original_PayRoll As Boolean,  _
                    ByVal Original_PayRollsett As Boolean,  _
                    ByVal Original_PayRollRpt As Boolean,  _
                    ByVal Original_Account As Boolean,  _
                    ByVal Original_AccSett As Boolean,  _
                    ByVal Original_AccRpt As Boolean,  _
                    ByVal Original_Canteen As Boolean,  _
                    ByVal Original_Visitors As Boolean,  _
                    ByVal Original_COntt As Boolean,  _
                    ByVal Original_UserMgt As Boolean,  _
                    ByVal Original_ResetStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PasswordEncrypt As String,  _
                    ByVal Original_Travel As Boolean,  _
                    ByVal Original_Transport As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_vehicles As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Grievance As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Shop As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Medication As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Complaint As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Evo As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Kaizen As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Traning As Global.System.Nullable(Of Boolean)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_UserID,Integer)
            If (Original_LoginName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LoginName")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_LoginName,String)
            End If
            If (Original_passwd Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_passwd,String)
            End If
            If (Original_LoginDeptID.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_LoginDeptID.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_UserSataus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_UserSataus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_IpAddress Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_IpAddress,String)
            End If
            If (Original_SPStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_SPStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_PSWDDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_PSWDDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_Employee,Boolean)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_HRSett,Boolean)
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_HRRpt,Boolean)
            Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_PayRoll,Boolean)
            Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_PayRollsett,Boolean)
            Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_PayRollRpt,Boolean)
            Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_Account,Boolean)
            Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_AccSett,Boolean)
            Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_AccRpt,Boolean)
            Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_Canteen,Boolean)
            Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_Visitors,Boolean)
            Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_COntt,Boolean)
            Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_UserMgt,Boolean)
            If (Original_ResetStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_ResetStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_PasswordEncrypt Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_PasswordEncrypt,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_Travel,Boolean)
            If (Original_Transport.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_Transport.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_vehicles.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_vehicles.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_Grievance.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_Grievance.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_Shop.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_Shop.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (Original_Medication.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_Medication.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_Complaint.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_Complaint.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_Evo.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_Evo.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_Kaizen.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_Kaizen.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_Traning.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_Traning.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal LoginName As String,  _
                    ByVal passwd As String,  _
                    ByVal LoginDeptID As Global.System.Nullable(Of Integer),  _
                    ByVal UserSataus As Global.System.Nullable(Of Boolean),  _
                    ByVal IpAddress As String,  _
                    ByVal SPStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PSWDDate As Global.System.Nullable(Of Date),  _
                    ByVal Employee As Boolean,  _
                    ByVal HRSett As Boolean,  _
                    ByVal HRRpt As Boolean,  _
                    ByVal PayRoll As Boolean,  _
                    ByVal PayRollsett As Boolean,  _
                    ByVal PayRollRpt As Boolean,  _
                    ByVal Account As Boolean,  _
                    ByVal AccSett As Boolean,  _
                    ByVal AccRpt As Boolean,  _
                    ByVal Canteen As Boolean,  _
                    ByVal Visitors As Boolean,  _
                    ByVal COntt As Boolean,  _
                    ByVal UserMgt As Boolean,  _
                    ByVal ResetStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PasswordEncrypt As String,  _
                    ByVal Travel As Boolean,  _
                    ByVal Transport As Global.System.Nullable(Of Boolean),  _
                    ByVal vehicles As Global.System.Nullable(Of Boolean),  _
                    ByVal Grievance As Global.System.Nullable(Of Boolean),  _
                    ByVal Shop As Global.System.Nullable(Of Boolean),  _
                    ByVal Medication As Global.System.Nullable(Of Boolean),  _
                    ByVal Complaint As Global.System.Nullable(Of Boolean),  _
                    ByVal Evo As Global.System.Nullable(Of Boolean),  _
                    ByVal Kaizen As Global.System.Nullable(Of Boolean),  _
                    ByVal Traning As Global.System.Nullable(Of Boolean)) As Integer
            If (LoginName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LoginName")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(LoginName,String)
            End If
            If (passwd Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(passwd,String)
            End If
            If (LoginDeptID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(LoginDeptID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (UserSataus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(UserSataus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (IpAddress Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(IpAddress,String)
            End If
            If (SPStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(SPStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (PSWDDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PSWDDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(Employee,Boolean)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(HRSett,Boolean)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(HRRpt,Boolean)
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(PayRoll,Boolean)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(PayRollsett,Boolean)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(PayRollRpt,Boolean)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(Account,Boolean)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(AccSett,Boolean)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(AccRpt,Boolean)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(Canteen,Boolean)
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(Visitors,Boolean)
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(COntt,Boolean)
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(UserMgt,Boolean)
            If (ResetStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(ResetStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (PasswordEncrypt Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(PasswordEncrypt,String)
            End If
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(Travel,Boolean)
            If (Transport.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(Transport.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (vehicles.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(vehicles.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Grievance.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(Grievance.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Shop.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(Shop.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Medication.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(Medication.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Complaint.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(Complaint.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Evo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(Evo.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Kaizen.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(Kaizen.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Traning.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(Traning.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal LoginName As String,  _
                    ByVal passwd As String,  _
                    ByVal LoginDeptID As Global.System.Nullable(Of Integer),  _
                    ByVal UserSataus As Global.System.Nullable(Of Boolean),  _
                    ByVal IpAddress As String,  _
                    ByVal SPStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PSWDDate As Global.System.Nullable(Of Date),  _
                    ByVal Employee As Boolean,  _
                    ByVal HRSett As Boolean,  _
                    ByVal HRRpt As Boolean,  _
                    ByVal PayRoll As Boolean,  _
                    ByVal PayRollsett As Boolean,  _
                    ByVal PayRollRpt As Boolean,  _
                    ByVal Account As Boolean,  _
                    ByVal AccSett As Boolean,  _
                    ByVal AccRpt As Boolean,  _
                    ByVal Canteen As Boolean,  _
                    ByVal Visitors As Boolean,  _
                    ByVal COntt As Boolean,  _
                    ByVal UserMgt As Boolean,  _
                    ByVal ResetStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PasswordEncrypt As String,  _
                    ByVal Travel As Boolean,  _
                    ByVal Transport As Global.System.Nullable(Of Boolean),  _
                    ByVal vehicles As Global.System.Nullable(Of Boolean),  _
                    ByVal Grievance As Global.System.Nullable(Of Boolean),  _
                    ByVal Shop As Global.System.Nullable(Of Boolean),  _
                    ByVal Medication As Global.System.Nullable(Of Boolean),  _
                    ByVal Complaint As Global.System.Nullable(Of Boolean),  _
                    ByVal Evo As Global.System.Nullable(Of Boolean),  _
                    ByVal Kaizen As Global.System.Nullable(Of Boolean),  _
                    ByVal Traning As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_UserID As Integer,  _
                    ByVal Original_LoginName As String,  _
                    ByVal Original_passwd As String,  _
                    ByVal Original_LoginDeptID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_UserSataus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IpAddress As String,  _
                    ByVal Original_SPStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PSWDDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_Employee As Boolean,  _
                    ByVal Original_HRSett As Boolean,  _
                    ByVal Original_HRRpt As Boolean,  _
                    ByVal Original_PayRoll As Boolean,  _
                    ByVal Original_PayRollsett As Boolean,  _
                    ByVal Original_PayRollRpt As Boolean,  _
                    ByVal Original_Account As Boolean,  _
                    ByVal Original_AccSett As Boolean,  _
                    ByVal Original_AccRpt As Boolean,  _
                    ByVal Original_Canteen As Boolean,  _
                    ByVal Original_Visitors As Boolean,  _
                    ByVal Original_COntt As Boolean,  _
                    ByVal Original_UserMgt As Boolean,  _
                    ByVal Original_ResetStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PasswordEncrypt As String,  _
                    ByVal Original_Travel As Boolean,  _
                    ByVal Original_Transport As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_vehicles As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Grievance As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Shop As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Medication As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Complaint As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Evo As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Kaizen As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Traning As Global.System.Nullable(Of Boolean)) As Integer
            If (LoginName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LoginName")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(LoginName,String)
            End If
            If (passwd Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(passwd,String)
            End If
            If (LoginDeptID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(LoginDeptID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (UserSataus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(UserSataus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (IpAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(IpAddress,String)
            End If
            If (SPStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(SPStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (PSWDDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(PSWDDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Employee,Boolean)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(HRSett,Boolean)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(HRRpt,Boolean)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(PayRoll,Boolean)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(PayRollsett,Boolean)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(PayRollRpt,Boolean)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Account,Boolean)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(AccSett,Boolean)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(AccRpt,Boolean)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Canteen,Boolean)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Visitors,Boolean)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(COntt,Boolean)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(UserMgt,Boolean)
            If (ResetStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(ResetStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (PasswordEncrypt Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(PasswordEncrypt,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Travel,Boolean)
            If (Transport.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Transport.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (vehicles.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(vehicles.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Grievance.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Grievance.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Shop.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Shop.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Medication.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Medication.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Complaint.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Complaint.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Evo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Evo.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Kaizen.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Kaizen.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Traning.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Traning.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_UserID,Integer)
            If (Original_LoginName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LoginName")
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_LoginName,String)
            End If
            If (Original_passwd Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_passwd,String)
            End If
            If (Original_LoginDeptID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_LoginDeptID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_UserSataus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_UserSataus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_IpAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_IpAddress,String)
            End If
            If (Original_SPStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_SPStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_PSWDDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_PSWDDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_Employee,Boolean)
            Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_HRSett,Boolean)
            Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_HRRpt,Boolean)
            Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_PayRoll,Boolean)
            Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_PayRollsett,Boolean)
            Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_PayRollRpt,Boolean)
            Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_Account,Boolean)
            Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_AccSett,Boolean)
            Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_AccRpt,Boolean)
            Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_Canteen,Boolean)
            Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_Visitors,Boolean)
            Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_COntt,Boolean)
            Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_UserMgt,Boolean)
            If (Original_ResetStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_ResetStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (Original_PasswordEncrypt Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_PasswordEncrypt,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_Travel,Boolean)
            If (Original_Transport.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_Transport.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (Original_vehicles.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_vehicles.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (Original_Grievance.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_Grievance.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_Shop.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_Shop.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (Original_Medication.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_Medication.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (Original_Complaint.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_Complaint.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (Original_Evo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_Evo.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (Original_Kaizen.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_Kaizen.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            If (Original_Traning.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_Traning.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function checkoldpwdQuery(ByVal UserID As Integer, ByVal PasswordEncrypt As String) As Object
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(UserID,Integer)
            If (PasswordEncrypt Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(PasswordEncrypt,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetSPSstatus(ByVal UserID As Integer) As Global.System.Nullable(Of Boolean)
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(5)
            command.Parameters(0).Value = CType(UserID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Boolean)()
            Else
                Return New Global.System.Nullable(Of Boolean)(CType(returnValue,Boolean))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetUserID(ByVal IpAddress As String) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(6)
            If (IpAddress Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(IpAddress,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetUserIP(ByVal UserID As Integer) As String
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(7)
            command.Parameters(0).Value = CType(UserID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetUserPassword(ByVal UserID As Integer) As String
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(8)
            command.Parameters(0).Value = CType(UserID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,String)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetUserStatus(ByVal IpAddress As String) As Object
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(9)
            If (IpAddress Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(IpAddress,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function LoginDeptID(ByVal UserID As Integer) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(10)
            command.Parameters(0).Value = CType(UserID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function LoginName(ByVal passwd As String, ByVal LoginName1 As String) As Object
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(11)
            If (passwd Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(passwd,String)
            End If
            If (LoginName1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LoginName1")
            Else
                command.Parameters(1).Value = CType(LoginName1,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function PSWDDate(ByVal UserID As Integer) As Global.System.Nullable(Of Date)
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(12)
            command.Parameters(0).Value = CType(UserID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Date)()
            Else
                Return New Global.System.Nullable(Of Date)(CType(returnValue,Date))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function ResetCondition(ByVal UserID As Integer) As Object
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(13)
            command.Parameters(0).Value = CType(UserID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateQuery(ByVal passwd As String, ByVal PSWDDate As Global.System.Nullable(Of Date), ByVal ResetStatus As Global.System.Nullable(Of Boolean), ByVal Original_UserID As Long) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(14)
            If (passwd Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(passwd,String)
            End If
            If (PSWDDate.HasValue = true) Then
                command.Parameters(1).Value = CType(PSWDDate.Value,Date)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (ResetStatus.HasValue = true) Then
                command.Parameters(2).Value = CType(ResetStatus.Value,Boolean)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            command.Parameters(3).Value = CType(Original_UserID,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateQuery1(ByVal PasswordEncrypt As String, ByVal Original_UserID As Integer) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(15)
            If (PasswordEncrypt Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(PasswordEncrypt,String)
            End If
            command.Parameters(1).Value = CType(Original_UserID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Tbl_Lock_UsersTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Tbl_Lock_Users"
            tableMapping.ColumnMappings.Add("LoginName", "LoginName")
            tableMapping.ColumnMappings.Add("UserID", "UserID")
            tableMapping.ColumnMappings.Add("Date", "Date")
            tableMapping.ColumnMappings.Add("Status", "Status")
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("Ip", "Ip1")
            tableMapping.ColumnMappings.Add("Narration", "Narration")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE       Tbl_Lock_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                Status = ?"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (ID = ?)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.ERP_HRMS.My.MySettings.Default.HRMSCon
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        tbl_MIS_User.LoginName, Tbl_Lock_User.UserID, Tbl_Lock_User.[Date],"& _ 
                " Tbl_Lock_User.Status, Tbl_Lock_User.Ip, Tbl_Lock_User.ID, Tbl_Lock_User.Narrati"& _ 
                "on"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            Tbl_Lock_User, tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        Tbl_Lock_User.User"& _ 
                "ID = tbl_MIS_User.UserID AND (Tbl_Lock_User.Status = 1)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        tbl_MIS_User.LoginName, Tbl_Lock_User.UserID, Tbl_Lock_User.[Date],"& _ 
                " Tbl_Lock_User.Status, Tbl_Lock_User.Ip, Tbl_Lock_User.ID, Tbl_Lock_User.Narrati"& _ 
                "on"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            Tbl_Lock_User, tbl_MIS_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        Tbl_Lock_User.User"& _ 
                "ID = tbl_MIS_User.UserID AND (Tbl_Lock_User.UserID = ?) AND (Tbl_Lock_User.Statu"& _ 
                "s = 1)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "INSERT INTO Tbl_Lock_User"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (UserID, [Date], Status, Narr"& _ 
                "ation)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (?, ?, ?, ?)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Date", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Date", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Status", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Narration", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Narration", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSUser.Tbl_Lock_UsersDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSUser.Tbl_Lock_UsersDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSUser.Tbl_Lock_UsersDataTable = New DSUser.Tbl_Lock_UsersDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSUser.Tbl_Lock_UsersDataTable, ByVal UserID As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (UserID.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(UserID.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy1(ByVal UserID As Global.System.Nullable(Of Integer)) As DSUser.Tbl_Lock_UsersDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (UserID.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(UserID.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSUser.Tbl_Lock_UsersDataTable = New DSUser.Tbl_Lock_UsersDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSUser.Tbl_Lock_UsersDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSUser) As Integer
            Return Me.Adapter.Update(dataSet, "Tbl_Lock_Users")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertQuery(ByVal UserID As Global.System.Nullable(Of Integer), ByVal _Date As Global.System.Nullable(Of Date), ByVal Status As Global.System.Nullable(Of Boolean), ByVal Narration As String) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(2)
            If (UserID.HasValue = true) Then
                command.Parameters(0).Value = CType(UserID.Value,Integer)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (_Date.HasValue = true) Then
                command.Parameters(1).Value = CType(_Date.Value,Date)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Status.HasValue = true) Then
                command.Parameters(2).Value = CType(Status.Value,Boolean)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Narration Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(Narration,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tbl_MIS_User_NEWTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tbl_MIS_User_NEW"
            tableMapping.ColumnMappings.Add("UserID", "UserID")
            tableMapping.ColumnMappings.Add("LoginName", "LoginName")
            tableMapping.ColumnMappings.Add("passwd", "passwd")
            tableMapping.ColumnMappings.Add("LoginDeptID", "LoginDeptID")
            tableMapping.ColumnMappings.Add("UserSataus", "UserSataus")
            tableMapping.ColumnMappings.Add("IpAddress", "IpAddress")
            tableMapping.ColumnMappings.Add("SPStatus", "SPStatus")
            tableMapping.ColumnMappings.Add("PSWDDate", "PSWDDate")
            tableMapping.ColumnMappings.Add("Employee", "Employee")
            tableMapping.ColumnMappings.Add("HRSett", "HRSett")
            tableMapping.ColumnMappings.Add("HRRpt", "HRRpt")
            tableMapping.ColumnMappings.Add("PayRoll", "PayRoll")
            tableMapping.ColumnMappings.Add("PayRollsett", "PayRollsett")
            tableMapping.ColumnMappings.Add("PayRollRpt", "PayRollRpt")
            tableMapping.ColumnMappings.Add("Account", "Account")
            tableMapping.ColumnMappings.Add("AccSett", "AccSett")
            tableMapping.ColumnMappings.Add("AccRpt", "AccRpt")
            tableMapping.ColumnMappings.Add("Canteen", "Canteen")
            tableMapping.ColumnMappings.Add("Visitors", "Visitors")
            tableMapping.ColumnMappings.Add("COntt", "COntt")
            tableMapping.ColumnMappings.Add("UserMgt", "UserMgt")
            tableMapping.ColumnMappings.Add("ResetStatus", "ResetStatus")
            tableMapping.ColumnMappings.Add("Travel", "Travel")
            tableMapping.ColumnMappings.Add("Transport", "Transport")
            tableMapping.ColumnMappings.Add("Grievance", "Grievance")
            tableMapping.ColumnMappings.Add("vehicles", "vehicles")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tbl_MIS_User] WHERE (([UserID] = ?) AND ([LoginName] = ?) AND ((? = "& _ 
                "1 AND [passwd] IS NULL) OR ([passwd] = ?)) AND ((? = 1 AND [LoginDeptID] IS NULL"& _ 
                ") OR ([LoginDeptID] = ?)) AND ((? = 1 AND [UserSataus] IS NULL) OR ([UserSataus]"& _ 
                " = ?)) AND ((? = 1 AND [IpAddress] IS NULL) OR ([IpAddress] = ?)) AND ((? = 1 AN"& _ 
                "D [SPStatus] IS NULL) OR ([SPStatus] = ?)) AND ((? = 1 AND [PSWDDate] IS NULL) O"& _ 
                "R ([PSWDDate] = ?)) AND ((? = 1 AND [Status1] IS NULL) OR ([Status1] = ?)) AND ("& _ 
                "(? = 1 AND [Status2] IS NULL) OR ([Status2] = ?)) AND ((? = 1 AND [Status3] IS N"& _ 
                "ULL) OR ([Status3] = ?)) AND ((? = 1 AND [Status4] IS NULL) OR ([Status4] = ?)) "& _ 
                "AND ((? = 1 AND [Status5] IS NULL) OR ([Status5] = ?)) AND ((? = 1 AND [Status6]"& _ 
                " IS NULL) OR ([Status6] = ?)) AND ((? = 1 AND [Status7] IS NULL) OR ([Status7] ="& _ 
                " ?)) AND ((? = 1 AND [Status8] IS NULL) OR ([Status8] = ?)) AND ((? = 1 AND [Sta"& _ 
                "tus9] IS NULL) OR ([Status9] = ?)) AND ((? = 1 AND [Status10] IS NULL) OR ([Stat"& _ 
                "us10] = ?)) AND ((? = 1 AND [Status11] IS NULL) OR ([Status11] = ?)) AND ((? = 1"& _ 
                " AND [Status12] IS NULL) OR ([Status12] = ?)) AND ((? = 1 AND [Status13] IS NULL"& _ 
                ") OR ([Status13] = ?)) AND ((? = 1 AND [ResetStatus] IS NULL) OR ([ResetStatus] "& _ 
                "= ?)) AND ((? = 1 AND [Status14] IS NULL) OR ([Status14] = ?)) AND ((? = 1 AND ["& _ 
                "Transport] IS NULL) OR ([Transport] = ?)) AND ((? = 1 AND [Grievance] IS NULL) O"& _ 
                "R ([Grievance] = ?)) AND ((? = 1 AND [vehicles] IS NULL) OR ([vehicles] = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LoginName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_passwd", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwd", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passwd", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwd", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LoginDeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginDeptID", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LoginDeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginDeptID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_UserSataus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserSataus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UserSataus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserSataus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IpAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IpAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IpAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IpAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SPStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SPStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PSWDDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PSWDDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PSWDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PSWDDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Employee", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Employee", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Employee", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Employee", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_HRSett", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRSett", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_HRSett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRSett", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_HRRpt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRRpt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_HRRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRRpt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PayRoll", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRoll", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PayRoll", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRoll", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PayRollsett", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollsett", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PayRollsett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollsett", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PayRollRpt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollRpt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PayRollRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollRpt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Account", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Account", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Account", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Account", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AccSett", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccSett", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AccSett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccSett", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AccRpt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccRpt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AccRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccRpt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Canteen", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Canteen", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Canteen", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Canteen", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Visitors", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Visitors", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Visitors", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Visitors", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_COntt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "COntt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_COntt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "COntt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_UserMgt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserMgt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UserMgt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserMgt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ResetStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ResetStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ResetStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ResetStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Travel", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Travel", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Travel", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Travel", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Transport", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Transport", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Transport", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Transport", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Grievance", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Grievance", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Grievance", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Grievance", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_vehicles", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vehicles", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vehicles", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vehicles", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tbl_MIS_User] ([LoginName], [passwd], [LoginDeptID], [UserSataus], ["& _ 
                "IpAddress], [SPStatus], [PSWDDate], [Status1], [Status2], [Status3], [Status4], "& _ 
                "[Status5], [Status6], [Status7], [Status8], [Status9], [Status10], [Status11], ["& _ 
                "Status12], [Status13], [ResetStatus], [Status14], [Transport], [Grievance], [veh"& _ 
                "icles]) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?"& _ 
                ", ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LoginName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passwd", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwd", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LoginDeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginDeptID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserSataus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserSataus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IpAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IpAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SPStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PSWDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PSWDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Employee", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Employee", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("HRSett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRSett", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("HRRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRRpt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PayRoll", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRoll", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PayRollsett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollsett", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PayRollRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollRpt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Account", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Account", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AccSett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccSett", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AccRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccRpt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Canteen", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Canteen", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Visitors", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Visitors", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("COntt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "COntt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserMgt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserMgt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ResetStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ResetStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Travel", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Travel", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Transport", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Transport", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Grievance", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Grievance", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vehicles", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vehicles", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.Odbc.OdbcCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tbl_MIS_User] SET [LoginName] = ?, [passwd] = ?, [LoginDeptID] = ?, [User"& _ 
                "Sataus] = ?, [IpAddress] = ?, [SPStatus] = ?, [PSWDDate] = ?, [Status1] = ?, [St"& _ 
                "atus2] = ?, [Status3] = ?, [Status4] = ?, [Status5] = ?, [Status6] = ?, [Status7"& _ 
                "] = ?, [Status8] = ?, [Status9] = ?, [Status10] = ?, [Status11] = ?, [Status12] "& _ 
                "= ?, [Status13] = ?, [ResetStatus] = ?, [Status14] = ?, [Transport] = ?, [Grieva"& _ 
                "nce] = ?, [vehicles] = ? WHERE (([UserID] = ?) AND ([LoginName] = ?) AND ((? = 1"& _ 
                " AND [passwd] IS NULL) OR ([passwd] = ?)) AND ((? = 1 AND [LoginDeptID] IS NULL)"& _ 
                " OR ([LoginDeptID] = ?)) AND ((? = 1 AND [UserSataus] IS NULL) OR ([UserSataus] "& _ 
                "= ?)) AND ((? = 1 AND [IpAddress] IS NULL) OR ([IpAddress] = ?)) AND ((? = 1 AND"& _ 
                " [SPStatus] IS NULL) OR ([SPStatus] = ?)) AND ((? = 1 AND [PSWDDate] IS NULL) OR"& _ 
                " ([PSWDDate] = ?)) AND ((? = 1 AND [Status1] IS NULL) OR ([Status1] = ?)) AND (("& _ 
                "? = 1 AND [Status2] IS NULL) OR ([Status2] = ?)) AND ((? = 1 AND [Status3] IS NU"& _ 
                "LL) OR ([Status3] = ?)) AND ((? = 1 AND [Status4] IS NULL) OR ([Status4] = ?)) A"& _ 
                "ND ((? = 1 AND [Status5] IS NULL) OR ([Status5] = ?)) AND ((? = 1 AND [Status6] "& _ 
                "IS NULL) OR ([Status6] = ?)) AND ((? = 1 AND [Status7] IS NULL) OR ([Status7] = "& _ 
                "?)) AND ((? = 1 AND [Status8] IS NULL) OR ([Status8] = ?)) AND ((? = 1 AND [Stat"& _ 
                "us9] IS NULL) OR ([Status9] = ?)) AND ((? = 1 AND [Status10] IS NULL) OR ([Statu"& _ 
                "s10] = ?)) AND ((? = 1 AND [Status11] IS NULL) OR ([Status11] = ?)) AND ((? = 1 "& _ 
                "AND [Status12] IS NULL) OR ([Status12] = ?)) AND ((? = 1 AND [Status13] IS NULL)"& _ 
                " OR ([Status13] = ?)) AND ((? = 1 AND [ResetStatus] IS NULL) OR ([ResetStatus] ="& _ 
                " ?)) AND ((? = 1 AND [Status14] IS NULL) OR ([Status14] = ?)) AND ((? = 1 AND [T"& _ 
                "ransport] IS NULL) OR ([Transport] = ?)) AND ((? = 1 AND [Grievance] IS NULL) OR"& _ 
                " ([Grievance] = ?)) AND ((? = 1 AND [vehicles] IS NULL) OR ([vehicles] = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LoginName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("passwd", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwd", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("LoginDeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginDeptID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserSataus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserSataus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IpAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IpAddress", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("SPStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PSWDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PSWDDate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Employee", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Employee", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("HRSett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRSett", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("HRRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRRpt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PayRoll", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRoll", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PayRollsett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollsett", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("PayRollRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollRpt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Account", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Account", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AccSett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccSett", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("AccRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccRpt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Canteen", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Canteen", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Visitors", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Visitors", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("COntt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "COntt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("UserMgt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserMgt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ResetStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ResetStatus", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Travel", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Travel", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Transport", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Transport", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Grievance", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Grievance", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("vehicles", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vehicles", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UserID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LoginName", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_passwd", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwd", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_passwd", Global.System.Data.Odbc.OdbcType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "passwd", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_LoginDeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginDeptID", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_LoginDeptID", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "LoginDeptID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_UserSataus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserSataus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UserSataus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserSataus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_IpAddress", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IpAddress", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_IpAddress", Global.System.Data.Odbc.OdbcType.VarChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IpAddress", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_SPStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_SPStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SPStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PSWDDate", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PSWDDate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PSWDDate", Global.System.Data.Odbc.OdbcType.DateTime, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PSWDDate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Employee", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Employee", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Employee", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Employee", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_HRSett", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRSett", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_HRSett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRSett", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_HRRpt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRRpt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_HRRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HRRpt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PayRoll", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRoll", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PayRoll", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRoll", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PayRollsett", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollsett", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PayRollsett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollsett", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_PayRollRpt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollRpt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_PayRollRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PayRollRpt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Account", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Account", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Account", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Account", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AccSett", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccSett", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AccSett", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccSett", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_AccRpt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccRpt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_AccRpt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "AccRpt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Canteen", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Canteen", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Canteen", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Canteen", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Visitors", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Visitors", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Visitors", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Visitors", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_COntt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "COntt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_COntt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "COntt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_UserMgt", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserMgt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_UserMgt", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UserMgt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_ResetStatus", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ResetStatus", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_ResetStatus", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ResetStatus", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Travel", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Travel", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Travel", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Travel", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Transport", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Transport", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Transport", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Transport", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_Grievance", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Grievance", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_Grievance", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Grievance", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("IsNull_vehicles", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vehicles", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_vehicles", Global.System.Data.Odbc.OdbcType.Bit, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "vehicles", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.ERP_HRMS.My.MySettings.Default.HRMSCon
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        UserID, LoginName, passwd, LoginDeptID, UserSataus, IpAddress, SPSt"& _ 
                "atus, PSWDDate, Status1 AS Employee, Status2 AS HRSett, Status3 AS HRRpt, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                     Status4 AS PayRoll, Status5 AS PayRollsett, Status6 AS PayR"& _ 
                "ollRpt, Status7 AS Account, Status8 AS AccSett, Status9 AS AccRpt, Status10 AS C"& _ 
                "anteen, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Status11 AS Visitors, Status12 AS COntt, Stat"& _ 
                "us13 AS UserMgt, ResetStatus, Status14 AS Travel, Transport, Grievance, vehicles"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tbl_MIS_User"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSUser.tbl_MIS_User_NEWDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSUser.tbl_MIS_User_NEWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSUser.tbl_MIS_User_NEWDataTable = New DSUser.tbl_MIS_User_NEWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSUser.tbl_MIS_User_NEWDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSUser) As Integer
            Return Me.Adapter.Update(dataSet, "tbl_MIS_User_NEW")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_UserID As Integer,  _
                    ByVal Original_LoginName As String,  _
                    ByVal Original_passwd As String,  _
                    ByVal Original_LoginDeptID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_UserSataus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IpAddress As String,  _
                    ByVal Original_SPStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PSWDDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_Employee As Boolean,  _
                    ByVal Original_HRSett As Boolean,  _
                    ByVal Original_HRRpt As Boolean,  _
                    ByVal Original_PayRoll As Boolean,  _
                    ByVal Original_PayRollsett As Boolean,  _
                    ByVal Original_PayRollRpt As Boolean,  _
                    ByVal Original_Account As Boolean,  _
                    ByVal Original_AccSett As Boolean,  _
                    ByVal Original_AccRpt As Boolean,  _
                    ByVal Original_Canteen As Boolean,  _
                    ByVal Original_Visitors As Boolean,  _
                    ByVal Original_COntt As Boolean,  _
                    ByVal Original_UserMgt As Boolean,  _
                    ByVal Original_ResetStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Travel As Boolean,  _
                    ByVal Original_Transport As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Grievance As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_vehicles As Global.System.Nullable(Of Boolean)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_UserID,Integer)
            If (Original_LoginName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LoginName")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_LoginName,String)
            End If
            If (Original_passwd Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_passwd,String)
            End If
            If (Original_LoginDeptID.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_LoginDeptID.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_UserSataus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_UserSataus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_IpAddress Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_IpAddress,String)
            End If
            If (Original_SPStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_SPStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_PSWDDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_PSWDDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_Employee,Boolean)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_HRSett,Boolean)
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_HRRpt,Boolean)
            Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_PayRoll,Boolean)
            Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_PayRollsett,Boolean)
            Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_PayRollRpt,Boolean)
            Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_Account,Boolean)
            Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_AccSett,Boolean)
            Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_AccRpt,Boolean)
            Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_Canteen,Boolean)
            Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_Visitors,Boolean)
            Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_COntt,Boolean)
            Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_UserMgt,Boolean)
            If (Original_ResetStatus.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_ResetStatus.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_Travel,Boolean)
            If (Original_Transport.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_Transport.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_Grievance.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_Grievance.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_vehicles.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_vehicles.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal LoginName As String,  _
                    ByVal passwd As String,  _
                    ByVal LoginDeptID As Global.System.Nullable(Of Integer),  _
                    ByVal UserSataus As Global.System.Nullable(Of Boolean),  _
                    ByVal IpAddress As String,  _
                    ByVal SPStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PSWDDate As Global.System.Nullable(Of Date),  _
                    ByVal Employee As Boolean,  _
                    ByVal HRSett As Boolean,  _
                    ByVal HRRpt As Boolean,  _
                    ByVal PayRoll As Boolean,  _
                    ByVal PayRollsett As Boolean,  _
                    ByVal PayRollRpt As Boolean,  _
                    ByVal Account As Boolean,  _
                    ByVal AccSett As Boolean,  _
                    ByVal AccRpt As Boolean,  _
                    ByVal Canteen As Boolean,  _
                    ByVal Visitors As Boolean,  _
                    ByVal COntt As Boolean,  _
                    ByVal UserMgt As Boolean,  _
                    ByVal ResetStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Travel As Boolean,  _
                    ByVal Transport As Global.System.Nullable(Of Boolean),  _
                    ByVal Grievance As Global.System.Nullable(Of Boolean),  _
                    ByVal vehicles As Global.System.Nullable(Of Boolean)) As Integer
            If (LoginName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LoginName")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(LoginName,String)
            End If
            If (passwd Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(passwd,String)
            End If
            If (LoginDeptID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(LoginDeptID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (UserSataus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(UserSataus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (IpAddress Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(IpAddress,String)
            End If
            If (SPStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(SPStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (PSWDDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PSWDDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(Employee,Boolean)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(HRSett,Boolean)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(HRRpt,Boolean)
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(PayRoll,Boolean)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(PayRollsett,Boolean)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(PayRollRpt,Boolean)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(Account,Boolean)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(AccSett,Boolean)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(AccRpt,Boolean)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(Canteen,Boolean)
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(Visitors,Boolean)
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(COntt,Boolean)
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(UserMgt,Boolean)
            If (ResetStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(ResetStatus.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(Travel,Boolean)
            If (Transport.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(Transport.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Grievance.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(Grievance.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (vehicles.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(vehicles.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal LoginName As String,  _
                    ByVal passwd As String,  _
                    ByVal LoginDeptID As Global.System.Nullable(Of Integer),  _
                    ByVal UserSataus As Global.System.Nullable(Of Boolean),  _
                    ByVal IpAddress As String,  _
                    ByVal SPStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal PSWDDate As Global.System.Nullable(Of Date),  _
                    ByVal Employee As Boolean,  _
                    ByVal HRSett As Boolean,  _
                    ByVal HRRpt As Boolean,  _
                    ByVal PayRoll As Boolean,  _
                    ByVal PayRollsett As Boolean,  _
                    ByVal PayRollRpt As Boolean,  _
                    ByVal Account As Boolean,  _
                    ByVal AccSett As Boolean,  _
                    ByVal AccRpt As Boolean,  _
                    ByVal Canteen As Boolean,  _
                    ByVal Visitors As Boolean,  _
                    ByVal COntt As Boolean,  _
                    ByVal UserMgt As Boolean,  _
                    ByVal ResetStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Travel As Boolean,  _
                    ByVal Transport As Global.System.Nullable(Of Boolean),  _
                    ByVal Grievance As Global.System.Nullable(Of Boolean),  _
                    ByVal vehicles As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_UserID As Integer,  _
                    ByVal Original_LoginName As String,  _
                    ByVal Original_passwd As String,  _
                    ByVal Original_LoginDeptID As Global.System.Nullable(Of Integer),  _
                    ByVal Original_UserSataus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IpAddress As String,  _
                    ByVal Original_SPStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PSWDDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_Employee As Boolean,  _
                    ByVal Original_HRSett As Boolean,  _
                    ByVal Original_HRRpt As Boolean,  _
                    ByVal Original_PayRoll As Boolean,  _
                    ByVal Original_PayRollsett As Boolean,  _
                    ByVal Original_PayRollRpt As Boolean,  _
                    ByVal Original_Account As Boolean,  _
                    ByVal Original_AccSett As Boolean,  _
                    ByVal Original_AccRpt As Boolean,  _
                    ByVal Original_Canteen As Boolean,  _
                    ByVal Original_Visitors As Boolean,  _
                    ByVal Original_COntt As Boolean,  _
                    ByVal Original_UserMgt As Boolean,  _
                    ByVal Original_ResetStatus As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Travel As Boolean,  _
                    ByVal Original_Transport As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_Grievance As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_vehicles As Global.System.Nullable(Of Boolean)) As Integer
            If (LoginName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LoginName")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(LoginName,String)
            End If
            If (passwd Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(passwd,String)
            End If
            If (LoginDeptID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(LoginDeptID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (UserSataus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(UserSataus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (IpAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(IpAddress,String)
            End If
            If (SPStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(SPStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (PSWDDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(PSWDDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Employee,Boolean)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(HRSett,Boolean)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(HRRpt,Boolean)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(PayRoll,Boolean)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(PayRollsett,Boolean)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(PayRollRpt,Boolean)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Account,Boolean)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(AccSett,Boolean)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(AccRpt,Boolean)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Canteen,Boolean)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Visitors,Boolean)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(COntt,Boolean)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(UserMgt,Boolean)
            If (ResetStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(ResetStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Travel,Boolean)
            If (Transport.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Transport.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Grievance.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Grievance.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (vehicles.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(vehicles.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_UserID,Integer)
            If (Original_LoginName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LoginName")
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_LoginName,String)
            End If
            If (Original_passwd Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_passwd,String)
            End If
            If (Original_LoginDeptID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_LoginDeptID.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_UserSataus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_UserSataus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_IpAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_IpAddress,String)
            End If
            If (Original_SPStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_SPStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_PSWDDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_PSWDDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_Employee,Boolean)
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_HRSett,Boolean)
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_HRRpt,Boolean)
            Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_PayRoll,Boolean)
            Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_PayRollsett,Boolean)
            Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_PayRollRpt,Boolean)
            Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_Account,Boolean)
            Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_AccSett,Boolean)
            Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_AccRpt,Boolean)
            Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_Canteen,Boolean)
            Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_Visitors,Boolean)
            Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_COntt,Boolean)
            Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_UserMgt,Boolean)
            If (Original_ResetStatus.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_ResetStatus.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_Travel,Boolean)
            If (Original_Transport.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_Transport.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_Grievance.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_Grievance.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_vehicles.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_vehicles.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _tbl_MIS_User_DeptTableAdapter As tbl_MIS_User_DeptTableAdapter
        
        Private _tbl_MIS_UserTableAdapter As tbl_MIS_UserTableAdapter
        
        Private _tbl_HRM_App_AuthorityTableAdapter As tbl_HRM_App_AuthorityTableAdapter
        
        Private _tbl_Comp_InfoTableAdapter As tbl_Comp_InfoTableAdapter
        
        Private _tbl_Log_ShiftTableAdapter As tbl_Log_ShiftTableAdapter
        
        Private _tbl_MIS_User_LogTableAdapter As tbl_MIS_User_LogTableAdapter
        
        Private _tbl_Acc_FinancialPeriodTableAdapter As tbl_Acc_FinancialPeriodTableAdapter
        
        Private _usersTableAdapter As UsersTableAdapter
        
        Private _tbl_Lock_UsersTableAdapter As Tbl_Lock_UsersTableAdapter
        
        Private _tbl_MIS_User_NEWTableAdapter As tbl_MIS_User_NEWTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_MIS_User_DeptTableAdapter() As tbl_MIS_User_DeptTableAdapter
            Get
                Return Me._tbl_MIS_User_DeptTableAdapter
            End Get
            Set
                Me._tbl_MIS_User_DeptTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_MIS_UserTableAdapter() As tbl_MIS_UserTableAdapter
            Get
                Return Me._tbl_MIS_UserTableAdapter
            End Get
            Set
                Me._tbl_MIS_UserTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_HRM_App_AuthorityTableAdapter() As tbl_HRM_App_AuthorityTableAdapter
            Get
                Return Me._tbl_HRM_App_AuthorityTableAdapter
            End Get
            Set
                Me._tbl_HRM_App_AuthorityTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_Comp_InfoTableAdapter() As tbl_Comp_InfoTableAdapter
            Get
                Return Me._tbl_Comp_InfoTableAdapter
            End Get
            Set
                Me._tbl_Comp_InfoTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_Log_ShiftTableAdapter() As tbl_Log_ShiftTableAdapter
            Get
                Return Me._tbl_Log_ShiftTableAdapter
            End Get
            Set
                Me._tbl_Log_ShiftTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_MIS_User_LogTableAdapter() As tbl_MIS_User_LogTableAdapter
            Get
                Return Me._tbl_MIS_User_LogTableAdapter
            End Get
            Set
                Me._tbl_MIS_User_LogTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_Acc_FinancialPeriodTableAdapter() As tbl_Acc_FinancialPeriodTableAdapter
            Get
                Return Me._tbl_Acc_FinancialPeriodTableAdapter
            End Get
            Set
                Me._tbl_Acc_FinancialPeriodTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property UsersTableAdapter() As UsersTableAdapter
            Get
                Return Me._usersTableAdapter
            End Get
            Set
                Me._usersTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Tbl_Lock_UsersTableAdapter() As Tbl_Lock_UsersTableAdapter
            Get
                Return Me._tbl_Lock_UsersTableAdapter
            End Get
            Set
                Me._tbl_Lock_UsersTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tbl_MIS_User_NEWTableAdapter() As tbl_MIS_User_NEWTableAdapter
            Get
                Return Me._tbl_MIS_User_NEWTableAdapter
            End Get
            Set
                Me._tbl_MIS_User_NEWTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._tbl_MIS_User_DeptTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_MIS_User_DeptTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_MIS_User_DeptTableAdapter.Connection
                End If
                If ((Not (Me._tbl_MIS_UserTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_MIS_UserTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_MIS_UserTableAdapter.Connection
                End If
                If ((Not (Me._tbl_HRM_App_AuthorityTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_HRM_App_AuthorityTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_HRM_App_AuthorityTableAdapter.Connection
                End If
                If ((Not (Me._tbl_Comp_InfoTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_Comp_InfoTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_Comp_InfoTableAdapter.Connection
                End If
                If ((Not (Me._tbl_Log_ShiftTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_Log_ShiftTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_Log_ShiftTableAdapter.Connection
                End If
                If ((Not (Me._tbl_MIS_User_LogTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_MIS_User_LogTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_MIS_User_LogTableAdapter.Connection
                End If
                If ((Not (Me._tbl_Acc_FinancialPeriodTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_Acc_FinancialPeriodTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_Acc_FinancialPeriodTableAdapter.Connection
                End If
                If ((Not (Me._usersTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._usersTableAdapter.Connection) Is Nothing)) Then
                    Return Me._usersTableAdapter.Connection
                End If
                If ((Not (Me._tbl_Lock_UsersTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_Lock_UsersTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_Lock_UsersTableAdapter.Connection
                End If
                If ((Not (Me._tbl_MIS_User_NEWTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_MIS_User_NEWTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_MIS_User_NEWTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._tbl_MIS_User_DeptTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_MIS_UserTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_HRM_App_AuthorityTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_Comp_InfoTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_Log_ShiftTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_MIS_User_LogTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_Acc_FinancialPeriodTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._usersTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_Lock_UsersTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_MIS_User_NEWTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DSUser, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tbl_MIS_User_DeptTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_MIS_User_Dept.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_MIS_User_DeptTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_MIS_UserTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_MIS_User.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_MIS_UserTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_HRM_App_AuthorityTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_HRM_App_Authority.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_HRM_App_AuthorityTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_Comp_InfoTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_Comp_Info.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_Comp_InfoTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_Log_ShiftTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_Log_Shift.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_Log_ShiftTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_MIS_User_LogTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_MIS_User_Log.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_MIS_User_LogTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_Acc_FinancialPeriodTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_Acc_FinancialPeriod.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_Acc_FinancialPeriodTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._usersTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Users.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._usersTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_Lock_UsersTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Tbl_Lock_Users.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_Lock_UsersTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_MIS_User_NEWTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tbl_MIS_User_NEW.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_MIS_User_NEWTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DSUser, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tbl_MIS_User_DeptTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_MIS_User_Dept.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_MIS_User_DeptTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_MIS_UserTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_MIS_User.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_MIS_UserTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_HRM_App_AuthorityTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_HRM_App_Authority.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_HRM_App_AuthorityTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_Comp_InfoTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_Comp_Info.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_Comp_InfoTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_Log_ShiftTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_Log_Shift.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_Log_ShiftTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_MIS_User_LogTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_MIS_User_Log.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_MIS_User_LogTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_Acc_FinancialPeriodTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_Acc_FinancialPeriod.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_Acc_FinancialPeriodTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._usersTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Users.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._usersTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_Lock_UsersTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Tbl_Lock_Users.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_Lock_UsersTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_MIS_User_NEWTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tbl_MIS_User_NEW.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_MIS_User_NEWTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DSUser, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tbl_MIS_User_NEWTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_MIS_User_NEW.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_MIS_User_NEWTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_Lock_UsersTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Tbl_Lock_Users.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_Lock_UsersTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._usersTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Users.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._usersTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_Acc_FinancialPeriodTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_Acc_FinancialPeriod.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_Acc_FinancialPeriodTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_MIS_User_LogTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_MIS_User_Log.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_MIS_User_LogTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_Log_ShiftTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_Log_Shift.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_Log_ShiftTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_Comp_InfoTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_Comp_Info.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_Comp_InfoTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_HRM_App_AuthorityTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_HRM_App_Authority.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_HRM_App_AuthorityTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_MIS_UserTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_MIS_User.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_MIS_UserTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_MIS_User_DeptTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tbl_MIS_User_Dept.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_MIS_User_DeptTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DSUser) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._tbl_MIS_User_DeptTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_MIS_User_DeptTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_MIS_UserTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_MIS_UserTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_HRM_App_AuthorityTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_HRM_App_AuthorityTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_Comp_InfoTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_Comp_InfoTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_Log_ShiftTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_Log_ShiftTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_MIS_User_LogTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_MIS_User_LogTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_Acc_FinancialPeriodTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_Acc_FinancialPeriodTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._usersTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._usersTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_Lock_UsersTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_Lock_UsersTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tbl_MIS_User_NEWTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tbl_MIS_User_NEWTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._tbl_MIS_User_DeptTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_MIS_User_DeptTableAdapter, Me._tbl_MIS_User_DeptTableAdapter.Connection)
                    Me._tbl_MIS_User_DeptTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_MIS_User_DeptTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._tbl_MIS_User_DeptTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_MIS_User_DeptTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_MIS_User_DeptTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_MIS_UserTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_MIS_UserTableAdapter, Me._tbl_MIS_UserTableAdapter.Connection)
                    Me._tbl_MIS_UserTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_MIS_UserTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._tbl_MIS_UserTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_MIS_UserTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_MIS_UserTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_HRM_App_AuthorityTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_HRM_App_AuthorityTableAdapter, Me._tbl_HRM_App_AuthorityTableAdapter.Connection)
                    Me._tbl_HRM_App_AuthorityTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_HRM_App_AuthorityTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._tbl_HRM_App_AuthorityTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_HRM_App_AuthorityTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_HRM_App_AuthorityTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_Comp_InfoTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_Comp_InfoTableAdapter, Me._tbl_Comp_InfoTableAdapter.Connection)
                    Me._tbl_Comp_InfoTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Comp_InfoTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._tbl_Comp_InfoTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_Comp_InfoTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_Comp_InfoTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_Log_ShiftTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_Log_ShiftTableAdapter, Me._tbl_Log_ShiftTableAdapter.Connection)
                    Me._tbl_Log_ShiftTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Log_ShiftTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._tbl_Log_ShiftTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_Log_ShiftTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_Log_ShiftTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_MIS_User_LogTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_MIS_User_LogTableAdapter, Me._tbl_MIS_User_LogTableAdapter.Connection)
                    Me._tbl_MIS_User_LogTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_MIS_User_LogTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._tbl_MIS_User_LogTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_MIS_User_LogTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_MIS_User_LogTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_Acc_FinancialPeriodTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_Acc_FinancialPeriodTableAdapter, Me._tbl_Acc_FinancialPeriodTableAdapter.Connection)
                    Me._tbl_Acc_FinancialPeriodTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Acc_FinancialPeriodTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._tbl_Acc_FinancialPeriodTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_Acc_FinancialPeriodTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_Acc_FinancialPeriodTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._usersTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._usersTableAdapter, Me._usersTableAdapter.Connection)
                    Me._usersTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._usersTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._usersTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._usersTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._usersTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_Lock_UsersTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_Lock_UsersTableAdapter, Me._tbl_Lock_UsersTableAdapter.Connection)
                    Me._tbl_Lock_UsersTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Lock_UsersTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._tbl_Lock_UsersTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_Lock_UsersTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_Lock_UsersTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_MIS_User_NEWTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_MIS_User_NEWTableAdapter, Me._tbl_MIS_User_NEWTableAdapter.Connection)
                    Me._tbl_MIS_User_NEWTableAdapter.Connection = CType(workConnection,Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_MIS_User_NEWTableAdapter.Transaction = CType(workTransaction,Global.System.Data.Odbc.OdbcTransaction)
                    If Me._tbl_MIS_User_NEWTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_MIS_User_NEWTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_MIS_User_NEWTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._tbl_MIS_User_DeptTableAdapter) Is Nothing) Then
                    Me._tbl_MIS_User_DeptTableAdapter.Connection = CType(revertConnections(Me._tbl_MIS_User_DeptTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_MIS_User_DeptTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_MIS_UserTableAdapter) Is Nothing) Then
                    Me._tbl_MIS_UserTableAdapter.Connection = CType(revertConnections(Me._tbl_MIS_UserTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_MIS_UserTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_HRM_App_AuthorityTableAdapter) Is Nothing) Then
                    Me._tbl_HRM_App_AuthorityTableAdapter.Connection = CType(revertConnections(Me._tbl_HRM_App_AuthorityTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_HRM_App_AuthorityTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_Comp_InfoTableAdapter) Is Nothing) Then
                    Me._tbl_Comp_InfoTableAdapter.Connection = CType(revertConnections(Me._tbl_Comp_InfoTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Comp_InfoTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_Log_ShiftTableAdapter) Is Nothing) Then
                    Me._tbl_Log_ShiftTableAdapter.Connection = CType(revertConnections(Me._tbl_Log_ShiftTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Log_ShiftTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_MIS_User_LogTableAdapter) Is Nothing) Then
                    Me._tbl_MIS_User_LogTableAdapter.Connection = CType(revertConnections(Me._tbl_MIS_User_LogTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_MIS_User_LogTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_Acc_FinancialPeriodTableAdapter) Is Nothing) Then
                    Me._tbl_Acc_FinancialPeriodTableAdapter.Connection = CType(revertConnections(Me._tbl_Acc_FinancialPeriodTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Acc_FinancialPeriodTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._usersTableAdapter) Is Nothing) Then
                    Me._usersTableAdapter.Connection = CType(revertConnections(Me._usersTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._usersTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_Lock_UsersTableAdapter) Is Nothing) Then
                    Me._tbl_Lock_UsersTableAdapter.Connection = CType(revertConnections(Me._tbl_Lock_UsersTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_Lock_UsersTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_MIS_User_NEWTableAdapter) Is Nothing) Then
                    Me._tbl_MIS_User_NEWTableAdapter.Connection = CType(revertConnections(Me._tbl_MIS_User_NEWTableAdapter),Global.System.Data.Odbc.OdbcConnection)
                    Me._tbl_MIS_User_NEWTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
